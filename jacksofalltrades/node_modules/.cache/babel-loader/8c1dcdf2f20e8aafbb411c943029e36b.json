{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/lmore/OneDrive/Documents/GitHub/JacksOfAllTrades/jacksofalltrades/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport { debounce } from \"debounce\";\nimport { createElement, removeElement } from \"../utils\";\nimport { createErrorIcon } from \"./icons\";\nimport { createEditIcon, createPopupStep1Icon, createPopupStep2Icon, createPopupStep3Icon, createPopupStep4Icon, createTrashIcon, createDeleteSuccessIcon, createCloseIcon } from \"./icons\";\nexport function AmplifyGeofenceControlUI(geofenceControl, geofenceControlContainer) {\n  var _addGeofenceContainer;\n\n  var _deleteGeofenceContainer;\n\n  var _addGeofencebutton;\n\n  var _checkboxAll;\n\n  var _geofenceList;\n\n  var _createContainer;\n\n  var _geofenceTitle;\n\n  var _checkBoxAllAndCreateContainer;\n\n  var _checkBoxAllContainer;\n\n  var _circleModeContainer;\n\n  var _polygonModeContainer;\n\n  var _deletePopdownContainer;\n\n  var _errorDiv;\n\n  var _geofenceCreateRadiusInput;\n\n  function registerControlPosition(map, positionName) {\n    if (map._controlPositions[positionName]) {\n      return;\n    }\n\n    var positionContainer = document.createElement(\"div\");\n    positionContainer.className = \"maplibregl-ctrl-\".concat(positionName);\n\n    map._controlContainer.appendChild(positionContainer);\n\n    map._controlPositions[positionName] = positionContainer;\n  }\n  /************************************************************\n   * Create Geofence Controls\n   *************************************************************/\n\n\n  function createGeofenceCreateContainer(isCircle) {\n    var container = createElement(\"div\", \"geofence-ctrl-create-prompt-container\", geofenceControlContainer);\n    _createContainer = createElement(\"div\", \"geofence-ctrl-create-prompt\", container);\n\n    if (isCircle) {\n      /* Create buttons to switch between different modes */\n      var buttonContainer = createElement(\"div\", \"geofence-ctrl-create-prompt-buttons\", _createContainer);\n      var circleModeButton = createElement(\"div\", \"geofence-ctrl-create-prompt-button-circle geofence-ctrl-create-prompt-button\", buttonContainer);\n      circleModeButton.addEventListener(\"click\", function () {\n        // Change button selected style\n        circleModeButton.classList.add(\"geofence-ctrl-create-prompt-selected\");\n        polygonModeButton.classList.remove(\"geofence-ctrl-create-prompt-selected\"); // Switch info box mode\n\n        if (_polygonModeContainer) {\n          removeElement(_polygonModeContainer);\n          _polygonModeContainer = undefined;\n        }\n\n        if (!_circleModeContainer) createCircleModeCreateContainer(_createContainer);\n        geofenceControl.changeMode(\"draw_circle\");\n      });\n      circleModeButton.innerHTML = \"Circle\";\n      var polygonModeButton = createElement(\"div\", \"geofence-ctrl-create-prompt-button-polygon geofence-ctrl-create-prompt-button\", buttonContainer);\n      polygonModeButton.addEventListener(\"click\", function () {\n        geofenceControl.changeMode(\"draw_polygon\"); // Change button selected style\n\n        polygonModeButton.classList.add(\"geofence-ctrl-create-prompt-selected\");\n        circleModeButton.classList.remove(\"geofence-ctrl-create-prompt-selected\"); // Switch info box mode\n\n        if (_circleModeContainer) {\n          removeElement(_circleModeContainer);\n          _circleModeContainer = undefined;\n        }\n\n        if (!_polygonModeContainer) createPolygonModeCreateContainer(_createContainer);\n      });\n      polygonModeButton.innerHTML = \"Custom\";\n      circleModeButton.classList.add(\"geofence-ctrl-create-prompt-selected\");\n      createCircleModeCreateContainer(_createContainer);\n    } else {\n      createPolygonModeCreateContainer(_createContainer);\n    }\n  }\n\n  function createCircleModeCreateContainer(container) {\n    _circleModeContainer = createElement(\"div\", \"geofence-ctrl-create-circle-mode-container\", container);\n    var radiusTitle = createElement(\"div\", \"geofence-ctrl-create-circle-mode-title\", _circleModeContainer);\n    radiusTitle.innerHTML = \"Radius\";\n    _geofenceCreateRadiusInput = createElement(\"input\", \"geofence-ctrl-create-circle-mode-input\", _circleModeContainer);\n\n    _geofenceCreateRadiusInput.addEventListener(\"keydown\", debounce(geofenceControl.updateInputRadius, 200));\n  }\n\n  function createPolygonModeCreateContainer(container) {\n    _polygonModeContainer = createElement(\"div\", \"geofence-ctrl-create-polygon-mode-container\", container);\n    var moreInfoContainer = createElement(\"div\", \"geofence-ctrl-create-polygon-mode-info-container\", _polygonModeContainer);\n    var moreInfoIcon = createElement(\"div\", \"geofence-ctrl-create-polygon-mode-icon\", moreInfoContainer);\n    var letterI = createElement(\"div\", \"geofence-ctrl-create-polygon-mode-info-icon\", moreInfoIcon);\n    letterI.innerHTML = \"i\";\n    var moreInfo = createElement(\"div\", \"geofence-ctrl-create-polygon-mode-title\", moreInfoContainer);\n    moreInfo.innerHTML = \"How it works?\";\n    var resetButton = createElement(\"div\", \"geofence-ctrl-create-polygon-mode-reset-button geofence-ctrl-button\", _polygonModeContainer);\n    resetButton.innerHTML = \"Reset\";\n    resetButton.addEventListener(\"click\", function () {\n      geofenceControl.resetGeofence();\n    }); // Add popup onClick\n\n    var popup = createPolygonModeInfoPopup(moreInfoIcon);\n    moreInfoContainer.addEventListener(\"click\", function () {\n      popup.classList.toggle(\"show\");\n    });\n  }\n\n  function createPolygonModeInfoPopup(container) {\n    var popupContainer = createElement(\"div\", \"geofence-ctrl-create-polygon-mode-popup-container\", container);\n    var popup = createElement(\"div\", \"geofence-ctrl-create-polygon-mode-popup\", popupContainer);\n    createPopupStep(popup, \"Move dots to desired position\", createPopupStep1Icon());\n    createPopupStep(popup, \"Click on a border to create a dot\", createPopupStep2Icon());\n    createPopupStep(popup, \"Click into shape to move\", createPopupStep3Icon());\n    createPopupStep(popup, \"Press delete to remove a dot\", createPopupStep4Icon());\n    return popup;\n  }\n\n  function createPopupStep(container, text, image) {\n    var popupStep = createElement(\"div\", \"geofence-ctrl-create-polygon-mode-popup-step\", container);\n    var popupStepImage = createElement(\"div\", \"geofence-ctrl-create-polygon-mode-popup-step-image\", popupStep);\n    popupStepImage.appendChild(image);\n    var popupStepText = createElement(\"div\", \"geofence-ctrl-create-polygon-mode-popup-step-text\", popupStep);\n    popupStepText.innerHTML = text;\n  }\n\n  function removeGeofenceCreateContainer() {\n    removeElement(_createContainer);\n    _createContainer = undefined;\n    _circleModeContainer = undefined;\n    _polygonModeContainer = undefined;\n  }\n  /************************************************************\n   * Geofence List\n   *************************************************************/\n\n\n  function createGeofenceListContainer() {\n    var geofenceListContainer = createElement(\"div\", \"geofence-ctrl-list-container\", geofenceControlContainer);\n    createGeofenceListHeader(geofenceListContainer);\n    _geofenceList = createElement(\"div\", \"geofence-ctrl-list\", geofenceListContainer);\n\n    _geofenceList.addEventListener(\"scroll\", function () {\n      var _geofenceList2 = _geofenceList,\n          scrollHeight = _geofenceList2.scrollHeight,\n          scrollTop = _geofenceList2.scrollTop,\n          clientHeight = _geofenceList2.clientHeight;\n\n      if (scrollTop + clientHeight >= scrollHeight - 20) {\n        geofenceControl.loadMoreGeofences();\n      }\n    });\n  }\n\n  function createGeofenceListHeader(geofenceListContainer) {\n    var header = createElement(\"div\", \"geofence-ctrl-list-header\", geofenceListContainer);\n    _geofenceTitle = createElement(\"div\", \"geofence-ctrl-list-header-title\", header);\n    _geofenceTitle.innerHTML = \"Geofences (0)\";\n    _checkBoxAllAndCreateContainer = createElement(\"div\", \"geofence-ctrl-list-header-checkbox-create-container\", header);\n    createCheckboxAllContainer(_checkBoxAllAndCreateContainer);\n  }\n\n  function createCheckboxAllContainer(geofenceListContainer) {\n    _checkBoxAllContainer = createElement(\"div\", \"geofence-ctrl-list-checkbox-all-container\", geofenceListContainer);\n    _checkboxAll = createElement(\"input\", \"geofence-ctrl-list-checkbox-all\", _checkBoxAllContainer);\n    _checkboxAll.type = \"checkbox\";\n\n    _checkboxAll.addEventListener(\"click\", function () {\n      if (_checkboxAll.checked) {\n        geofenceControl.displayAllGeofences();\n        checkboxAllText.innerHTML = \"Deselect All\";\n      } else {\n        geofenceControl.hideAllGeofences();\n        checkboxAllText.innerHTML = \"Select All\";\n      }\n    });\n\n    var checkboxAllText = createElement(\"div\", \"geofence-ctrl-list-checkbox-all-title\", _checkBoxAllContainer);\n    checkboxAllText.innerHTML = \"Select all\";\n    _addGeofencebutton = createElement(\"div\", \"geofence-ctrl-list-header-add-button\", _checkBoxAllContainer);\n    _addGeofencebutton.innerHTML = \"+ Add\";\n\n    _addGeofencebutton.addEventListener(\"click\", function () {\n      createAddGeofenceContainer();\n    });\n  }\n\n  function renderListItem(geofence) {\n    var container = createElement(\"li\", \"geofence-ctrl-list-item-container\", _geofenceList);\n    container.id = \"list-item-\".concat(geofence.geofenceId);\n    var listItem = createElement(\"li\", \"geofence-ctrl-list-item\", container);\n    var leftContainer = createElement(\"div\", \"geofence-ctrl-list-item-left-container\", listItem);\n    var checkbox = createElement(\"input\", \"geofence-ctrl-list-item-checkbox\", leftContainer);\n    checkbox.id = \"list-item-checkbox-\".concat(geofence.geofenceId);\n    checkbox.type = \"checkbox\";\n    checkbox.addEventListener(\"click\", function () {\n      if (checkbox.checked) {\n        geofenceControl.displayGeofence(geofence.geofenceId);\n        geofenceControl.fitGeofence(geofence.geofenceId);\n      } else {\n        geofenceControl.hideGeofence(geofence.geofenceId);\n      }\n    });\n    var rightContainer = createElement(\"div\", \"geofence-ctrl-list-item-right-container\", listItem);\n    var geofenceTitleContainer = createElement(\"div\", \"geofence-ctrl-list-item-title-container\", rightContainer);\n    geofenceTitleContainer.addEventListener(\"mouseover\", function () {\n      geofenceControl.displayHighlightedGeofence(geofence.geofenceId);\n    });\n    geofenceTitleContainer.addEventListener(\"mouseout\", function () {\n      geofenceControl.hideHighlightedGeofence();\n    });\n    var geofenceTitle = createElement(\"div\", \"geofence-ctrl-list-item-title\", geofenceTitleContainer);\n    geofenceTitle.innerHTML = geofence.geofenceId;\n    var editButton = createElement(\"div\", \"geofence-ctrl-edit-button\", geofenceTitleContainer);\n    editButton.addEventListener(\"click\", function () {\n      geofenceControl.editGeofence(geofence.geofenceId);\n      createEditControls(listItem, rightContainer, leftContainer, geofence.geofenceId);\n      listItem.classList.remove(\"geofence-ctrl-list-item\");\n      listItem.classList.add(\"geofence-ctrl-list-selected-item\");\n    });\n    editButton.appendChild(createEditIcon());\n  }\n\n  function createEditControls(item, rightContainer, leftContainer, id) {\n    var _this = this;\n\n    var editContainer = createElement(\"div\", \"geofence-ctrl-list-item-controls\", rightContainer);\n    var deleteButton = renderDeleteButton(leftContainer, id);\n\n    var removeEditContainer = function removeEditContainer() {\n      item.classList.remove(\"geofence-ctrl-list-selected-item\");\n      item.classList.add(\"geofence-ctrl-list-item\");\n      removeElement(editContainer);\n      removeElement(deleteButton);\n    };\n\n    var cancelButton = createElement(\"div\", \"geofence-ctrl-cancel-button\", editContainer);\n    cancelButton.classList.add(\"geofence-ctrl-button\");\n    cancelButton.innerHTML = \"Cancel\";\n    cancelButton.addEventListener(\"click\", function () {\n      geofenceControl.setEditingModeEnabled(false);\n      removeEditContainer();\n    });\n    var saveGeofenceButton = createElement(\"div\", \"geofence-ctrl-save-button geofence-ctrl-button\", editContainer);\n    saveGeofenceButton.addEventListener(\"click\", function () {\n      return __awaiter(_this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return geofenceControl.saveGeofence();\n\n              case 2:\n                removeEditContainer();\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n    });\n    saveGeofenceButton.title = \"Save\";\n    saveGeofenceButton.innerHTML = \"Save\";\n  }\n  /************************************************************\n   * Add Geofence Controls\n   *************************************************************/\n\n\n  function removeAddGeofenceContainer() {\n    removeElement(_addGeofenceContainer);\n    clearAddGeofenceError();\n    showCheckboxAllContainer();\n  }\n\n  function clearAddGeofenceError() {\n    if (_errorDiv) {\n      removeElement(_errorDiv);\n      _errorDiv = undefined;\n    }\n  }\n\n  function createAddGeofenceContainer() {\n    hideCheckboxAllContainer();\n    _addGeofenceContainer = createElement(\"div\", \"geofence-ctrl-add-geofence-container\", _checkBoxAllAndCreateContainer);\n    var addGeofencePrompt = createElement(\"div\", \"geofence-ctrl-add-geofence\", _addGeofenceContainer);\n    var nameInput = createElement(\"input\", \"geofence-ctrl-add-geofence-input\", addGeofencePrompt);\n    nameInput.placeholder = \"Enter name\";\n    var buttonContainer = createElement(\"div\", \"geofence-ctrl-add-geofence-buttons\", addGeofencePrompt);\n    var cancelButton = createElement(\"div\", \"geofence-ctrl-add-geofence-cancel-button geofence-ctrl-button \", buttonContainer);\n    cancelButton.innerHTML = \"Cancel\";\n    cancelButton.addEventListener(\"click\", function () {\n      removeAddGeofenceContainer();\n      geofenceControl.setEditingModeEnabled(false);\n    });\n    var saveButton = createElement(\"div\", \"geofence-ctrl-button geofence-ctrl-save-button\", buttonContainer);\n    saveButton.innerHTML = \"Save\";\n    saveButton.addEventListener(\"click\", function () {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var output;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                clearAddGeofenceError();\n                _context2.next = 3;\n                return geofenceControl.createGeofence(escape(nameInput.value));\n\n              case 3:\n                output = _context2.sent;\n                if (output) removeAddGeofenceContainer();\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n    });\n    geofenceControl.addEditableGeofence();\n  }\n\n  function createAddGeofencePromptError(error) {\n    if (_errorDiv) {\n      return;\n    }\n\n    _errorDiv = createElement(\"div\", \"geofence-ctrl-add-geofence-error\", _addGeofenceContainer);\n    var errorIconContainer = createElement(\"div\", \"geofence-ctrl-add-geofence-error-icon\", _errorDiv);\n    errorIconContainer.appendChild(createErrorIcon());\n    var errorText = createElement(\"div\", \"geofence-ctrl-add-geofence-error-text\", _errorDiv);\n    errorText.innerHTML = error;\n  }\n  /************************************************************\n   * Delete Controls\n   *************************************************************/\n\n\n  function renderDeleteButton(container, id) {\n    var deleteButton = createElement(\"div\", \"geofence-ctrl-delete-button\", container);\n    deleteButton.classList.add(\"geofence-ctrl-button\");\n    deleteButton.addEventListener(\"click\", function () {\n      createConfirmDeleteContainer(id);\n    });\n    deleteButton.appendChild(createTrashIcon());\n    return deleteButton;\n  }\n\n  function createConfirmDeleteContainer(geofenceId) {\n    _deleteGeofenceContainer = createElement(\"div\", \"geofence-ctrl-delete-prompt-container\", geofenceControlContainer);\n    var deleteGeofencePrompt = createElement(\"div\", \"geofence-ctrl-delete-prompt\", _deleteGeofenceContainer);\n    var title = createElement(\"div\", \"geofence-ctrl-delete-geofence-title\", deleteGeofencePrompt);\n    title.innerHTML = \"Are you sure you want to delete <strong>\".concat(geofenceId, \"</strong>?\");\n    createDeleteButtonsContainer(deleteGeofencePrompt, geofenceId);\n  }\n\n  function createDeleteButtonsContainer(container, geofenceId) {\n    var deleteButtonsContainer = createElement(\"div\", \"geofence-ctrl-delete-geofence-buttons\", container);\n    var cancelButton = createElement(\"div\", \"geofence-ctrl-delete-geofence-cancel-button\", deleteButtonsContainer);\n    cancelButton.innerHTML = \"Cancel\";\n    cancelButton.addEventListener(\"click\", function () {\n      removeElement(_deleteGeofenceContainer);\n    });\n    var confirmDeleteButton = createElement(\"div\", \"geofence-ctrl-delete-geofence-confirm-button\", deleteButtonsContainer);\n    confirmDeleteButton.innerHTML = \"Delete\";\n    confirmDeleteButton.addEventListener(\"click\", function () {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var id;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return geofenceControl.deleteGeofence(geofenceId);\n\n              case 2:\n                id = _context3.sent;\n\n                if (id) {\n                  createDeleteResultContainer(true);\n                  removeElement(_deleteGeofenceContainer);\n                  geofenceControl.setEditingModeEnabled(false);\n                }\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n    });\n  }\n\n  function createDeleteResultContainer(success) {\n    _deletePopdownContainer = createElement(\"div\", \"geofence-ctrl-delete-popdown-container\", geofenceControlContainer);\n    var deletePopdown = createElement(\"div\", \"geofence-ctrl-delete-popdown\", _deletePopdownContainer);\n    var deletePopdownCloseButton = createElement(\"div\", \"geofence-ctrl-delete-popdown-close-button\", _deletePopdownContainer);\n    deletePopdownCloseButton.appendChild(createCloseIcon());\n    deletePopdownCloseButton.addEventListener(\"click\", function () {\n      removeElement(_deletePopdownContainer);\n    });\n    var deleteSuccessIcon = createElement(\"div\", \"geofence-ctrl-delete-popdown-icon\", deletePopdown);\n    deleteSuccessIcon.appendChild(createDeleteSuccessIcon());\n    var deletePopdownText = createElement(\"div\", \"geofence-ctrl-delete-popdown-text\", deletePopdown);\n    deletePopdownText.innerHTML = success ? \"Geofence was deleted successfully\" : \"Geofence failed to delete\";\n  }\n  /************************************************************\n   * Utility Methods\n   *************************************************************/\n\n\n  function updateCheckbox(geofenceId, checked) {\n    var checkbox = document.getElementById(\"list-item-checkbox-\".concat(geofenceId));\n    if (checkbox) checkbox.checked = checked;\n  }\n\n  function removeGeofenceListItem(geofenceId) {\n    var listItem = document.getElementById(\"list-item-\".concat(geofenceId));\n    removeElement(listItem);\n  }\n\n  function setGeofenceListEnabled(enabled) {\n    _checkboxAll.disabled = !enabled;\n    enabled ? _addGeofencebutton.classList.remove(\"geofence-ctrl-noHover\") : _addGeofencebutton.classList.add(\"geofence-ctrl-noHover\");\n    var inputs = document.getElementsByClassName(\"geofence-ctrl-list-item-checkbox\");\n\n    for (var i = 0; i < inputs.length; i++) {\n      inputs.item(i).disabled = !enabled;\n    }\n\n    var items = document.getElementsByClassName(\"geofence-ctrl-list-item-container\");\n\n    for (var _i = 0; _i < items.length; _i++) {\n      enabled ? items.item(_i).classList.remove(\"geofence-ctrl-noHover\") : items.item(_i).classList.add(\"geofence-ctrl-noHover\");\n    }\n  }\n\n  function getCheckboxAllValue() {\n    return _checkboxAll.checked;\n  }\n\n  function updateGeofenceCount(count) {\n    _geofenceTitle.innerHTML = \"Geofences (\".concat(count, \")\");\n  }\n\n  function updateGeofenceRadius(radius) {\n    if (_geofenceCreateRadiusInput) _geofenceCreateRadiusInput.value = \"\".concat(radius);\n  }\n\n  function hideCheckboxAllContainer() {\n    _checkBoxAllContainer.style.display = \"none\";\n  }\n\n  function showCheckboxAllContainer() {\n    _checkBoxAllContainer.style.display = \"flex\";\n  }\n\n  return {\n    registerControlPosition: registerControlPosition,\n    createElement: createElement,\n    removeElement: removeElement,\n    createGeofenceCreateContainer: createGeofenceCreateContainer,\n    createGeofenceListContainer: createGeofenceListContainer,\n    removeAddGeofenceContainer: removeAddGeofenceContainer,\n    createAddGeofencePromptError: createAddGeofencePromptError,\n    renderListItem: renderListItem,\n    updateCheckbox: updateCheckbox,\n    removeGeofenceListItem: removeGeofenceListItem,\n    setGeofenceListEnabled: setGeofenceListEnabled,\n    getCheckboxAllValue: getCheckboxAllValue,\n    removeGeofenceCreateContainer: removeGeofenceCreateContainer,\n    updateGeofenceCount: updateGeofenceCount,\n    updateGeofenceRadius: updateGeofenceRadius\n  };\n}","map":{"version":3,"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","debounce","createElement","removeElement","createErrorIcon","createEditIcon","createPopupStep1Icon","createPopupStep2Icon","createPopupStep3Icon","createPopupStep4Icon","createTrashIcon","createDeleteSuccessIcon","createCloseIcon","AmplifyGeofenceControlUI","geofenceControl","geofenceControlContainer","_addGeofenceContainer","_deleteGeofenceContainer","_addGeofencebutton","_checkboxAll","_geofenceList","_createContainer","_geofenceTitle","_checkBoxAllAndCreateContainer","_checkBoxAllContainer","_circleModeContainer","_polygonModeContainer","_deletePopdownContainer","_errorDiv","_geofenceCreateRadiusInput","registerControlPosition","map","positionName","_controlPositions","positionContainer","document","className","_controlContainer","appendChild","createGeofenceCreateContainer","isCircle","container","buttonContainer","circleModeButton","addEventListener","classList","add","polygonModeButton","remove","undefined","createCircleModeCreateContainer","changeMode","innerHTML","createPolygonModeCreateContainer","radiusTitle","updateInputRadius","moreInfoContainer","moreInfoIcon","letterI","moreInfo","resetButton","resetGeofence","popup","createPolygonModeInfoPopup","toggle","popupContainer","createPopupStep","text","image","popupStep","popupStepImage","popupStepText","removeGeofenceCreateContainer","createGeofenceListContainer","geofenceListContainer","createGeofenceListHeader","scrollHeight","scrollTop","clientHeight","loadMoreGeofences","header","createCheckboxAllContainer","type","checked","displayAllGeofences","checkboxAllText","hideAllGeofences","createAddGeofenceContainer","renderListItem","geofence","id","geofenceId","listItem","leftContainer","checkbox","displayGeofence","fitGeofence","hideGeofence","rightContainer","geofenceTitleContainer","displayHighlightedGeofence","hideHighlightedGeofence","geofenceTitle","editButton","editGeofence","createEditControls","item","editContainer","deleteButton","renderDeleteButton","removeEditContainer","cancelButton","setEditingModeEnabled","saveGeofenceButton","saveGeofence","title","removeAddGeofenceContainer","clearAddGeofenceError","showCheckboxAllContainer","hideCheckboxAllContainer","addGeofencePrompt","nameInput","placeholder","saveButton","createGeofence","escape","output","addEditableGeofence","createAddGeofencePromptError","error","errorIconContainer","errorText","createConfirmDeleteContainer","deleteGeofencePrompt","createDeleteButtonsContainer","deleteButtonsContainer","confirmDeleteButton","deleteGeofence","createDeleteResultContainer","success","deletePopdown","deletePopdownCloseButton","deleteSuccessIcon","deletePopdownText","updateCheckbox","getElementById","removeGeofenceListItem","setGeofenceListEnabled","enabled","disabled","inputs","getElementsByClassName","i","length","items","getCheckboxAllValue","updateGeofenceCount","count","updateGeofenceRadius","radius","style","display"],"sources":["C:/Users/lmore/OneDrive/Documents/GitHub/JacksOfAllTrades/jacksofalltrades/node_modules/maplibre-gl-js-amplify/lib/esm/AmplifyGeofenceControl/ui.js"],"sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { debounce } from \"debounce\";\nimport { createElement, removeElement } from \"../utils\";\nimport { createErrorIcon } from \"./icons\";\nimport { createEditIcon, createPopupStep1Icon, createPopupStep2Icon, createPopupStep3Icon, createPopupStep4Icon, createTrashIcon, createDeleteSuccessIcon, createCloseIcon, } from \"./icons\";\nexport function AmplifyGeofenceControlUI(geofenceControl, geofenceControlContainer) {\n    let _addGeofenceContainer;\n    let _deleteGeofenceContainer;\n    let _addGeofencebutton;\n    let _checkboxAll;\n    let _geofenceList;\n    let _createContainer;\n    let _geofenceTitle;\n    let _checkBoxAllAndCreateContainer;\n    let _checkBoxAllContainer;\n    let _circleModeContainer;\n    let _polygonModeContainer;\n    let _deletePopdownContainer;\n    let _errorDiv;\n    let _geofenceCreateRadiusInput;\n    function registerControlPosition(map, positionName) {\n        if (map._controlPositions[positionName]) {\n            return;\n        }\n        const positionContainer = document.createElement(\"div\");\n        positionContainer.className = `maplibregl-ctrl-${positionName}`;\n        map._controlContainer.appendChild(positionContainer);\n        map._controlPositions[positionName] = positionContainer;\n    }\n    /************************************************************\n     * Create Geofence Controls\n     *************************************************************/\n    function createGeofenceCreateContainer(isCircle) {\n        const container = createElement(\"div\", \"geofence-ctrl-create-prompt-container\", geofenceControlContainer);\n        _createContainer = createElement(\"div\", \"geofence-ctrl-create-prompt\", container);\n        if (isCircle) {\n            /* Create buttons to switch between different modes */\n            const buttonContainer = createElement(\"div\", \"geofence-ctrl-create-prompt-buttons\", _createContainer);\n            const circleModeButton = createElement(\"div\", \"geofence-ctrl-create-prompt-button-circle geofence-ctrl-create-prompt-button\", buttonContainer);\n            circleModeButton.addEventListener(\"click\", () => {\n                // Change button selected style\n                circleModeButton.classList.add(\"geofence-ctrl-create-prompt-selected\");\n                polygonModeButton.classList.remove(\"geofence-ctrl-create-prompt-selected\");\n                // Switch info box mode\n                if (_polygonModeContainer) {\n                    removeElement(_polygonModeContainer);\n                    _polygonModeContainer = undefined;\n                }\n                if (!_circleModeContainer)\n                    createCircleModeCreateContainer(_createContainer);\n                geofenceControl.changeMode(\"draw_circle\");\n            });\n            circleModeButton.innerHTML = \"Circle\";\n            const polygonModeButton = createElement(\"div\", \"geofence-ctrl-create-prompt-button-polygon geofence-ctrl-create-prompt-button\", buttonContainer);\n            polygonModeButton.addEventListener(\"click\", () => {\n                geofenceControl.changeMode(\"draw_polygon\");\n                // Change button selected style\n                polygonModeButton.classList.add(\"geofence-ctrl-create-prompt-selected\");\n                circleModeButton.classList.remove(\"geofence-ctrl-create-prompt-selected\");\n                // Switch info box mode\n                if (_circleModeContainer) {\n                    removeElement(_circleModeContainer);\n                    _circleModeContainer = undefined;\n                }\n                if (!_polygonModeContainer)\n                    createPolygonModeCreateContainer(_createContainer);\n            });\n            polygonModeButton.innerHTML = \"Custom\";\n            circleModeButton.classList.add(\"geofence-ctrl-create-prompt-selected\");\n            createCircleModeCreateContainer(_createContainer);\n        }\n        else {\n            createPolygonModeCreateContainer(_createContainer);\n        }\n    }\n    function createCircleModeCreateContainer(container) {\n        _circleModeContainer = createElement(\"div\", \"geofence-ctrl-create-circle-mode-container\", container);\n        const radiusTitle = createElement(\"div\", \"geofence-ctrl-create-circle-mode-title\", _circleModeContainer);\n        radiusTitle.innerHTML = \"Radius\";\n        _geofenceCreateRadiusInput = createElement(\"input\", \"geofence-ctrl-create-circle-mode-input\", _circleModeContainer);\n        _geofenceCreateRadiusInput.addEventListener(\"keydown\", debounce(geofenceControl.updateInputRadius, 200));\n    }\n    function createPolygonModeCreateContainer(container) {\n        _polygonModeContainer = createElement(\"div\", \"geofence-ctrl-create-polygon-mode-container\", container);\n        const moreInfoContainer = createElement(\"div\", \"geofence-ctrl-create-polygon-mode-info-container\", _polygonModeContainer);\n        const moreInfoIcon = createElement(\"div\", \"geofence-ctrl-create-polygon-mode-icon\", moreInfoContainer);\n        const letterI = createElement(\"div\", \"geofence-ctrl-create-polygon-mode-info-icon\", moreInfoIcon);\n        letterI.innerHTML = \"i\";\n        const moreInfo = createElement(\"div\", \"geofence-ctrl-create-polygon-mode-title\", moreInfoContainer);\n        moreInfo.innerHTML = \"How it works?\";\n        const resetButton = createElement(\"div\", \"geofence-ctrl-create-polygon-mode-reset-button geofence-ctrl-button\", _polygonModeContainer);\n        resetButton.innerHTML = \"Reset\";\n        resetButton.addEventListener(\"click\", () => {\n            geofenceControl.resetGeofence();\n        });\n        // Add popup onClick\n        const popup = createPolygonModeInfoPopup(moreInfoIcon);\n        moreInfoContainer.addEventListener(\"click\", () => {\n            popup.classList.toggle(\"show\");\n        });\n    }\n    function createPolygonModeInfoPopup(container) {\n        const popupContainer = createElement(\"div\", \"geofence-ctrl-create-polygon-mode-popup-container\", container);\n        const popup = createElement(\"div\", \"geofence-ctrl-create-polygon-mode-popup\", popupContainer);\n        createPopupStep(popup, \"Move dots to desired position\", createPopupStep1Icon());\n        createPopupStep(popup, \"Click on a border to create a dot\", createPopupStep2Icon());\n        createPopupStep(popup, \"Click into shape to move\", createPopupStep3Icon());\n        createPopupStep(popup, \"Press delete to remove a dot\", createPopupStep4Icon());\n        return popup;\n    }\n    function createPopupStep(container, text, image) {\n        const popupStep = createElement(\"div\", \"geofence-ctrl-create-polygon-mode-popup-step\", container);\n        const popupStepImage = createElement(\"div\", \"geofence-ctrl-create-polygon-mode-popup-step-image\", popupStep);\n        popupStepImage.appendChild(image);\n        const popupStepText = createElement(\"div\", \"geofence-ctrl-create-polygon-mode-popup-step-text\", popupStep);\n        popupStepText.innerHTML = text;\n    }\n    function removeGeofenceCreateContainer() {\n        removeElement(_createContainer);\n        _createContainer = undefined;\n        _circleModeContainer = undefined;\n        _polygonModeContainer = undefined;\n    }\n    /************************************************************\n     * Geofence List\n     *************************************************************/\n    function createGeofenceListContainer() {\n        const geofenceListContainer = createElement(\"div\", \"geofence-ctrl-list-container\", geofenceControlContainer);\n        createGeofenceListHeader(geofenceListContainer);\n        _geofenceList = createElement(\"div\", \"geofence-ctrl-list\", geofenceListContainer);\n        _geofenceList.addEventListener(\"scroll\", () => {\n            const { scrollHeight, scrollTop, clientHeight } = _geofenceList;\n            if (scrollTop + clientHeight >= scrollHeight - 20) {\n                geofenceControl.loadMoreGeofences();\n            }\n        });\n    }\n    function createGeofenceListHeader(geofenceListContainer) {\n        const header = createElement(\"div\", \"geofence-ctrl-list-header\", geofenceListContainer);\n        _geofenceTitle = createElement(\"div\", \"geofence-ctrl-list-header-title\", header);\n        _geofenceTitle.innerHTML = \"Geofences (0)\";\n        _checkBoxAllAndCreateContainer = createElement(\"div\", \"geofence-ctrl-list-header-checkbox-create-container\", header);\n        createCheckboxAllContainer(_checkBoxAllAndCreateContainer);\n    }\n    function createCheckboxAllContainer(geofenceListContainer) {\n        _checkBoxAllContainer = createElement(\"div\", \"geofence-ctrl-list-checkbox-all-container\", geofenceListContainer);\n        _checkboxAll = createElement(\"input\", \"geofence-ctrl-list-checkbox-all\", _checkBoxAllContainer);\n        _checkboxAll.type = \"checkbox\";\n        _checkboxAll.addEventListener(\"click\", function () {\n            if (_checkboxAll.checked) {\n                geofenceControl.displayAllGeofences();\n                checkboxAllText.innerHTML = \"Deselect All\";\n            }\n            else {\n                geofenceControl.hideAllGeofences();\n                checkboxAllText.innerHTML = \"Select All\";\n            }\n        });\n        const checkboxAllText = createElement(\"div\", \"geofence-ctrl-list-checkbox-all-title\", _checkBoxAllContainer);\n        checkboxAllText.innerHTML = \"Select all\";\n        _addGeofencebutton = createElement(\"div\", \"geofence-ctrl-list-header-add-button\", _checkBoxAllContainer);\n        _addGeofencebutton.innerHTML = \"+ Add\";\n        _addGeofencebutton.addEventListener(\"click\", () => {\n            createAddGeofenceContainer();\n        });\n    }\n    function renderListItem(geofence) {\n        const container = createElement(\"li\", \"geofence-ctrl-list-item-container\", _geofenceList);\n        container.id = `list-item-${geofence.geofenceId}`;\n        const listItem = createElement(\"li\", \"geofence-ctrl-list-item\", container);\n        const leftContainer = createElement(\"div\", \"geofence-ctrl-list-item-left-container\", listItem);\n        const checkbox = createElement(\"input\", \"geofence-ctrl-list-item-checkbox\", leftContainer);\n        checkbox.id = `list-item-checkbox-${geofence.geofenceId}`;\n        checkbox.type = \"checkbox\";\n        checkbox.addEventListener(\"click\", function () {\n            if (checkbox.checked) {\n                geofenceControl.displayGeofence(geofence.geofenceId);\n                geofenceControl.fitGeofence(geofence.geofenceId);\n            }\n            else {\n                geofenceControl.hideGeofence(geofence.geofenceId);\n            }\n        });\n        const rightContainer = createElement(\"div\", \"geofence-ctrl-list-item-right-container\", listItem);\n        const geofenceTitleContainer = createElement(\"div\", \"geofence-ctrl-list-item-title-container\", rightContainer);\n        geofenceTitleContainer.addEventListener(\"mouseover\", function () {\n            geofenceControl.displayHighlightedGeofence(geofence.geofenceId);\n        });\n        geofenceTitleContainer.addEventListener(\"mouseout\", function () {\n            geofenceControl.hideHighlightedGeofence();\n        });\n        const geofenceTitle = createElement(\"div\", \"geofence-ctrl-list-item-title\", geofenceTitleContainer);\n        geofenceTitle.innerHTML = geofence.geofenceId;\n        const editButton = createElement(\"div\", \"geofence-ctrl-edit-button\", geofenceTitleContainer);\n        editButton.addEventListener(\"click\", function () {\n            geofenceControl.editGeofence(geofence.geofenceId);\n            createEditControls(listItem, rightContainer, leftContainer, geofence.geofenceId);\n            listItem.classList.remove(\"geofence-ctrl-list-item\");\n            listItem.classList.add(\"geofence-ctrl-list-selected-item\");\n        });\n        editButton.appendChild(createEditIcon());\n    }\n    function createEditControls(item, rightContainer, leftContainer, id) {\n        const editContainer = createElement(\"div\", \"geofence-ctrl-list-item-controls\", rightContainer);\n        const deleteButton = renderDeleteButton(leftContainer, id);\n        const removeEditContainer = () => {\n            item.classList.remove(\"geofence-ctrl-list-selected-item\");\n            item.classList.add(\"geofence-ctrl-list-item\");\n            removeElement(editContainer);\n            removeElement(deleteButton);\n        };\n        const cancelButton = createElement(\"div\", \"geofence-ctrl-cancel-button\", editContainer);\n        cancelButton.classList.add(\"geofence-ctrl-button\");\n        cancelButton.innerHTML = \"Cancel\";\n        cancelButton.addEventListener(\"click\", () => {\n            geofenceControl.setEditingModeEnabled(false);\n            removeEditContainer();\n        });\n        const saveGeofenceButton = createElement(\"div\", \"geofence-ctrl-save-button geofence-ctrl-button\", editContainer);\n        saveGeofenceButton.addEventListener(\"click\", () => __awaiter(this, void 0, void 0, function* () {\n            yield geofenceControl.saveGeofence();\n            removeEditContainer();\n        }));\n        saveGeofenceButton.title = \"Save\";\n        saveGeofenceButton.innerHTML = \"Save\";\n    }\n    /************************************************************\n     * Add Geofence Controls\n     *************************************************************/\n    function removeAddGeofenceContainer() {\n        removeElement(_addGeofenceContainer);\n        clearAddGeofenceError();\n        showCheckboxAllContainer();\n    }\n    function clearAddGeofenceError() {\n        if (_errorDiv) {\n            removeElement(_errorDiv);\n            _errorDiv = undefined;\n        }\n    }\n    function createAddGeofenceContainer() {\n        hideCheckboxAllContainer();\n        _addGeofenceContainer = createElement(\"div\", \"geofence-ctrl-add-geofence-container\", _checkBoxAllAndCreateContainer);\n        const addGeofencePrompt = createElement(\"div\", \"geofence-ctrl-add-geofence\", _addGeofenceContainer);\n        const nameInput = createElement(\"input\", \"geofence-ctrl-add-geofence-input\", addGeofencePrompt);\n        nameInput.placeholder = \"Enter name\";\n        const buttonContainer = createElement(\"div\", \"geofence-ctrl-add-geofence-buttons\", addGeofencePrompt);\n        const cancelButton = createElement(\"div\", \"geofence-ctrl-add-geofence-cancel-button geofence-ctrl-button \", buttonContainer);\n        cancelButton.innerHTML = \"Cancel\";\n        cancelButton.addEventListener(\"click\", () => {\n            removeAddGeofenceContainer();\n            geofenceControl.setEditingModeEnabled(false);\n        });\n        const saveButton = createElement(\"div\", \"geofence-ctrl-button geofence-ctrl-save-button\", buttonContainer);\n        saveButton.innerHTML = \"Save\";\n        saveButton.addEventListener(\"click\", function () {\n            return __awaiter(this, void 0, void 0, function* () {\n                clearAddGeofenceError();\n                const output = yield geofenceControl.createGeofence(escape(nameInput.value));\n                if (output)\n                    removeAddGeofenceContainer();\n            });\n        });\n        geofenceControl.addEditableGeofence();\n    }\n    function createAddGeofencePromptError(error) {\n        if (_errorDiv) {\n            return;\n        }\n        _errorDiv = createElement(\"div\", \"geofence-ctrl-add-geofence-error\", _addGeofenceContainer);\n        const errorIconContainer = createElement(\"div\", \"geofence-ctrl-add-geofence-error-icon\", _errorDiv);\n        errorIconContainer.appendChild(createErrorIcon());\n        const errorText = createElement(\"div\", \"geofence-ctrl-add-geofence-error-text\", _errorDiv);\n        errorText.innerHTML = error;\n    }\n    /************************************************************\n     * Delete Controls\n     *************************************************************/\n    function renderDeleteButton(container, id) {\n        const deleteButton = createElement(\"div\", \"geofence-ctrl-delete-button\", container);\n        deleteButton.classList.add(\"geofence-ctrl-button\");\n        deleteButton.addEventListener(\"click\", function () {\n            createConfirmDeleteContainer(id);\n        });\n        deleteButton.appendChild(createTrashIcon());\n        return deleteButton;\n    }\n    function createConfirmDeleteContainer(geofenceId) {\n        _deleteGeofenceContainer = createElement(\"div\", \"geofence-ctrl-delete-prompt-container\", geofenceControlContainer);\n        const deleteGeofencePrompt = createElement(\"div\", \"geofence-ctrl-delete-prompt\", _deleteGeofenceContainer);\n        const title = createElement(\"div\", \"geofence-ctrl-delete-geofence-title\", deleteGeofencePrompt);\n        title.innerHTML = `Are you sure you want to delete <strong>${geofenceId}</strong>?`;\n        createDeleteButtonsContainer(deleteGeofencePrompt, geofenceId);\n    }\n    function createDeleteButtonsContainer(container, geofenceId) {\n        const deleteButtonsContainer = createElement(\"div\", \"geofence-ctrl-delete-geofence-buttons\", container);\n        const cancelButton = createElement(\"div\", \"geofence-ctrl-delete-geofence-cancel-button\", deleteButtonsContainer);\n        cancelButton.innerHTML = \"Cancel\";\n        cancelButton.addEventListener(\"click\", () => {\n            removeElement(_deleteGeofenceContainer);\n        });\n        const confirmDeleteButton = createElement(\"div\", \"geofence-ctrl-delete-geofence-confirm-button\", deleteButtonsContainer);\n        confirmDeleteButton.innerHTML = \"Delete\";\n        confirmDeleteButton.addEventListener(\"click\", function () {\n            return __awaiter(this, void 0, void 0, function* () {\n                const id = yield geofenceControl.deleteGeofence(geofenceId);\n                if (id) {\n                    createDeleteResultContainer(true);\n                    removeElement(_deleteGeofenceContainer);\n                    geofenceControl.setEditingModeEnabled(false);\n                }\n            });\n        });\n    }\n    function createDeleteResultContainer(success) {\n        _deletePopdownContainer = createElement(\"div\", \"geofence-ctrl-delete-popdown-container\", geofenceControlContainer);\n        const deletePopdown = createElement(\"div\", \"geofence-ctrl-delete-popdown\", _deletePopdownContainer);\n        const deletePopdownCloseButton = createElement(\"div\", \"geofence-ctrl-delete-popdown-close-button\", _deletePopdownContainer);\n        deletePopdownCloseButton.appendChild(createCloseIcon());\n        deletePopdownCloseButton.addEventListener(\"click\", () => {\n            removeElement(_deletePopdownContainer);\n        });\n        const deleteSuccessIcon = createElement(\"div\", \"geofence-ctrl-delete-popdown-icon\", deletePopdown);\n        deleteSuccessIcon.appendChild(createDeleteSuccessIcon());\n        const deletePopdownText = createElement(\"div\", \"geofence-ctrl-delete-popdown-text\", deletePopdown);\n        deletePopdownText.innerHTML = success\n            ? \"Geofence was deleted successfully\"\n            : \"Geofence failed to delete\";\n    }\n    /************************************************************\n     * Utility Methods\n     *************************************************************/\n    function updateCheckbox(geofenceId, checked) {\n        const checkbox = document.getElementById(`list-item-checkbox-${geofenceId}`);\n        if (checkbox)\n            checkbox.checked = checked;\n    }\n    function removeGeofenceListItem(geofenceId) {\n        const listItem = document.getElementById(`list-item-${geofenceId}`);\n        removeElement(listItem);\n    }\n    function setGeofenceListEnabled(enabled) {\n        _checkboxAll.disabled = !enabled;\n        enabled\n            ? _addGeofencebutton.classList.remove(\"geofence-ctrl-noHover\")\n            : _addGeofencebutton.classList.add(\"geofence-ctrl-noHover\");\n        const inputs = document.getElementsByClassName(\"geofence-ctrl-list-item-checkbox\");\n        for (let i = 0; i < inputs.length; i++) {\n            inputs.item(i).disabled = !enabled;\n        }\n        const items = document.getElementsByClassName(\"geofence-ctrl-list-item-container\");\n        for (let i = 0; i < items.length; i++) {\n            enabled\n                ? items.item(i).classList.remove(\"geofence-ctrl-noHover\")\n                : items.item(i).classList.add(\"geofence-ctrl-noHover\");\n        }\n    }\n    function getCheckboxAllValue() {\n        return _checkboxAll.checked;\n    }\n    function updateGeofenceCount(count) {\n        _geofenceTitle.innerHTML = `Geofences (${count})`;\n    }\n    function updateGeofenceRadius(radius) {\n        if (_geofenceCreateRadiusInput)\n            _geofenceCreateRadiusInput.value = `${radius}`;\n    }\n    function hideCheckboxAllContainer() {\n        _checkBoxAllContainer.style.display = \"none\";\n    }\n    function showCheckboxAllContainer() {\n        _checkBoxAllContainer.style.display = \"flex\";\n    }\n    return {\n        registerControlPosition,\n        createElement,\n        removeElement,\n        createGeofenceCreateContainer,\n        createGeofenceListContainer,\n        removeAddGeofenceContainer,\n        createAddGeofencePromptError,\n        renderListItem,\n        updateCheckbox,\n        removeGeofenceListItem,\n        setGeofenceListEnabled,\n        getCheckboxAllValue,\n        removeGeofenceCreateContainer,\n        updateGeofenceCount,\n        updateGeofenceRadius,\n    };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}