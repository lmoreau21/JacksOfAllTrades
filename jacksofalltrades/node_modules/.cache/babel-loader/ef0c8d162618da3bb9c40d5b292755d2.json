{"ast":null,"code":"import Cookies from 'universal-cookie';\nimport { browserOrNode } from '../JS';\nvar isBrowser = browserOrNode().isBrowser;\n\nvar UniversalStorage =\n/** @class */\nfunction () {\n  function UniversalStorage(context) {\n    if (context === void 0) {\n      context = {};\n    }\n\n    this.cookies = new Cookies();\n    this.store = isBrowser ? window.localStorage : Object.create(null);\n    this.cookies = context.req ? new Cookies(context.req.headers.cookie) : new Cookies();\n    Object.assign(this.store, this.cookies.getAll());\n  }\n\n  Object.defineProperty(UniversalStorage.prototype, \"length\", {\n    get: function () {\n      return Object.entries(this.store).length;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  UniversalStorage.prototype.clear = function () {\n    var _this = this;\n\n    Array.from(new Array(this.length)).map(function (_, i) {\n      return _this.key(i);\n    }).forEach(function (key) {\n      return _this.removeItem(key);\n    });\n  };\n\n  UniversalStorage.prototype.getItem = function (key) {\n    return this.getLocalItem(key);\n  };\n\n  UniversalStorage.prototype.getLocalItem = function (key) {\n    return Object.prototype.hasOwnProperty.call(this.store, key) ? this.store[key] : null;\n  };\n\n  UniversalStorage.prototype.getUniversalItem = function (key) {\n    return this.cookies.get(key);\n  };\n\n  UniversalStorage.prototype.key = function (index) {\n    return Object.keys(this.store)[index];\n  };\n\n  UniversalStorage.prototype.removeItem = function (key) {\n    this.removeLocalItem(key);\n    this.removeUniversalItem(key);\n  };\n\n  UniversalStorage.prototype.removeLocalItem = function (key) {\n    delete this.store[key];\n  };\n\n  UniversalStorage.prototype.removeUniversalItem = function (key) {\n    this.cookies.remove(key, {\n      path: '/'\n    });\n  };\n\n  UniversalStorage.prototype.setItem = function (key, value) {\n    this.setLocalItem(key, value); // keys take the shape:\n    //  1. `${ProviderPrefix}.${userPoolClientId}.${username}.${tokenType}\n    //  2. `${ProviderPrefix}.${userPoolClientId}.LastAuthUser\n\n    var tokenType = key.split('.').pop();\n\n    switch (tokenType) {\n      // LastAuthUser is needed for computing other key names\n      case 'LastAuthUser': // accessToken is required for CognitoUserSession\n\n      case 'accessToken': // refreshToken originates on the client, but SSR pages won't fail when this expires\n      // Note: the new `accessToken` will also be refreshed on the client (since Amplify doesn't set server-side cookies)\n\n      case 'refreshToken': // Required for CognitoUserSession\n\n      case 'idToken':\n        isBrowser ? this.setUniversalItem(key, value) : this.setLocalItem(key, value);\n      // userData is used when `Auth.currentAuthenticatedUser({ bypassCache: false })`.\n      // Can be persisted to speed up calls to `Auth.currentAuthenticatedUser()`\n      // case 'userData':\n      // Ignoring clockDrift on the server for now, but needs testing\n      // case 'clockDrift':\n    }\n  };\n\n  UniversalStorage.prototype.setLocalItem = function (key, value) {\n    this.store[key] = value;\n  };\n\n  UniversalStorage.prototype.setUniversalItem = function (key, value) {\n    this.cookies.set(key, value, {\n      path: '/',\n      // `httpOnly` cannot be set via JavaScript: https://developer.mozilla.org/en-US/docs/Web/HTTP/Cookies#JavaScript_access_using_Document.cookie\n      sameSite: true,\n      // Allow unsecure requests to http://localhost:3000/ when in development.\n      secure: window.location.hostname === 'localhost' ? false : true\n    });\n  };\n\n  return UniversalStorage;\n}();\n\nexport { UniversalStorage };","map":{"version":3,"mappings":"AAAA,OAAOA,OAAP,MAAoB,kBAApB;AACA,SAASC,aAAT,QAA8B,OAA9B;AAIQ;;AAKR;AAAA;AAAA;EAIC,0BAAYC,OAAZ,EAAiC;IAArB;MAAAA;IAAqB;;IAHjC,eAAU,IAAIF,OAAJ,EAAV;IACA,aAAeG,SAAS,GAAGC,MAAM,CAACC,YAAV,GAAyBC,MAAM,CAACC,MAAP,CAAc,IAAd,CAAjD;IAGC,KAAKC,OAAL,GAAeN,OAAO,CAACO,GAAR,GACZ,IAAIT,OAAJ,CAAYE,OAAO,CAACO,GAAR,CAAYC,OAAZ,CAAoBC,MAAhC,CADY,GAEZ,IAAIX,OAAJ,EAFH;IAIAM,MAAM,CAACM,MAAP,CAAc,KAAKC,KAAnB,EAA0B,KAAKL,OAAL,CAAaM,MAAb,EAA1B;EACA;;EAEDR,sBAAIS,0BAAJ,EAAI,QAAJ,EAAU;SAAV;MACC,OAAOT,MAAM,CAACU,OAAP,CAAe,KAAKH,KAApB,EAA2BI,MAAlC;IACA,CAFS;oBAAA;;EAAA,CAAV;;EAIAF;IAAA;;IACCG,KAAK,CAACC,IAAN,CAAW,IAAID,KAAJ,CAAU,KAAKD,MAAf,CAAX,EACEG,GADF,CACM,UAACC,CAAD,EAAIC,CAAJ,EAAK;MAAK,YAAI,CAACC,GAAL,CAASD,CAAT;IAAW,CAD3B,EAEEE,OAFF,CAEU,eAAG;MAAI,YAAI,CAACC,UAAL,CAAgBF,GAAhB;IAAoB,CAFrC;EAGA,CAJD;;EAMAR,+CAAQQ,GAAR,EAAwB;IACvB,OAAO,KAAKG,YAAL,CAAkBH,GAAlB,CAAP;EACA,CAFD;;EAIUR,0CAAV,UAAuBQ,GAAvB,EAAuC;IACtC,OAAOjB,MAAM,CAACqB,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqC,KAAKhB,KAA1C,EAAiDU,GAAjD,IACJ,KAAKV,KAAL,CAAWU,GAAX,CADI,GAEJ,IAFH;EAGA,CAJS;;EAMAR,8CAAV,UAA2BQ,GAA3B,EAA2C;IAC1C,OAAO,KAAKf,OAAL,CAAasB,GAAb,CAAiBP,GAAjB,CAAP;EACA,CAFS;;EAIVR,2CAAIgB,KAAJ,EAAiB;IAChB,OAAOzB,MAAM,CAAC0B,IAAP,CAAY,KAAKnB,KAAjB,EAAwBkB,KAAxB,CAAP;EACA,CAFD;;EAIAhB,kDAAWQ,GAAX,EAAsB;IACrB,KAAKU,eAAL,CAAqBV,GAArB;IACA,KAAKW,mBAAL,CAAyBX,GAAzB;EACA,CAHD;;EAKUR,6CAAV,UAA0BQ,GAA1B,EAA0C;IACzC,OAAO,KAAKV,KAAL,CAAWU,GAAX,CAAP;EACA,CAFS;;EAIAR,iDAAV,UAA8BQ,GAA9B,EAA8C;IAC7C,KAAKf,OAAL,CAAa2B,MAAb,CAAoBZ,GAApB,EAAyB;MACxBa,IAAI,EAAE;IADkB,CAAzB;EAGA,CAJS;;EAMVrB,+CAAQQ,GAAR,EAA0Bc,KAA1B,EAAuC;IACtC,KAAKC,YAAL,CAAkBf,GAAlB,EAAuBc,KAAvB,EADsC,CAGtC;IACA;IACA;;IACA,IAAME,SAAS,GAAGhB,GAAG,CAACiB,KAAJ,CAAU,GAAV,EAAeC,GAAf,EAAlB;;IAEA,QAAQF,SAAR;MACC;MACA,KAAK,cAAL,CAFD,CAIC;;MACA,KAAK,aAAL,CALD,CAOC;MACA;;MACA,KAAK,cAAL,CATD,CAWC;;MACA,KAAK,SAAL;QACCpC,SAAS,GACN,KAAKuC,gBAAL,CAAsBnB,GAAtB,EAA2Bc,KAA3B,CADM,GAEN,KAAKC,YAAL,CAAkBf,GAAlB,EAAuBc,KAAvB,CAFH;MAID;MACA;MACA;MAEA;MACA;IAtBD;EAwBA,CAhCD;;EAkCUtB,0CAAV,UAAuBQ,GAAvB,EAAyCc,KAAzC,EAAsD;IACrD,KAAKxB,KAAL,CAAWU,GAAX,IAAkBc,KAAlB;EACA,CAFS;;EAIAtB,8CAAV,UAA2BQ,GAA3B,EAA6Cc,KAA7C,EAA0D;IACzD,KAAK7B,OAAL,CAAamC,GAAb,CAAiBpB,GAAjB,EAAsBc,KAAtB,EAA6B;MAC5BD,IAAI,EAAE,GADsB;MAE5B;MACAQ,QAAQ,EAAE,IAHkB;MAI5B;MACAC,MAAM,EAAEzC,MAAM,CAAC0C,QAAP,CAAgBC,QAAhB,KAA6B,WAA7B,GAA2C,KAA3C,GAAmD;IAL/B,CAA7B;EAOA,CARS;;EASX;AAAC,CAtGD","names":["Cookies","browserOrNode","context","isBrowser","window","localStorage","Object","create","cookies","req","headers","cookie","assign","store","getAll","UniversalStorage","entries","length","Array","from","map","_","i","key","forEach","removeItem","getLocalItem","prototype","hasOwnProperty","call","get","index","keys","removeLocalItem","removeUniversalItem","remove","path","value","setLocalItem","tokenType","split","pop","setUniversalItem","set","sameSite","secure","location","hostname"],"sources":["C:\\Users\\lmore\\OneDrive\\Documents\\GitHub\\JacksOfAllTrades\\jacksofalltrades\\node_modules\\@aws-amplify\\core\\src\\UniversalStorage\\index.ts"],"sourcesContent":["import Cookies from 'universal-cookie';\nimport { browserOrNode } from '../JS';\n\ntype Store = Record<string, string>;\n\nconst { isBrowser } = browserOrNode();\n\n// Avoid using @types/next because @aws-amplify/ui-angular's version of TypeScript is too old to support it\ntype Context = { req?: any };\n\nexport class UniversalStorage implements Storage {\n\tcookies = new Cookies();\n\tstore: Store = isBrowser ? window.localStorage : Object.create(null);\n\n\tconstructor(context: Context = {}) {\n\t\tthis.cookies = context.req\n\t\t\t? new Cookies(context.req.headers.cookie)\n\t\t\t: new Cookies();\n\n\t\tObject.assign(this.store, this.cookies.getAll());\n\t}\n\n\tget length() {\n\t\treturn Object.entries(this.store).length;\n\t}\n\n\tclear() {\n\t\tArray.from(new Array(this.length))\n\t\t\t.map((_, i) => this.key(i))\n\t\t\t.forEach(key => this.removeItem(key));\n\t}\n\n\tgetItem(key: keyof Store) {\n\t\treturn this.getLocalItem(key);\n\t}\n\n\tprotected getLocalItem(key: keyof Store) {\n\t\treturn Object.prototype.hasOwnProperty.call(this.store, key)\n\t\t\t? this.store[key]\n\t\t\t: null;\n\t}\n\n\tprotected getUniversalItem(key: keyof Store) {\n\t\treturn this.cookies.get(key);\n\t}\n\n\tkey(index: number) {\n\t\treturn Object.keys(this.store)[index];\n\t}\n\n\tremoveItem(key: string) {\n\t\tthis.removeLocalItem(key);\n\t\tthis.removeUniversalItem(key);\n\t}\n\n\tprotected removeLocalItem(key: keyof Store) {\n\t\tdelete this.store[key];\n\t}\n\n\tprotected removeUniversalItem(key: keyof Store) {\n\t\tthis.cookies.remove(key, {\n\t\t\tpath: '/',\n\t\t});\n\t}\n\n\tsetItem(key: keyof Store, value: string) {\n\t\tthis.setLocalItem(key, value);\n\n\t\t// keys take the shape:\n\t\t//  1. `${ProviderPrefix}.${userPoolClientId}.${username}.${tokenType}\n\t\t//  2. `${ProviderPrefix}.${userPoolClientId}.LastAuthUser\n\t\tconst tokenType = key.split('.').pop();\n\n\t\tswitch (tokenType) {\n\t\t\t// LastAuthUser is needed for computing other key names\n\t\t\tcase 'LastAuthUser':\n\n\t\t\t// accessToken is required for CognitoUserSession\n\t\t\tcase 'accessToken':\n\n\t\t\t// refreshToken originates on the client, but SSR pages won't fail when this expires\n\t\t\t// Note: the new `accessToken` will also be refreshed on the client (since Amplify doesn't set server-side cookies)\n\t\t\tcase 'refreshToken':\n\n\t\t\t// Required for CognitoUserSession\n\t\t\tcase 'idToken':\n\t\t\t\tisBrowser\n\t\t\t\t\t? this.setUniversalItem(key, value)\n\t\t\t\t\t: this.setLocalItem(key, value);\n\n\t\t\t// userData is used when `Auth.currentAuthenticatedUser({ bypassCache: false })`.\n\t\t\t// Can be persisted to speed up calls to `Auth.currentAuthenticatedUser()`\n\t\t\t// case 'userData':\n\n\t\t\t// Ignoring clockDrift on the server for now, but needs testing\n\t\t\t// case 'clockDrift':\n\t\t}\n\t}\n\n\tprotected setLocalItem(key: keyof Store, value: string) {\n\t\tthis.store[key] = value;\n\t}\n\n\tprotected setUniversalItem(key: keyof Store, value: string) {\n\t\tthis.cookies.set(key, value, {\n\t\t\tpath: '/',\n\t\t\t// `httpOnly` cannot be set via JavaScript: https://developer.mozilla.org/en-US/docs/Web/HTTP/Cookies#JavaScript_access_using_Document.cookie\n\t\t\tsameSite: true,\n\t\t\t// Allow unsecure requests to http://localhost:3000/ when in development.\n\t\t\tsecure: window.location.hostname === 'localhost' ? false : true,\n\t\t});\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}