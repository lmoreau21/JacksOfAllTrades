{"ast":null,"code":"import { __assign, __awaiter, __generator } from \"tslib\";\nimport { HttpRequest } from \"@aws-sdk/protocol-http\";\nvar TRACE_ID_HEADER_NAME = \"X-Amzn-Trace-Id\";\nvar ENV_LAMBDA_FUNCTION_NAME = \"AWS_LAMBDA_FUNCTION_NAME\";\nvar ENV_TRACE_ID = \"_X_AMZN_TRACE_ID\";\nexport var recursionDetectionMiddleware = function recursionDetectionMiddleware(options) {\n  return function (next) {\n    return function (args) {\n      return __awaiter(void 0, void 0, void 0, function () {\n        var request, functionName, traceId, nonEmptyString;\n        return __generator(this, function (_a) {\n          request = args.request;\n\n          if (!HttpRequest.isInstance(request) || options.runtime !== \"node\" || request.headers.hasOwnProperty(TRACE_ID_HEADER_NAME)) {\n            return [2, next(args)];\n          }\n\n          functionName = process.env[ENV_LAMBDA_FUNCTION_NAME];\n          traceId = process.env[ENV_TRACE_ID];\n\n          nonEmptyString = function nonEmptyString(str) {\n            return typeof str === \"string\" && str.length > 0;\n          };\n\n          if (nonEmptyString(functionName) && nonEmptyString(traceId)) {\n            request.headers[TRACE_ID_HEADER_NAME] = traceId;\n          }\n\n          return [2, next(__assign(__assign({}, args), {\n            request: request\n          }))];\n        });\n      });\n    };\n  };\n};\nexport var addRecursionDetectionMiddlewareOptions = {\n  step: \"build\",\n  tags: [\"RECURSION_DETECTION\"],\n  name: \"recursionDetectionMiddleware\",\n  override: true,\n  priority: \"low\"\n};\nexport var getRecursionDetectionPlugin = function getRecursionDetectionPlugin(options) {\n  return {\n    applyToStack: function applyToStack(clientStack) {\n      clientStack.add(recursionDetectionMiddleware(options), addRecursionDetectionMiddlewareOptions);\n    }\n  };\n};","map":{"version":3,"names":["__assign","__awaiter","__generator","HttpRequest","TRACE_ID_HEADER_NAME","ENV_LAMBDA_FUNCTION_NAME","ENV_TRACE_ID","recursionDetectionMiddleware","options","next","args","request","functionName","traceId","nonEmptyString","_a","isInstance","runtime","headers","hasOwnProperty","process","env","str","length","addRecursionDetectionMiddlewareOptions","step","tags","name","override","priority","getRecursionDetectionPlugin","applyToStack","clientStack","add"],"sources":["C:/Users/lmore/OneDrive/Documents/GitHub/JacksOfAllTrades/jacksofalltrades/node_modules/@aws-sdk/middleware-recursion-detection/dist-es/index.js"],"sourcesContent":["import { __assign, __awaiter, __generator } from \"tslib\";\nimport { HttpRequest } from \"@aws-sdk/protocol-http\";\nvar TRACE_ID_HEADER_NAME = \"X-Amzn-Trace-Id\";\nvar ENV_LAMBDA_FUNCTION_NAME = \"AWS_LAMBDA_FUNCTION_NAME\";\nvar ENV_TRACE_ID = \"_X_AMZN_TRACE_ID\";\nexport var recursionDetectionMiddleware = function (options) {\n    return function (next) {\n        return function (args) { return __awaiter(void 0, void 0, void 0, function () {\n            var request, functionName, traceId, nonEmptyString;\n            return __generator(this, function (_a) {\n                request = args.request;\n                if (!HttpRequest.isInstance(request) ||\n                    options.runtime !== \"node\" ||\n                    request.headers.hasOwnProperty(TRACE_ID_HEADER_NAME)) {\n                    return [2, next(args)];\n                }\n                functionName = process.env[ENV_LAMBDA_FUNCTION_NAME];\n                traceId = process.env[ENV_TRACE_ID];\n                nonEmptyString = function (str) { return typeof str === \"string\" && str.length > 0; };\n                if (nonEmptyString(functionName) && nonEmptyString(traceId)) {\n                    request.headers[TRACE_ID_HEADER_NAME] = traceId;\n                }\n                return [2, next(__assign(__assign({}, args), { request: request }))];\n            });\n        }); };\n    };\n};\nexport var addRecursionDetectionMiddlewareOptions = {\n    step: \"build\",\n    tags: [\"RECURSION_DETECTION\"],\n    name: \"recursionDetectionMiddleware\",\n    override: true,\n    priority: \"low\",\n};\nexport var getRecursionDetectionPlugin = function (options) { return ({\n    applyToStack: function (clientStack) {\n        clientStack.add(recursionDetectionMiddleware(options), addRecursionDetectionMiddlewareOptions);\n    },\n}); };\n"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,WAA9B,QAAiD,OAAjD;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,IAAIC,oBAAoB,GAAG,iBAA3B;AACA,IAAIC,wBAAwB,GAAG,0BAA/B;AACA,IAAIC,YAAY,GAAG,kBAAnB;AACA,OAAO,IAAIC,4BAA4B,GAAG,SAA/BA,4BAA+B,CAAUC,OAAV,EAAmB;EACzD,OAAO,UAAUC,IAAV,EAAgB;IACnB,OAAO,UAAUC,IAAV,EAAgB;MAAE,OAAOT,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;QAC1E,IAAIU,OAAJ,EAAaC,YAAb,EAA2BC,OAA3B,EAAoCC,cAApC;QACA,OAAOZ,WAAW,CAAC,IAAD,EAAO,UAAUa,EAAV,EAAc;UACnCJ,OAAO,GAAGD,IAAI,CAACC,OAAf;;UACA,IAAI,CAACR,WAAW,CAACa,UAAZ,CAAuBL,OAAvB,CAAD,IACAH,OAAO,CAACS,OAAR,KAAoB,MADpB,IAEAN,OAAO,CAACO,OAAR,CAAgBC,cAAhB,CAA+Bf,oBAA/B,CAFJ,EAE0D;YACtD,OAAO,CAAC,CAAD,EAAIK,IAAI,CAACC,IAAD,CAAR,CAAP;UACH;;UACDE,YAAY,GAAGQ,OAAO,CAACC,GAAR,CAAYhB,wBAAZ,CAAf;UACAQ,OAAO,GAAGO,OAAO,CAACC,GAAR,CAAYf,YAAZ,CAAV;;UACAQ,cAAc,GAAG,wBAAUQ,GAAV,EAAe;YAAE,OAAO,OAAOA,GAAP,KAAe,QAAf,IAA2BA,GAAG,CAACC,MAAJ,GAAa,CAA/C;UAAmD,CAArF;;UACA,IAAIT,cAAc,CAACF,YAAD,CAAd,IAAgCE,cAAc,CAACD,OAAD,CAAlD,EAA6D;YACzDF,OAAO,CAACO,OAAR,CAAgBd,oBAAhB,IAAwCS,OAAxC;UACH;;UACD,OAAO,CAAC,CAAD,EAAIJ,IAAI,CAACT,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKU,IAAL,CAAT,EAAqB;YAAEC,OAAO,EAAEA;UAAX,CAArB,CAAT,CAAR,CAAP;QACH,CAdiB,CAAlB;MAeH,CAjBwC,CAAhB;IAiBpB,CAjBL;EAkBH,CAnBD;AAoBH,CArBM;AAsBP,OAAO,IAAIa,sCAAsC,GAAG;EAChDC,IAAI,EAAE,OAD0C;EAEhDC,IAAI,EAAE,CAAC,qBAAD,CAF0C;EAGhDC,IAAI,EAAE,8BAH0C;EAIhDC,QAAQ,EAAE,IAJsC;EAKhDC,QAAQ,EAAE;AALsC,CAA7C;AAOP,OAAO,IAAIC,2BAA2B,GAAG,SAA9BA,2BAA8B,CAAUtB,OAAV,EAAmB;EAAE,OAAQ;IAClEuB,YAAY,EAAE,sBAAUC,WAAV,EAAuB;MACjCA,WAAW,CAACC,GAAZ,CAAgB1B,4BAA4B,CAACC,OAAD,CAA5C,EAAuDgB,sCAAvD;IACH;EAHiE,CAAR;AAIzD,CAJE"},"metadata":{},"sourceType":"module"}