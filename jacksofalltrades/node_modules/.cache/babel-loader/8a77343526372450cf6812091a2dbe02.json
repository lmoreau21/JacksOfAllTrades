{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function sent() {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n\n          case 7:\n            op = _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n\n              _.ops.push(op);\n\n              break;\n            }\n\n            if (t[2]) _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n        }\n\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {\n      ar.push(r.value);\n    }\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n/*\n * Copyright 2017-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n\n\nimport { print, parse, GraphQLError } from 'graphql';\nimport { Amplify, ConsoleLogger as Logger, Credentials, getAmplifyUserAgent, INTERNAL_AWS_APPSYNC_REALTIME_PUBSUB_PROVIDER } from '@aws-amplify/core';\nimport PubSub from '@aws-amplify/pubsub';\nimport Auth from '@aws-amplify/auth';\nimport Cache from '@aws-amplify/cache';\nimport { GraphQLAuthError } from './types';\nimport { RestClient } from '@aws-amplify/api-rest';\nvar USER_AGENT_HEADER = 'x-amz-user-agent';\nvar logger = new Logger('GraphQLAPI');\nexport var graphqlOperation = function graphqlOperation(query, variables, authToken, userAgentSuffix) {\n  if (variables === void 0) {\n    variables = {};\n  }\n\n  return {\n    query: query,\n    variables: variables,\n    authToken: authToken,\n    userAgentSuffix: userAgentSuffix\n  };\n};\n/**\n * Export Cloud Logic APIs\n */\n\nvar GraphQLAPIClass =\n/** @class */\nfunction () {\n  /**\n   * Initialize GraphQL API with AWS configuration\n   * @param {Object} options - Configuration object for API\n   */\n  function GraphQLAPIClass(options) {\n    this._api = null;\n    this.Auth = Auth;\n    this.Cache = Cache;\n    this.Credentials = Credentials;\n    this._options = options;\n    logger.debug('API Options', this._options);\n  }\n\n  GraphQLAPIClass.prototype.getModuleName = function () {\n    return 'GraphQLAPI';\n  };\n  /**\n   * Configure API\n   * @param {Object} config - Configuration of the API\n   * @return {Object} - The current configuration\n   */\n\n\n  GraphQLAPIClass.prototype.configure = function (options) {\n    var _a = options || {},\n        _b = _a.API,\n        API = _b === void 0 ? {} : _b,\n        otherOptions = __rest(_a, [\"API\"]);\n\n    var opt = __assign(__assign({}, otherOptions), API);\n\n    logger.debug('configure GraphQL API', {\n      opt: opt\n    });\n\n    if (opt['aws_project_region']) {\n      opt = Object.assign({}, opt, {\n        region: opt['aws_project_region'],\n        header: {}\n      });\n    }\n\n    if (typeof opt.graphql_headers !== 'undefined' && typeof opt.graphql_headers !== 'function') {\n      logger.warn('graphql_headers should be a function');\n      opt.graphql_headers = undefined;\n    }\n\n    this._options = Object.assign({}, this._options, opt);\n    this.createInstance();\n    return this._options;\n  };\n  /**\n   * Create an instance of API for the library\n   * @return - A promise of true if Success\n   */\n\n\n  GraphQLAPIClass.prototype.createInstance = function () {\n    logger.debug('create Rest instance');\n\n    if (this._options) {\n      this._api = new RestClient(this._options); // Share instance Credentials with client for SSR\n\n      this._api.Credentials = this.Credentials;\n      return true;\n    } else {\n      return Promise.reject('API not configured');\n    }\n  };\n\n  GraphQLAPIClass.prototype._headerBasedAuth = function (defaultAuthenticationType, additionalHeaders) {\n    if (additionalHeaders === void 0) {\n      additionalHeaders = {};\n    }\n\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, aws_appsync_authenticationType, apiKey, authenticationType, headers, _b, credentialsOK, token, federatedInfo, currentUser, e_1, session, e_2;\n\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            _a = this._options, aws_appsync_authenticationType = _a.aws_appsync_authenticationType, apiKey = _a.aws_appsync_apiKey;\n            authenticationType = defaultAuthenticationType || aws_appsync_authenticationType || 'AWS_IAM';\n            headers = {};\n            _b = authenticationType;\n\n            switch (_b) {\n              case 'API_KEY':\n                return [3\n                /*break*/\n                , 1];\n\n              case 'AWS_IAM':\n                return [3\n                /*break*/\n                , 2];\n\n              case 'OPENID_CONNECT':\n                return [3\n                /*break*/\n                , 4];\n\n              case 'AMAZON_COGNITO_USER_POOLS':\n                return [3\n                /*break*/\n                , 11];\n\n              case 'AWS_LAMBDA':\n                return [3\n                /*break*/\n                , 15];\n            }\n\n            return [3\n            /*break*/\n            , 16];\n\n          case 1:\n            if (!apiKey) {\n              throw new Error(GraphQLAuthError.NO_API_KEY);\n            }\n\n            headers = {\n              Authorization: null,\n              'X-Api-Key': apiKey\n            };\n            return [3\n            /*break*/\n            , 17];\n\n          case 2:\n            return [4\n            /*yield*/\n            , this._ensureCredentials()];\n\n          case 3:\n            credentialsOK = _c.sent();\n\n            if (!credentialsOK) {\n              throw new Error(GraphQLAuthError.NO_CREDENTIALS);\n            }\n\n            return [3\n            /*break*/\n            , 17];\n\n          case 4:\n            _c.trys.push([4, 9,, 10]);\n\n            token = void 0;\n            return [4\n            /*yield*/\n            , Cache.getItem('federatedInfo')];\n\n          case 5:\n            federatedInfo = _c.sent();\n            if (!federatedInfo) return [3\n            /*break*/\n            , 6];\n            token = federatedInfo.token;\n            return [3\n            /*break*/\n            , 8];\n\n          case 6:\n            return [4\n            /*yield*/\n            , Auth.currentAuthenticatedUser()];\n\n          case 7:\n            currentUser = _c.sent();\n\n            if (currentUser) {\n              token = currentUser.token;\n            }\n\n            _c.label = 8;\n\n          case 8:\n            if (!token) {\n              throw new Error(GraphQLAuthError.NO_FEDERATED_JWT);\n            }\n\n            headers = {\n              Authorization: token\n            };\n            return [3\n            /*break*/\n            , 10];\n\n          case 9:\n            e_1 = _c.sent();\n            throw new Error(GraphQLAuthError.NO_CURRENT_USER);\n\n          case 10:\n            return [3\n            /*break*/\n            , 17];\n\n          case 11:\n            _c.trys.push([11, 13,, 14]);\n\n            return [4\n            /*yield*/\n            , this.Auth.currentSession()];\n\n          case 12:\n            session = _c.sent();\n            headers = {\n              Authorization: session.getAccessToken().getJwtToken()\n            };\n            return [3\n            /*break*/\n            , 14];\n\n          case 13:\n            e_2 = _c.sent();\n            throw new Error(GraphQLAuthError.NO_CURRENT_USER);\n\n          case 14:\n            return [3\n            /*break*/\n            , 17];\n\n          case 15:\n            if (!additionalHeaders.Authorization) {\n              throw new Error(GraphQLAuthError.NO_AUTH_TOKEN);\n            }\n\n            headers = {\n              Authorization: additionalHeaders.Authorization\n            };\n            return [3\n            /*break*/\n            , 17];\n\n          case 16:\n            headers = {\n              Authorization: null\n            };\n            return [3\n            /*break*/\n            , 17];\n\n          case 17:\n            return [2\n            /*return*/\n            , headers];\n        }\n      });\n    });\n  };\n  /**\n   * to get the operation type\n   * @param operation\n   */\n\n\n  GraphQLAPIClass.prototype.getGraphqlOperationType = function (operation) {\n    var doc = parse(operation);\n    var definitions = doc.definitions;\n\n    var _a = __read(definitions, 1),\n        operationType = _a[0].operation;\n\n    return operationType;\n  };\n  /**\n   * Executes a GraphQL operation\n   *\n   * @param options - GraphQL Options\n   * @param [additionalHeaders] - headers to merge in after any `graphql_headers` set in the config\n   * @returns An Observable if the query is a subscription query, else a promise of the graphql result.\n   */\n\n\n  GraphQLAPIClass.prototype.graphql = function (_a, additionalHeaders) {\n    var paramQuery = _a.query,\n        _b = _a.variables,\n        variables = _b === void 0 ? {} : _b,\n        authMode = _a.authMode,\n        authToken = _a.authToken,\n        userAgentSuffix = _a.userAgentSuffix;\n    var query = typeof paramQuery === 'string' ? parse(paramQuery) : parse(print(paramQuery));\n\n    var _c = __read(query.definitions.filter(function (def) {\n      return def.kind === 'OperationDefinition';\n    }), 1),\n        _d = _c[0],\n        operationDef = _d === void 0 ? {} : _d;\n\n    var operationType = operationDef.operation;\n    var headers = additionalHeaders || {}; // if an authorization header is set, have the explicit authToken take precedence\n\n    if (authToken) {\n      headers.Authorization = authToken;\n    }\n\n    switch (operationType) {\n      case 'query':\n      case 'mutation':\n        var cancellableToken = this._api.getCancellableToken();\n\n        var initParams = {\n          cancellableToken: cancellableToken\n        };\n\n        var responsePromise = this._graphql({\n          query: query,\n          variables: variables,\n          authMode: authMode,\n          userAgentSuffix: userAgentSuffix\n        }, headers, initParams);\n\n        this._api.updateRequestToBeCancellable(responsePromise, cancellableToken);\n\n        return responsePromise;\n\n      case 'subscription':\n        return this._graphqlSubscribe({\n          query: query,\n          variables: variables,\n          authMode: authMode\n        }, headers);\n\n      default:\n        throw new Error(\"invalid operation type: \" + operationType);\n    }\n  };\n\n  GraphQLAPIClass.prototype._graphql = function (_a, additionalHeaders, initParams) {\n    var query = _a.query,\n        variables = _a.variables,\n        authMode = _a.authMode,\n        userAgentSuffix = _a.userAgentSuffix;\n\n    if (additionalHeaders === void 0) {\n      additionalHeaders = {};\n    }\n\n    if (initParams === void 0) {\n      initParams = {};\n    }\n\n    return __awaiter(this, void 0, void 0, function () {\n      var _b, region, appSyncGraphqlEndpoint, _c, graphql_headers, customGraphqlEndpoint, customEndpointRegion, headers, _d, _e, _f, _g, _h, _j, body, init, endpoint, error, response, err_1, errors;\n\n      var _k;\n\n      return __generator(this, function (_l) {\n        switch (_l.label) {\n          case 0:\n            if (!!this._api) return [3\n            /*break*/\n            , 2];\n            return [4\n            /*yield*/\n            , this.createInstance()];\n\n          case 1:\n            _l.sent();\n\n            _l.label = 2;\n\n          case 2:\n            _b = this._options, region = _b.aws_appsync_region, appSyncGraphqlEndpoint = _b.aws_appsync_graphqlEndpoint, _c = _b.graphql_headers, graphql_headers = _c === void 0 ? function () {\n              return {};\n            } : _c, customGraphqlEndpoint = _b.graphql_endpoint, customEndpointRegion = _b.graphql_endpoint_iam_region;\n            _d = [{}];\n            _e = !customGraphqlEndpoint;\n            if (!_e) return [3\n            /*break*/\n            , 4];\n            return [4\n            /*yield*/\n            , this._headerBasedAuth(authMode, additionalHeaders)];\n\n          case 3:\n            _e = _l.sent();\n            _l.label = 4;\n\n          case 4:\n            _f = [__assign.apply(void 0, _d.concat([_e]))];\n            _g = customGraphqlEndpoint;\n            if (!_g) return [3\n            /*break*/\n            , 8];\n            if (!customEndpointRegion) return [3\n            /*break*/\n            , 6];\n            return [4\n            /*yield*/\n            , this._headerBasedAuth(authMode, additionalHeaders)];\n\n          case 5:\n            _h = _l.sent();\n            return [3\n            /*break*/\n            , 7];\n\n          case 6:\n            _h = {\n              Authorization: null\n            };\n            _l.label = 7;\n\n          case 7:\n            _g = _h;\n            _l.label = 8;\n\n          case 8:\n            _j = [__assign.apply(void 0, _f.concat([_g]))];\n            return [4\n            /*yield*/\n            , graphql_headers({\n              query: query,\n              variables: variables\n            })];\n\n          case 9:\n            headers = __assign.apply(void 0, [__assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), additionalHeaders]), !customGraphqlEndpoint && (_k = {}, _k[USER_AGENT_HEADER] = getAmplifyUserAgent(userAgentSuffix), _k)]);\n            body = {\n              query: print(query),\n              variables: variables\n            };\n            init = Object.assign({\n              headers: headers,\n              body: body,\n              signerServiceInfo: {\n                service: !customGraphqlEndpoint ? 'appsync' : 'execute-api',\n                region: !customGraphqlEndpoint ? region : customEndpointRegion\n              }\n            }, initParams);\n            endpoint = customGraphqlEndpoint || appSyncGraphqlEndpoint;\n\n            if (!endpoint) {\n              error = new GraphQLError('No graphql endpoint provided.');\n              throw {\n                data: {},\n                errors: [error]\n              };\n            }\n\n            _l.label = 10;\n\n          case 10:\n            _l.trys.push([10, 12,, 13]);\n\n            return [4\n            /*yield*/\n            , this._api.post(endpoint, init)];\n\n          case 11:\n            response = _l.sent();\n            return [3\n            /*break*/\n            , 13];\n\n          case 12:\n            err_1 = _l.sent(); // If the exception is because user intentionally\n            // cancelled the request, do not modify the exception\n            // so that clients can identify the exception correctly.\n\n            if (this._api.isCancel(err_1)) {\n              throw err_1;\n            }\n\n            response = {\n              data: {},\n              errors: [new GraphQLError(err_1.message, null, null, null, null, err_1)]\n            };\n            return [3\n            /*break*/\n            , 13];\n\n          case 13:\n            errors = response.errors;\n\n            if (errors && errors.length) {\n              throw response;\n            }\n\n            return [2\n            /*return*/\n            , response];\n        }\n      });\n    });\n  };\n  /**\n   * Checks to see if an error thrown is from an api request cancellation\n   * @param {any} error - Any error\n   * @return {boolean} - A boolean indicating if the error was from an api request cancellation\n   */\n\n\n  GraphQLAPIClass.prototype.isCancel = function (error) {\n    return this._api.isCancel(error);\n  };\n  /**\n   * Cancels an inflight request. Only applicable for graphql queries and mutations\n   * @param {any} request - request to cancel\n   * @return {boolean} - A boolean indicating if the request was cancelled\n   */\n\n\n  GraphQLAPIClass.prototype.cancel = function (request, message) {\n    return this._api.cancel(request, message);\n  };\n  /**\n   * Check if the request has a corresponding cancel token in the WeakMap.\n   * @params request - The request promise\n   * @return if the request has a corresponding cancel token.\n   */\n\n\n  GraphQLAPIClass.prototype.hasCancelToken = function (request) {\n    return this._api.hasCancelToken(request);\n  };\n\n  GraphQLAPIClass.prototype._graphqlSubscribe = function (_a, additionalHeaders) {\n    var query = _a.query,\n        variables = _a.variables,\n        defaultAuthenticationType = _a.authMode,\n        authToken = _a.authToken;\n\n    if (additionalHeaders === void 0) {\n      additionalHeaders = {};\n    }\n\n    var _b = this._options,\n        region = _b.aws_appsync_region,\n        appSyncGraphqlEndpoint = _b.aws_appsync_graphqlEndpoint,\n        aws_appsync_authenticationType = _b.aws_appsync_authenticationType,\n        apiKey = _b.aws_appsync_apiKey,\n        _c = _b.graphql_headers,\n        graphql_headers = _c === void 0 ? function () {\n      return {};\n    } : _c;\n    var authenticationType = defaultAuthenticationType || aws_appsync_authenticationType || 'AWS_IAM';\n\n    if (PubSub && typeof PubSub.subscribe === 'function') {\n      return PubSub.subscribe('', {\n        provider: INTERNAL_AWS_APPSYNC_REALTIME_PUBSUB_PROVIDER,\n        appSyncGraphqlEndpoint: appSyncGraphqlEndpoint,\n        authenticationType: authenticationType,\n        apiKey: apiKey,\n        query: print(query),\n        region: region,\n        variables: variables,\n        graphql_headers: graphql_headers,\n        additionalHeaders: additionalHeaders,\n        authToken: authToken\n      });\n    } else {\n      logger.debug('No pubsub module applied for subscription');\n      throw new Error('No pubsub module applied for subscription');\n    }\n  };\n  /**\n   * @private\n   */\n\n\n  GraphQLAPIClass.prototype._ensureCredentials = function () {\n    var _this = this;\n\n    return this.Credentials.get().then(function (credentials) {\n      if (!credentials) return false;\n\n      var cred = _this.Credentials.shear(credentials);\n\n      logger.debug('set credentials for api', cred);\n      return true;\n    }).catch(function (err) {\n      logger.warn('ensure credentials error', err);\n      return false;\n    });\n  };\n\n  return GraphQLAPIClass;\n}();\n\nexport { GraphQLAPIClass };\nexport var GraphQLAPI = new GraphQLAPIClass(null);\nAmplify.register(GraphQLAPI);","map":{"version":3,"mappings":"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","names":["print","parse","GraphQLError","Amplify","ConsoleLogger","Logger","Credentials","getAmplifyUserAgent","INTERNAL_AWS_APPSYNC_REALTIME_PUBSUB_PROVIDER","PubSub","Auth","Cache","GraphQLAuthError","RestClient","USER_AGENT_HEADER","logger","graphqlOperation","query","variables","authToken","userAgentSuffix","options","_options","debug","GraphQLAPIClass","_a","_b","API","otherOptions","opt","Object","assign","region","header","graphql_headers","warn","undefined","createInstance","_api","Promise","reject","defaultAuthenticationType","additionalHeaders","aws_appsync_authenticationType","apiKey","authenticationType","headers","Error","NO_API_KEY","Authorization","_ensureCredentials","credentialsOK","_c","NO_CREDENTIALS","token","getItem","federatedInfo","currentAuthenticatedUser","currentUser","NO_FEDERATED_JWT","NO_CURRENT_USER","currentSession","session","getAccessToken","getJwtToken","NO_AUTH_TOKEN","operation","doc","definitions","operationType","paramQuery","authMode","_d","operationDef","cancellableToken","getCancellableToken","initParams","responsePromise","_graphql","updateRequestToBeCancellable","_graphqlSubscribe","_l","appSyncGraphqlEndpoint","customGraphqlEndpoint","customEndpointRegion","_e","_headerBasedAuth","_g","_h","_k","body","init","signerServiceInfo","service","endpoint","error","data","errors","post","response","isCancel","err_1","message","length","request","cancel","hasCancelToken","subscribe","provider","get","then","credentials","cred","_this","shear","catch","err","GraphQLAPI","register"],"sources":["C:\\Users\\lmore\\OneDrive\\Documents\\GitHub\\JacksOfAllTrades\\jacksofalltrades\\node_modules\\@aws-amplify\\api-graphql\\src\\GraphQLAPI.ts"],"sourcesContent":["/*\n * Copyright 2017-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nimport {\n\tDocumentNode,\n\tOperationDefinitionNode,\n\tprint,\n\tparse,\n\tGraphQLError,\n\tOperationTypeNode,\n} from 'graphql';\nimport Observable from 'zen-observable-ts';\nimport {\n\tAmplify,\n\tConsoleLogger as Logger,\n\tCredentials,\n\tgetAmplifyUserAgent,\n\tINTERNAL_AWS_APPSYNC_REALTIME_PUBSUB_PROVIDER,\n} from '@aws-amplify/core';\nimport PubSub from '@aws-amplify/pubsub';\nimport Auth from '@aws-amplify/auth';\nimport Cache from '@aws-amplify/cache';\nimport {\n\tGraphQLAuthError,\n\tGraphQLOptions,\n\tGraphQLResult,\n\tGraphQLOperation,\n} from './types';\nimport { RestClient } from '@aws-amplify/api-rest';\nconst USER_AGENT_HEADER = 'x-amz-user-agent';\n\nconst logger = new Logger('GraphQLAPI');\n\nexport const graphqlOperation = (\n\tquery,\n\tvariables = {},\n\tauthToken?: string,\n\tuserAgentSuffix?: string\n) => ({\n\tquery,\n\tvariables,\n\tauthToken,\n\tuserAgentSuffix,\n});\n\n/**\n * Export Cloud Logic APIs\n */\nexport class GraphQLAPIClass {\n\t/**\n\t * @private\n\t */\n\tprivate _options;\n\tprivate _api = null;\n\n\tAuth = Auth;\n\tCache = Cache;\n\tCredentials = Credentials;\n\n\t/**\n\t * Initialize GraphQL API with AWS configuration\n\t * @param {Object} options - Configuration object for API\n\t */\n\tconstructor(options) {\n\t\tthis._options = options;\n\t\tlogger.debug('API Options', this._options);\n\t}\n\n\tpublic getModuleName() {\n\t\treturn 'GraphQLAPI';\n\t}\n\n\t/**\n\t * Configure API\n\t * @param {Object} config - Configuration of the API\n\t * @return {Object} - The current configuration\n\t */\n\tconfigure(options) {\n\t\tconst { API = {}, ...otherOptions } = options || {};\n\t\tlet opt = { ...otherOptions, ...API };\n\t\tlogger.debug('configure GraphQL API', { opt });\n\n\t\tif (opt['aws_project_region']) {\n\t\t\topt = Object.assign({}, opt, {\n\t\t\t\tregion: opt['aws_project_region'],\n\t\t\t\theader: {},\n\t\t\t});\n\t\t}\n\n\t\tif (\n\t\t\ttypeof opt.graphql_headers !== 'undefined' &&\n\t\t\ttypeof opt.graphql_headers !== 'function'\n\t\t) {\n\t\t\tlogger.warn('graphql_headers should be a function');\n\t\t\topt.graphql_headers = undefined;\n\t\t}\n\n\t\tthis._options = Object.assign({}, this._options, opt);\n\n\t\tthis.createInstance();\n\n\t\treturn this._options;\n\t}\n\n\t/**\n\t * Create an instance of API for the library\n\t * @return - A promise of true if Success\n\t */\n\tcreateInstance() {\n\t\tlogger.debug('create Rest instance');\n\t\tif (this._options) {\n\t\t\tthis._api = new RestClient(this._options);\n\t\t\t// Share instance Credentials with client for SSR\n\t\t\tthis._api.Credentials = this.Credentials;\n\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn Promise.reject('API not configured');\n\t\t}\n\t}\n\n\tprivate async _headerBasedAuth(\n\t\tdefaultAuthenticationType?,\n\t\tadditionalHeaders: { [key: string]: string } = {}\n\t) {\n\t\tconst { aws_appsync_authenticationType, aws_appsync_apiKey: apiKey } =\n\t\t\tthis._options;\n\t\tconst authenticationType =\n\t\t\tdefaultAuthenticationType || aws_appsync_authenticationType || 'AWS_IAM';\n\t\tlet headers = {};\n\n\t\tswitch (authenticationType) {\n\t\t\tcase 'API_KEY':\n\t\t\t\tif (!apiKey) {\n\t\t\t\t\tthrow new Error(GraphQLAuthError.NO_API_KEY);\n\t\t\t\t}\n\t\t\t\theaders = {\n\t\t\t\t\tAuthorization: null,\n\t\t\t\t\t'X-Api-Key': apiKey,\n\t\t\t\t};\n\t\t\t\tbreak;\n\t\t\tcase 'AWS_IAM':\n\t\t\t\tconst credentialsOK = await this._ensureCredentials();\n\t\t\t\tif (!credentialsOK) {\n\t\t\t\t\tthrow new Error(GraphQLAuthError.NO_CREDENTIALS);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'OPENID_CONNECT':\n\t\t\t\ttry {\n\t\t\t\t\tlet token;\n\t\t\t\t\t// backwards compatibility\n\t\t\t\t\tconst federatedInfo = await Cache.getItem('federatedInfo');\n\t\t\t\t\tif (federatedInfo) {\n\t\t\t\t\t\ttoken = federatedInfo.token;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst currentUser = await Auth.currentAuthenticatedUser();\n\t\t\t\t\t\tif (currentUser) {\n\t\t\t\t\t\t\ttoken = currentUser.token;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (!token) {\n\t\t\t\t\t\tthrow new Error(GraphQLAuthError.NO_FEDERATED_JWT);\n\t\t\t\t\t}\n\t\t\t\t\theaders = {\n\t\t\t\t\t\tAuthorization: token,\n\t\t\t\t\t};\n\t\t\t\t} catch (e) {\n\t\t\t\t\tthrow new Error(GraphQLAuthError.NO_CURRENT_USER);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'AMAZON_COGNITO_USER_POOLS':\n\t\t\t\ttry {\n\t\t\t\t\tconst session = await this.Auth.currentSession();\n\t\t\t\t\theaders = {\n\t\t\t\t\t\tAuthorization: session.getAccessToken().getJwtToken(),\n\t\t\t\t\t};\n\t\t\t\t} catch (e) {\n\t\t\t\t\tthrow new Error(GraphQLAuthError.NO_CURRENT_USER);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'AWS_LAMBDA':\n\t\t\t\tif (!additionalHeaders.Authorization) {\n\t\t\t\t\tthrow new Error(GraphQLAuthError.NO_AUTH_TOKEN);\n\t\t\t\t}\n\t\t\t\theaders = {\n\t\t\t\t\tAuthorization: additionalHeaders.Authorization,\n\t\t\t\t};\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\theaders = {\n\t\t\t\t\tAuthorization: null,\n\t\t\t\t};\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn headers;\n\t}\n\n\t/**\n\t * to get the operation type\n\t * @param operation\n\t */\n\tgetGraphqlOperationType(operation: GraphQLOperation): OperationTypeNode {\n\t\tconst doc = parse(operation);\n\t\tconst definitions =\n\t\t\tdoc.definitions as ReadonlyArray<OperationDefinitionNode>;\n\t\tconst [{ operation: operationType }] = definitions;\n\n\t\treturn operationType;\n\t}\n\n\t/**\n\t * Executes a GraphQL operation\n\t *\n\t * @param options - GraphQL Options\n\t * @param [additionalHeaders] - headers to merge in after any `graphql_headers` set in the config\n\t * @returns An Observable if the query is a subscription query, else a promise of the graphql result.\n\t */\n\tgraphql<T = any>(\n\t\t{\n\t\t\tquery: paramQuery,\n\t\t\tvariables = {},\n\t\t\tauthMode,\n\t\t\tauthToken,\n\t\t\tuserAgentSuffix,\n\t\t}: GraphQLOptions,\n\t\tadditionalHeaders?: { [key: string]: string }\n\t): Observable<GraphQLResult<T>> | Promise<GraphQLResult<T>> {\n\t\tconst query =\n\t\t\ttypeof paramQuery === 'string'\n\t\t\t\t? parse(paramQuery)\n\t\t\t\t: parse(print(paramQuery));\n\n\t\tconst [operationDef = {}] = query.definitions.filter(\n\t\t\tdef => def.kind === 'OperationDefinition'\n\t\t);\n\t\tconst { operation: operationType } =\n\t\t\toperationDef as OperationDefinitionNode;\n\n\t\tconst headers = additionalHeaders || {};\n\n\t\t// if an authorization header is set, have the explicit authToken take precedence\n\t\tif (authToken) {\n\t\t\theaders.Authorization = authToken;\n\t\t}\n\n\t\tswitch (operationType) {\n\t\t\tcase 'query':\n\t\t\tcase 'mutation':\n\t\t\t\tconst cancellableToken = this._api.getCancellableToken();\n\t\t\t\tconst initParams = { cancellableToken };\n\t\t\t\tconst responsePromise = this._graphql<T>(\n\t\t\t\t\t{ query, variables, authMode, userAgentSuffix },\n\t\t\t\t\theaders,\n\t\t\t\t\tinitParams\n\t\t\t\t);\n\t\t\t\tthis._api.updateRequestToBeCancellable(\n\t\t\t\t\tresponsePromise,\n\t\t\t\t\tcancellableToken\n\t\t\t\t);\n\t\t\t\treturn responsePromise;\n\t\t\tcase 'subscription':\n\t\t\t\treturn this._graphqlSubscribe({ query, variables, authMode }, headers);\n\t\t\tdefault:\n\t\t\t\tthrow new Error(`invalid operation type: ${operationType}`);\n\t\t}\n\t}\n\n\tprivate async _graphql<T = any>(\n\t\t{ query, variables, authMode, userAgentSuffix }: GraphQLOptions,\n\t\tadditionalHeaders = {},\n\t\tinitParams = {}\n\t): Promise<GraphQLResult<T>> {\n\t\tif (!this._api) {\n\t\t\tawait this.createInstance();\n\t\t}\n\n\t\tconst {\n\t\t\taws_appsync_region: region,\n\t\t\taws_appsync_graphqlEndpoint: appSyncGraphqlEndpoint,\n\t\t\tgraphql_headers = () => ({}),\n\t\t\tgraphql_endpoint: customGraphqlEndpoint,\n\t\t\tgraphql_endpoint_iam_region: customEndpointRegion,\n\t\t} = this._options;\n\n\t\tconst headers = {\n\t\t\t...(!customGraphqlEndpoint &&\n\t\t\t\t(await this._headerBasedAuth(authMode, additionalHeaders))),\n\t\t\t...(customGraphqlEndpoint &&\n\t\t\t\t(customEndpointRegion\n\t\t\t\t\t? await this._headerBasedAuth(authMode, additionalHeaders)\n\t\t\t\t\t: { Authorization: null })),\n\t\t\t...(await graphql_headers({ query, variables })),\n\t\t\t...additionalHeaders,\n\t\t\t...(!customGraphqlEndpoint && {\n\t\t\t\t[USER_AGENT_HEADER]: getAmplifyUserAgent(userAgentSuffix),\n\t\t\t}),\n\t\t};\n\n\t\tconst body = {\n\t\t\tquery: print(query as DocumentNode),\n\t\t\tvariables,\n\t\t};\n\n\t\tconst init = Object.assign(\n\t\t\t{\n\t\t\t\theaders,\n\t\t\t\tbody,\n\t\t\t\tsignerServiceInfo: {\n\t\t\t\t\tservice: !customGraphqlEndpoint ? 'appsync' : 'execute-api',\n\t\t\t\t\tregion: !customGraphqlEndpoint ? region : customEndpointRegion,\n\t\t\t\t},\n\t\t\t},\n\t\t\tinitParams\n\t\t);\n\n\t\tconst endpoint = customGraphqlEndpoint || appSyncGraphqlEndpoint;\n\n\t\tif (!endpoint) {\n\t\t\tconst error = new GraphQLError('No graphql endpoint provided.');\n\n\t\t\tthrow {\n\t\t\t\tdata: {},\n\t\t\t\terrors: [error],\n\t\t\t};\n\t\t}\n\n\t\tlet response;\n\t\ttry {\n\t\t\tresponse = await this._api.post(endpoint, init);\n\t\t} catch (err) {\n\t\t\t// If the exception is because user intentionally\n\t\t\t// cancelled the request, do not modify the exception\n\t\t\t// so that clients can identify the exception correctly.\n\t\t\tif (this._api.isCancel(err)) {\n\t\t\t\tthrow err;\n\t\t\t}\n\t\t\tresponse = {\n\t\t\t\tdata: {},\n\t\t\t\terrors: [new GraphQLError(err.message, null, null, null, null, err)],\n\t\t\t};\n\t\t}\n\n\t\tconst { errors } = response;\n\n\t\tif (errors && errors.length) {\n\t\t\tthrow response;\n\t\t}\n\n\t\treturn response;\n\t}\n\n\t/**\n\t * Checks to see if an error thrown is from an api request cancellation\n\t * @param {any} error - Any error\n\t * @return {boolean} - A boolean indicating if the error was from an api request cancellation\n\t */\n\tisCancel(error) {\n\t\treturn this._api.isCancel(error);\n\t}\n\n\t/**\n\t * Cancels an inflight request. Only applicable for graphql queries and mutations\n\t * @param {any} request - request to cancel\n\t * @return {boolean} - A boolean indicating if the request was cancelled\n\t */\n\tcancel(request: Promise<any>, message?: string) {\n\t\treturn this._api.cancel(request, message);\n\t}\n\n\t/**\n\t * Check if the request has a corresponding cancel token in the WeakMap.\n\t * @params request - The request promise\n\t * @return if the request has a corresponding cancel token.\n\t */\n\thasCancelToken(request: Promise<any>) {\n\t\treturn this._api.hasCancelToken(request);\n\t}\n\n\tprivate _graphqlSubscribe(\n\t\t{\n\t\t\tquery,\n\t\t\tvariables,\n\t\t\tauthMode: defaultAuthenticationType,\n\t\t\tauthToken,\n\t\t}: GraphQLOptions,\n\t\tadditionalHeaders = {}\n\t): Observable<any> {\n\t\tconst {\n\t\t\taws_appsync_region: region,\n\t\t\taws_appsync_graphqlEndpoint: appSyncGraphqlEndpoint,\n\t\t\taws_appsync_authenticationType,\n\t\t\taws_appsync_apiKey: apiKey,\n\t\t\tgraphql_headers = () => ({}),\n\t\t} = this._options;\n\t\tconst authenticationType =\n\t\t\tdefaultAuthenticationType || aws_appsync_authenticationType || 'AWS_IAM';\n\n\t\tif (PubSub && typeof PubSub.subscribe === 'function') {\n\t\t\treturn PubSub.subscribe('', {\n\t\t\t\tprovider: INTERNAL_AWS_APPSYNC_REALTIME_PUBSUB_PROVIDER,\n\t\t\t\tappSyncGraphqlEndpoint,\n\t\t\t\tauthenticationType,\n\t\t\t\tapiKey,\n\t\t\t\tquery: print(query as DocumentNode),\n\t\t\t\tregion,\n\t\t\t\tvariables,\n\t\t\t\tgraphql_headers,\n\t\t\t\tadditionalHeaders,\n\t\t\t\tauthToken,\n\t\t\t});\n\t\t} else {\n\t\t\tlogger.debug('No pubsub module applied for subscription');\n\t\t\tthrow new Error('No pubsub module applied for subscription');\n\t\t}\n\t}\n\n\t/**\n\t * @private\n\t */\n\t_ensureCredentials() {\n\t\treturn this.Credentials.get()\n\t\t\t.then(credentials => {\n\t\t\t\tif (!credentials) return false;\n\t\t\t\tconst cred = this.Credentials.shear(credentials);\n\t\t\t\tlogger.debug('set credentials for api', cred);\n\n\t\t\t\treturn true;\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tlogger.warn('ensure credentials error', err);\n\t\t\t\treturn false;\n\t\t\t});\n\t}\n}\n\nexport const GraphQLAPI = new GraphQLAPIClass(null);\nAmplify.register(GraphQLAPI);\n"]},"metadata":{},"sourceType":"module"}