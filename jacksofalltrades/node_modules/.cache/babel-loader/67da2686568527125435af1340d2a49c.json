{"ast":null,"code":"const MapboxDraw = require('@mapbox/mapbox-gl-draw');\n\nconst createSupplementaryPoints = require(\"../utils/create_supplementary_points\");\n\nconst moveFeatures = require(\"../utils/move_features\");\n\nconst Constants = require(\"../utils/constants\");\n\nconst createSupplementaryPointsForCircle = require('../utils/create_supplementary_points_circle');\n\nconst SimpleSelectModeOverride = MapboxDraw.modes.simple_select;\n\nSimpleSelectModeOverride.dragMove = function (state, e) {\n  // Dragging when drag move is enabled\n  state.dragMoving = true;\n  e.originalEvent.stopPropagation();\n  const delta = {\n    lng: e.lngLat.lng - state.dragMoveLocation.lng,\n    lat: e.lngLat.lat - state.dragMoveLocation.lat\n  };\n  moveFeatures(this.getSelected(), delta);\n  this.getSelected().filter(feature => feature.properties.isCircle).map(circle => circle.properties.center).forEach(center => {\n    center[0] += delta.lng;\n    center[1] += delta.lat;\n  });\n  state.dragMoveLocation = e.lngLat;\n};\n\nSimpleSelectModeOverride.toDisplayFeatures = function (state, geojson, display) {\n  geojson.properties.active = this.isSelected(geojson.properties.id) ? Constants.activeStates.ACTIVE : Constants.activeStates.INACTIVE;\n  display(geojson);\n  this.fireActionable();\n  if (geojson.properties.active !== Constants.activeStates.ACTIVE || geojson.geometry.type === Constants.geojsonTypes.POINT) return;\n  const supplementaryPoints = geojson.properties.user_isCircle ? createSupplementaryPointsForCircle(geojson) : createSupplementaryPoints(geojson);\n  supplementaryPoints.forEach(display);\n};\n\nmodule.exports = SimpleSelectModeOverride;","map":{"version":3,"names":["MapboxDraw","require","createSupplementaryPoints","moveFeatures","Constants","createSupplementaryPointsForCircle","SimpleSelectModeOverride","modes","simple_select","dragMove","state","e","dragMoving","originalEvent","stopPropagation","delta","lng","lngLat","dragMoveLocation","lat","getSelected","filter","feature","properties","isCircle","map","circle","center","forEach","toDisplayFeatures","geojson","display","active","isSelected","id","activeStates","ACTIVE","INACTIVE","fireActionable","geometry","type","geojsonTypes","POINT","supplementaryPoints","user_isCircle","module","exports"],"sources":["C:/Users/lmore/OneDrive/Documents/GitHub/JacksOfAllTrades/jacksofalltrades/node_modules/maplibre-gl-draw-circle/lib/modes/SimpleSelectModeOverride.js"],"sourcesContent":["const MapboxDraw = require('@mapbox/mapbox-gl-draw');\nconst createSupplementaryPoints = require(\"../utils/create_supplementary_points\");\nconst moveFeatures = require(\"../utils/move_features\");\nconst Constants = require(\"../utils/constants\");\nconst createSupplementaryPointsForCircle = require('../utils/create_supplementary_points_circle');\n\n\nconst SimpleSelectModeOverride = MapboxDraw.modes.simple_select;\n\nSimpleSelectModeOverride.dragMove = function(state, e) {\n  // Dragging when drag move is enabled\n  state.dragMoving = true;\n  e.originalEvent.stopPropagation();\n\n  const delta = {\n    lng: e.lngLat.lng - state.dragMoveLocation.lng,\n    lat: e.lngLat.lat - state.dragMoveLocation.lat\n  };\n\n  moveFeatures(this.getSelected(), delta);\n\n  this.getSelected()\n    .filter(feature => feature.properties.isCircle)\n    .map(circle => circle.properties.center)\n    .forEach(center => {\n      center[0] += delta.lng;\n      center[1] += delta.lat;\n    });\n\n  state.dragMoveLocation = e.lngLat;\n};\n\nSimpleSelectModeOverride.toDisplayFeatures = function(state, geojson, display) {\n    geojson.properties.active = (this.isSelected(geojson.properties.id)) ?\n      Constants.activeStates.ACTIVE : Constants.activeStates.INACTIVE;\n    display(geojson);\n    this.fireActionable();\n    if (geojson.properties.active !== Constants.activeStates.ACTIVE ||\n      geojson.geometry.type === Constants.geojsonTypes.POINT) return;\n    const supplementaryPoints = geojson.properties.user_isCircle ?\n      createSupplementaryPointsForCircle(geojson) : createSupplementaryPoints(geojson);\n    supplementaryPoints.forEach(display);\n};\n  \nmodule.exports = SimpleSelectModeOverride;"],"mappings":"AAAA,MAAMA,UAAU,GAAGC,OAAO,CAAC,wBAAD,CAA1B;;AACA,MAAMC,yBAAyB,GAAGD,OAAO,CAAC,sCAAD,CAAzC;;AACA,MAAME,YAAY,GAAGF,OAAO,CAAC,wBAAD,CAA5B;;AACA,MAAMG,SAAS,GAAGH,OAAO,CAAC,oBAAD,CAAzB;;AACA,MAAMI,kCAAkC,GAAGJ,OAAO,CAAC,6CAAD,CAAlD;;AAGA,MAAMK,wBAAwB,GAAGN,UAAU,CAACO,KAAX,CAAiBC,aAAlD;;AAEAF,wBAAwB,CAACG,QAAzB,GAAoC,UAASC,KAAT,EAAgBC,CAAhB,EAAmB;EACrD;EACAD,KAAK,CAACE,UAAN,GAAmB,IAAnB;EACAD,CAAC,CAACE,aAAF,CAAgBC,eAAhB;EAEA,MAAMC,KAAK,GAAG;IACZC,GAAG,EAAEL,CAAC,CAACM,MAAF,CAASD,GAAT,GAAeN,KAAK,CAACQ,gBAAN,CAAuBF,GAD/B;IAEZG,GAAG,EAAER,CAAC,CAACM,MAAF,CAASE,GAAT,GAAeT,KAAK,CAACQ,gBAAN,CAAuBC;EAF/B,CAAd;EAKAhB,YAAY,CAAC,KAAKiB,WAAL,EAAD,EAAqBL,KAArB,CAAZ;EAEA,KAAKK,WAAL,GACGC,MADH,CACUC,OAAO,IAAIA,OAAO,CAACC,UAAR,CAAmBC,QADxC,EAEGC,GAFH,CAEOC,MAAM,IAAIA,MAAM,CAACH,UAAP,CAAkBI,MAFnC,EAGGC,OAHH,CAGWD,MAAM,IAAI;IACjBA,MAAM,CAAC,CAAD,CAAN,IAAaZ,KAAK,CAACC,GAAnB;IACAW,MAAM,CAAC,CAAD,CAAN,IAAaZ,KAAK,CAACI,GAAnB;EACD,CANH;EAQAT,KAAK,CAACQ,gBAAN,GAAyBP,CAAC,CAACM,MAA3B;AACD,CArBD;;AAuBAX,wBAAwB,CAACuB,iBAAzB,GAA6C,UAASnB,KAAT,EAAgBoB,OAAhB,EAAyBC,OAAzB,EAAkC;EAC3ED,OAAO,CAACP,UAAR,CAAmBS,MAAnB,GAA6B,KAAKC,UAAL,CAAgBH,OAAO,CAACP,UAAR,CAAmBW,EAAnC,CAAD,GAC1B9B,SAAS,CAAC+B,YAAV,CAAuBC,MADG,GACMhC,SAAS,CAAC+B,YAAV,CAAuBE,QADzD;EAEAN,OAAO,CAACD,OAAD,CAAP;EACA,KAAKQ,cAAL;EACA,IAAIR,OAAO,CAACP,UAAR,CAAmBS,MAAnB,KAA8B5B,SAAS,CAAC+B,YAAV,CAAuBC,MAArD,IACFN,OAAO,CAACS,QAAR,CAAiBC,IAAjB,KAA0BpC,SAAS,CAACqC,YAAV,CAAuBC,KADnD,EAC0D;EAC1D,MAAMC,mBAAmB,GAAGb,OAAO,CAACP,UAAR,CAAmBqB,aAAnB,GAC1BvC,kCAAkC,CAACyB,OAAD,CADR,GACoB5B,yBAAyB,CAAC4B,OAAD,CADzE;EAEAa,mBAAmB,CAACf,OAApB,CAA4BG,OAA5B;AACH,CAVD;;AAYAc,MAAM,CAACC,OAAP,GAAiBxC,wBAAjB"},"metadata":{},"sourceType":"script"}