{"ast":null,"code":"import { __assign, __awaiter, __generator, __read } from \"tslib\";\nimport { HttpRequest as __HttpRequest } from \"@aws-sdk/protocol-http\";\nexport var serializeAws_json1_1AssociateKmsKeyCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Logs_20140328.AssociateKmsKey\"\n      };\n      body = JSON.stringify(serializeAws_json1_1AssociateKmsKeyRequest(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1CancelExportTaskCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Logs_20140328.CancelExportTask\"\n      };\n      body = JSON.stringify(serializeAws_json1_1CancelExportTaskRequest(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1CreateExportTaskCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Logs_20140328.CreateExportTask\"\n      };\n      body = JSON.stringify(serializeAws_json1_1CreateExportTaskRequest(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1CreateLogGroupCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Logs_20140328.CreateLogGroup\"\n      };\n      body = JSON.stringify(serializeAws_json1_1CreateLogGroupRequest(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1CreateLogStreamCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Logs_20140328.CreateLogStream\"\n      };\n      body = JSON.stringify(serializeAws_json1_1CreateLogStreamRequest(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1DeleteDestinationCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Logs_20140328.DeleteDestination\"\n      };\n      body = JSON.stringify(serializeAws_json1_1DeleteDestinationRequest(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1DeleteLogGroupCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Logs_20140328.DeleteLogGroup\"\n      };\n      body = JSON.stringify(serializeAws_json1_1DeleteLogGroupRequest(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1DeleteLogStreamCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Logs_20140328.DeleteLogStream\"\n      };\n      body = JSON.stringify(serializeAws_json1_1DeleteLogStreamRequest(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1DeleteMetricFilterCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Logs_20140328.DeleteMetricFilter\"\n      };\n      body = JSON.stringify(serializeAws_json1_1DeleteMetricFilterRequest(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1DeleteQueryDefinitionCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Logs_20140328.DeleteQueryDefinition\"\n      };\n      body = JSON.stringify(serializeAws_json1_1DeleteQueryDefinitionRequest(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1DeleteResourcePolicyCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Logs_20140328.DeleteResourcePolicy\"\n      };\n      body = JSON.stringify(serializeAws_json1_1DeleteResourcePolicyRequest(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1DeleteRetentionPolicyCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Logs_20140328.DeleteRetentionPolicy\"\n      };\n      body = JSON.stringify(serializeAws_json1_1DeleteRetentionPolicyRequest(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1DeleteSubscriptionFilterCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Logs_20140328.DeleteSubscriptionFilter\"\n      };\n      body = JSON.stringify(serializeAws_json1_1DeleteSubscriptionFilterRequest(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1DescribeDestinationsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Logs_20140328.DescribeDestinations\"\n      };\n      body = JSON.stringify(serializeAws_json1_1DescribeDestinationsRequest(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1DescribeExportTasksCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Logs_20140328.DescribeExportTasks\"\n      };\n      body = JSON.stringify(serializeAws_json1_1DescribeExportTasksRequest(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1DescribeLogGroupsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Logs_20140328.DescribeLogGroups\"\n      };\n      body = JSON.stringify(serializeAws_json1_1DescribeLogGroupsRequest(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1DescribeLogStreamsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Logs_20140328.DescribeLogStreams\"\n      };\n      body = JSON.stringify(serializeAws_json1_1DescribeLogStreamsRequest(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1DescribeMetricFiltersCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Logs_20140328.DescribeMetricFilters\"\n      };\n      body = JSON.stringify(serializeAws_json1_1DescribeMetricFiltersRequest(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1DescribeQueriesCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Logs_20140328.DescribeQueries\"\n      };\n      body = JSON.stringify(serializeAws_json1_1DescribeQueriesRequest(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1DescribeQueryDefinitionsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Logs_20140328.DescribeQueryDefinitions\"\n      };\n      body = JSON.stringify(serializeAws_json1_1DescribeQueryDefinitionsRequest(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1DescribeResourcePoliciesCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Logs_20140328.DescribeResourcePolicies\"\n      };\n      body = JSON.stringify(serializeAws_json1_1DescribeResourcePoliciesRequest(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1DescribeSubscriptionFiltersCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Logs_20140328.DescribeSubscriptionFilters\"\n      };\n      body = JSON.stringify(serializeAws_json1_1DescribeSubscriptionFiltersRequest(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1DisassociateKmsKeyCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Logs_20140328.DisassociateKmsKey\"\n      };\n      body = JSON.stringify(serializeAws_json1_1DisassociateKmsKeyRequest(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1FilterLogEventsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Logs_20140328.FilterLogEvents\"\n      };\n      body = JSON.stringify(serializeAws_json1_1FilterLogEventsRequest(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1GetLogEventsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Logs_20140328.GetLogEvents\"\n      };\n      body = JSON.stringify(serializeAws_json1_1GetLogEventsRequest(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1GetLogGroupFieldsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Logs_20140328.GetLogGroupFields\"\n      };\n      body = JSON.stringify(serializeAws_json1_1GetLogGroupFieldsRequest(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1GetLogRecordCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Logs_20140328.GetLogRecord\"\n      };\n      body = JSON.stringify(serializeAws_json1_1GetLogRecordRequest(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1GetQueryResultsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Logs_20140328.GetQueryResults\"\n      };\n      body = JSON.stringify(serializeAws_json1_1GetQueryResultsRequest(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1ListTagsLogGroupCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Logs_20140328.ListTagsLogGroup\"\n      };\n      body = JSON.stringify(serializeAws_json1_1ListTagsLogGroupRequest(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1PutDestinationCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Logs_20140328.PutDestination\"\n      };\n      body = JSON.stringify(serializeAws_json1_1PutDestinationRequest(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1PutDestinationPolicyCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Logs_20140328.PutDestinationPolicy\"\n      };\n      body = JSON.stringify(serializeAws_json1_1PutDestinationPolicyRequest(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1PutLogEventsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Logs_20140328.PutLogEvents\"\n      };\n      body = JSON.stringify(serializeAws_json1_1PutLogEventsRequest(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1PutMetricFilterCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Logs_20140328.PutMetricFilter\"\n      };\n      body = JSON.stringify(serializeAws_json1_1PutMetricFilterRequest(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1PutQueryDefinitionCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Logs_20140328.PutQueryDefinition\"\n      };\n      body = JSON.stringify(serializeAws_json1_1PutQueryDefinitionRequest(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1PutResourcePolicyCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Logs_20140328.PutResourcePolicy\"\n      };\n      body = JSON.stringify(serializeAws_json1_1PutResourcePolicyRequest(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1PutRetentionPolicyCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Logs_20140328.PutRetentionPolicy\"\n      };\n      body = JSON.stringify(serializeAws_json1_1PutRetentionPolicyRequest(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1PutSubscriptionFilterCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Logs_20140328.PutSubscriptionFilter\"\n      };\n      body = JSON.stringify(serializeAws_json1_1PutSubscriptionFilterRequest(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1StartQueryCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Logs_20140328.StartQuery\"\n      };\n      body = JSON.stringify(serializeAws_json1_1StartQueryRequest(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1StopQueryCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Logs_20140328.StopQuery\"\n      };\n      body = JSON.stringify(serializeAws_json1_1StopQueryRequest(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1TagLogGroupCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Logs_20140328.TagLogGroup\"\n      };\n      body = JSON.stringify(serializeAws_json1_1TagLogGroupRequest(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1TestMetricFilterCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Logs_20140328.TestMetricFilter\"\n      };\n      body = JSON.stringify(serializeAws_json1_1TestMetricFilterRequest(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1UntagLogGroupCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Logs_20140328.UntagLogGroup\"\n      };\n      body = JSON.stringify(serializeAws_json1_1UntagLogGroupRequest(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var deserializeAws_json1_1AssociateKmsKeyCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1AssociateKmsKeyCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          response = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_json1_1AssociateKmsKeyCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, parsedBody, message;\n\n    var _g;\n\n    return __generator(this, function (_h) {\n      switch (_h.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _g = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_g.body = _h.sent(), _g)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"InvalidParameterException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.cloudwatchlogs#InvalidParameterException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"OperationAbortedException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.cloudwatchlogs#OperationAbortedException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.cloudwatchlogs#ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"ServiceUnavailableException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.cloudwatchlogs#ServiceUnavailableException\":\n              return [3\n              /*break*/\n              , 8];\n          }\n\n          return [3\n          /*break*/\n          , 10];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1OperationAbortedExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 10:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _h.label = 11;\n\n        case 11:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_json1_1CancelExportTaskCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1CancelExportTaskCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          response = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_json1_1CancelExportTaskCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, parsedBody, message;\n\n    var _g;\n\n    return __generator(this, function (_h) {\n      switch (_h.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _g = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_g.body = _h.sent(), _g)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"InvalidOperationException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.cloudwatchlogs#InvalidOperationException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"InvalidParameterException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.cloudwatchlogs#InvalidParameterException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.cloudwatchlogs#ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"ServiceUnavailableException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.cloudwatchlogs#ServiceUnavailableException\":\n              return [3\n              /*break*/\n              , 8];\n          }\n\n          return [3\n          /*break*/\n          , 10];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidOperationExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 10:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _h.label = 11;\n\n        case 11:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_json1_1CreateExportTaskCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1CreateExportTaskCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1CreateExportTaskResponse(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output)\n          }, contents);\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_json1_1CreateExportTaskCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, parsedBody, message;\n\n    var _j;\n\n    return __generator(this, function (_k) {\n      switch (_k.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _j = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_j.body = _k.sent(), _j)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"InvalidParameterException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.cloudwatchlogs#InvalidParameterException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"LimitExceededException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.cloudwatchlogs#LimitExceededException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"OperationAbortedException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.cloudwatchlogs#OperationAbortedException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"ResourceAlreadyExistsException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.cloudwatchlogs#ResourceAlreadyExistsException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.cloudwatchlogs#ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"ServiceUnavailableException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.cloudwatchlogs#ServiceUnavailableException\":\n              return [3\n              /*break*/\n              , 12];\n          }\n\n          return [3\n          /*break*/\n          , 14];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1OperationAbortedExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceAlreadyExistsExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 14:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _k.label = 15;\n\n        case 15:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_json1_1CreateLogGroupCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1CreateLogGroupCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          response = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_json1_1CreateLogGroupCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, parsedBody, message;\n\n    var _h;\n\n    return __generator(this, function (_j) {\n      switch (_j.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _h = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_h.body = _j.sent(), _h)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"InvalidParameterException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.cloudwatchlogs#InvalidParameterException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"LimitExceededException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.cloudwatchlogs#LimitExceededException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"OperationAbortedException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.cloudwatchlogs#OperationAbortedException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"ResourceAlreadyExistsException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.cloudwatchlogs#ResourceAlreadyExistsException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"ServiceUnavailableException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.cloudwatchlogs#ServiceUnavailableException\":\n              return [3\n              /*break*/\n              , 10];\n          }\n\n          return [3\n          /*break*/\n          , 12];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1OperationAbortedExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceAlreadyExistsExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 12:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _j.label = 13;\n\n        case 13:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_json1_1CreateLogStreamCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1CreateLogStreamCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          response = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_json1_1CreateLogStreamCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, parsedBody, message;\n\n    var _g;\n\n    return __generator(this, function (_h) {\n      switch (_h.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _g = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_g.body = _h.sent(), _g)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"InvalidParameterException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.cloudwatchlogs#InvalidParameterException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ResourceAlreadyExistsException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.cloudwatchlogs#ResourceAlreadyExistsException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.cloudwatchlogs#ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"ServiceUnavailableException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.cloudwatchlogs#ServiceUnavailableException\":\n              return [3\n              /*break*/\n              , 8];\n          }\n\n          return [3\n          /*break*/\n          , 10];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceAlreadyExistsExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 10:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _h.label = 11;\n\n        case 11:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_json1_1DeleteDestinationCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1DeleteDestinationCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          response = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_json1_1DeleteDestinationCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, parsedBody, message;\n\n    var _g;\n\n    return __generator(this, function (_h) {\n      switch (_h.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _g = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_g.body = _h.sent(), _g)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"InvalidParameterException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.cloudwatchlogs#InvalidParameterException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"OperationAbortedException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.cloudwatchlogs#OperationAbortedException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.cloudwatchlogs#ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"ServiceUnavailableException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.cloudwatchlogs#ServiceUnavailableException\":\n              return [3\n              /*break*/\n              , 8];\n          }\n\n          return [3\n          /*break*/\n          , 10];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1OperationAbortedExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 10:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _h.label = 11;\n\n        case 11:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_json1_1DeleteLogGroupCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1DeleteLogGroupCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          response = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_json1_1DeleteLogGroupCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, parsedBody, message;\n\n    var _g;\n\n    return __generator(this, function (_h) {\n      switch (_h.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _g = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_g.body = _h.sent(), _g)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"InvalidParameterException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.cloudwatchlogs#InvalidParameterException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"OperationAbortedException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.cloudwatchlogs#OperationAbortedException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.cloudwatchlogs#ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"ServiceUnavailableException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.cloudwatchlogs#ServiceUnavailableException\":\n              return [3\n              /*break*/\n              , 8];\n          }\n\n          return [3\n          /*break*/\n          , 10];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1OperationAbortedExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 10:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _h.label = 11;\n\n        case 11:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_json1_1DeleteLogStreamCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1DeleteLogStreamCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          response = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_json1_1DeleteLogStreamCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, parsedBody, message;\n\n    var _g;\n\n    return __generator(this, function (_h) {\n      switch (_h.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _g = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_g.body = _h.sent(), _g)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"InvalidParameterException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.cloudwatchlogs#InvalidParameterException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"OperationAbortedException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.cloudwatchlogs#OperationAbortedException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.cloudwatchlogs#ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"ServiceUnavailableException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.cloudwatchlogs#ServiceUnavailableException\":\n              return [3\n              /*break*/\n              , 8];\n          }\n\n          return [3\n          /*break*/\n          , 10];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1OperationAbortedExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 10:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _h.label = 11;\n\n        case 11:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_json1_1DeleteMetricFilterCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1DeleteMetricFilterCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          response = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_json1_1DeleteMetricFilterCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, parsedBody, message;\n\n    var _g;\n\n    return __generator(this, function (_h) {\n      switch (_h.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _g = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_g.body = _h.sent(), _g)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"InvalidParameterException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.cloudwatchlogs#InvalidParameterException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"OperationAbortedException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.cloudwatchlogs#OperationAbortedException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.cloudwatchlogs#ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"ServiceUnavailableException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.cloudwatchlogs#ServiceUnavailableException\":\n              return [3\n              /*break*/\n              , 8];\n          }\n\n          return [3\n          /*break*/\n          , 10];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1OperationAbortedExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 10:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _h.label = 11;\n\n        case 11:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_json1_1DeleteQueryDefinitionCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1DeleteQueryDefinitionCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1DeleteQueryDefinitionResponse(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output)\n          }, contents);\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_json1_1DeleteQueryDefinitionCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n\n    var _f;\n\n    return __generator(this, function (_g) {\n      switch (_g.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _f = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"InvalidParameterException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.cloudwatchlogs#InvalidParameterException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.cloudwatchlogs#ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"ServiceUnavailableException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.cloudwatchlogs#ServiceUnavailableException\":\n              return [3\n              /*break*/\n              , 6];\n          }\n\n          return [3\n          /*break*/\n          , 8];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 9];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 9];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 9];\n\n        case 8:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _g.label = 9;\n\n        case 9:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_json1_1DeleteResourcePolicyCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1DeleteResourcePolicyCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          response = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_json1_1DeleteResourcePolicyCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n\n    var _f;\n\n    return __generator(this, function (_g) {\n      switch (_g.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _f = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"InvalidParameterException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.cloudwatchlogs#InvalidParameterException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.cloudwatchlogs#ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"ServiceUnavailableException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.cloudwatchlogs#ServiceUnavailableException\":\n              return [3\n              /*break*/\n              , 6];\n          }\n\n          return [3\n          /*break*/\n          , 8];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 9];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 9];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 9];\n\n        case 8:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _g.label = 9;\n\n        case 9:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_json1_1DeleteRetentionPolicyCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1DeleteRetentionPolicyCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          response = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_json1_1DeleteRetentionPolicyCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, parsedBody, message;\n\n    var _g;\n\n    return __generator(this, function (_h) {\n      switch (_h.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _g = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_g.body = _h.sent(), _g)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"InvalidParameterException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.cloudwatchlogs#InvalidParameterException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"OperationAbortedException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.cloudwatchlogs#OperationAbortedException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.cloudwatchlogs#ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"ServiceUnavailableException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.cloudwatchlogs#ServiceUnavailableException\":\n              return [3\n              /*break*/\n              , 8];\n          }\n\n          return [3\n          /*break*/\n          , 10];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1OperationAbortedExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 10:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _h.label = 11;\n\n        case 11:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_json1_1DeleteSubscriptionFilterCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1DeleteSubscriptionFilterCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          response = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_json1_1DeleteSubscriptionFilterCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, parsedBody, message;\n\n    var _g;\n\n    return __generator(this, function (_h) {\n      switch (_h.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _g = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_g.body = _h.sent(), _g)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"InvalidParameterException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.cloudwatchlogs#InvalidParameterException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"OperationAbortedException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.cloudwatchlogs#OperationAbortedException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.cloudwatchlogs#ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"ServiceUnavailableException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.cloudwatchlogs#ServiceUnavailableException\":\n              return [3\n              /*break*/\n              , 8];\n          }\n\n          return [3\n          /*break*/\n          , 10];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1OperationAbortedExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 10:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _h.label = 11;\n\n        case 11:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_json1_1DescribeDestinationsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1DescribeDestinationsCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1DescribeDestinationsResponse(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output)\n          }, contents);\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_json1_1DescribeDestinationsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, parsedBody, message;\n\n    var _e;\n\n    return __generator(this, function (_f) {\n      switch (_f.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _e = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_e.body = _f.sent(), _e)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"InvalidParameterException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.cloudwatchlogs#InvalidParameterException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ServiceUnavailableException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.cloudwatchlogs#ServiceUnavailableException\":\n              return [3\n              /*break*/\n              , 4];\n          }\n\n          return [3\n          /*break*/\n          , 6];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_f.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 7];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_f.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 7];\n\n        case 6:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _f.label = 7;\n\n        case 7:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_json1_1DescribeExportTasksCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1DescribeExportTasksCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1DescribeExportTasksResponse(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output)\n          }, contents);\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_json1_1DescribeExportTasksCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, parsedBody, message;\n\n    var _e;\n\n    return __generator(this, function (_f) {\n      switch (_f.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _e = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_e.body = _f.sent(), _e)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"InvalidParameterException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.cloudwatchlogs#InvalidParameterException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ServiceUnavailableException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.cloudwatchlogs#ServiceUnavailableException\":\n              return [3\n              /*break*/\n              , 4];\n          }\n\n          return [3\n          /*break*/\n          , 6];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_f.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 7];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_f.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 7];\n\n        case 6:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _f.label = 7;\n\n        case 7:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_json1_1DescribeLogGroupsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1DescribeLogGroupsCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1DescribeLogGroupsResponse(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output)\n          }, contents);\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_json1_1DescribeLogGroupsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, parsedBody, message;\n\n    var _e;\n\n    return __generator(this, function (_f) {\n      switch (_f.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _e = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_e.body = _f.sent(), _e)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"InvalidParameterException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.cloudwatchlogs#InvalidParameterException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ServiceUnavailableException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.cloudwatchlogs#ServiceUnavailableException\":\n              return [3\n              /*break*/\n              , 4];\n          }\n\n          return [3\n          /*break*/\n          , 6];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_f.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 7];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_f.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 7];\n\n        case 6:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _f.label = 7;\n\n        case 7:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_json1_1DescribeLogStreamsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1DescribeLogStreamsCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1DescribeLogStreamsResponse(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output)\n          }, contents);\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_json1_1DescribeLogStreamsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n\n    var _f;\n\n    return __generator(this, function (_g) {\n      switch (_g.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _f = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"InvalidParameterException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.cloudwatchlogs#InvalidParameterException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.cloudwatchlogs#ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"ServiceUnavailableException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.cloudwatchlogs#ServiceUnavailableException\":\n              return [3\n              /*break*/\n              , 6];\n          }\n\n          return [3\n          /*break*/\n          , 8];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 9];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 9];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 9];\n\n        case 8:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _g.label = 9;\n\n        case 9:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_json1_1DescribeMetricFiltersCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1DescribeMetricFiltersCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1DescribeMetricFiltersResponse(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output)\n          }, contents);\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_json1_1DescribeMetricFiltersCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n\n    var _f;\n\n    return __generator(this, function (_g) {\n      switch (_g.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _f = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"InvalidParameterException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.cloudwatchlogs#InvalidParameterException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.cloudwatchlogs#ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"ServiceUnavailableException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.cloudwatchlogs#ServiceUnavailableException\":\n              return [3\n              /*break*/\n              , 6];\n          }\n\n          return [3\n          /*break*/\n          , 8];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 9];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 9];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 9];\n\n        case 8:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _g.label = 9;\n\n        case 9:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_json1_1DescribeQueriesCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1DescribeQueriesCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1DescribeQueriesResponse(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output)\n          }, contents);\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_json1_1DescribeQueriesCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n\n    var _f;\n\n    return __generator(this, function (_g) {\n      switch (_g.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _f = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"InvalidParameterException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.cloudwatchlogs#InvalidParameterException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.cloudwatchlogs#ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"ServiceUnavailableException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.cloudwatchlogs#ServiceUnavailableException\":\n              return [3\n              /*break*/\n              , 6];\n          }\n\n          return [3\n          /*break*/\n          , 8];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 9];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 9];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 9];\n\n        case 8:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _g.label = 9;\n\n        case 9:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_json1_1DescribeQueryDefinitionsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1DescribeQueryDefinitionsCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1DescribeQueryDefinitionsResponse(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output)\n          }, contents);\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_json1_1DescribeQueryDefinitionsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, parsedBody, message;\n\n    var _e;\n\n    return __generator(this, function (_f) {\n      switch (_f.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _e = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_e.body = _f.sent(), _e)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"InvalidParameterException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.cloudwatchlogs#InvalidParameterException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ServiceUnavailableException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.cloudwatchlogs#ServiceUnavailableException\":\n              return [3\n              /*break*/\n              , 4];\n          }\n\n          return [3\n          /*break*/\n          , 6];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_f.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 7];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_f.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 7];\n\n        case 6:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _f.label = 7;\n\n        case 7:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_json1_1DescribeResourcePoliciesCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1DescribeResourcePoliciesCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1DescribeResourcePoliciesResponse(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output)\n          }, contents);\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_json1_1DescribeResourcePoliciesCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, parsedBody, message;\n\n    var _e;\n\n    return __generator(this, function (_f) {\n      switch (_f.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _e = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_e.body = _f.sent(), _e)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"InvalidParameterException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.cloudwatchlogs#InvalidParameterException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ServiceUnavailableException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.cloudwatchlogs#ServiceUnavailableException\":\n              return [3\n              /*break*/\n              , 4];\n          }\n\n          return [3\n          /*break*/\n          , 6];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_f.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 7];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_f.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 7];\n\n        case 6:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _f.label = 7;\n\n        case 7:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_json1_1DescribeSubscriptionFiltersCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1DescribeSubscriptionFiltersCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1DescribeSubscriptionFiltersResponse(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output)\n          }, contents);\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_json1_1DescribeSubscriptionFiltersCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n\n    var _f;\n\n    return __generator(this, function (_g) {\n      switch (_g.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _f = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"InvalidParameterException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.cloudwatchlogs#InvalidParameterException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.cloudwatchlogs#ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"ServiceUnavailableException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.cloudwatchlogs#ServiceUnavailableException\":\n              return [3\n              /*break*/\n              , 6];\n          }\n\n          return [3\n          /*break*/\n          , 8];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 9];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 9];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 9];\n\n        case 8:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _g.label = 9;\n\n        case 9:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_json1_1DisassociateKmsKeyCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1DisassociateKmsKeyCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          response = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_json1_1DisassociateKmsKeyCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, parsedBody, message;\n\n    var _g;\n\n    return __generator(this, function (_h) {\n      switch (_h.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _g = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_g.body = _h.sent(), _g)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"InvalidParameterException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.cloudwatchlogs#InvalidParameterException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"OperationAbortedException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.cloudwatchlogs#OperationAbortedException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.cloudwatchlogs#ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"ServiceUnavailableException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.cloudwatchlogs#ServiceUnavailableException\":\n              return [3\n              /*break*/\n              , 8];\n          }\n\n          return [3\n          /*break*/\n          , 10];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1OperationAbortedExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 10:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _h.label = 11;\n\n        case 11:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_json1_1FilterLogEventsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1FilterLogEventsCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1FilterLogEventsResponse(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output)\n          }, contents);\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_json1_1FilterLogEventsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n\n    var _f;\n\n    return __generator(this, function (_g) {\n      switch (_g.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _f = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"InvalidParameterException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.cloudwatchlogs#InvalidParameterException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.cloudwatchlogs#ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"ServiceUnavailableException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.cloudwatchlogs#ServiceUnavailableException\":\n              return [3\n              /*break*/\n              , 6];\n          }\n\n          return [3\n          /*break*/\n          , 8];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 9];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 9];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 9];\n\n        case 8:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _g.label = 9;\n\n        case 9:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_json1_1GetLogEventsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1GetLogEventsCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1GetLogEventsResponse(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output)\n          }, contents);\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_json1_1GetLogEventsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n\n    var _f;\n\n    return __generator(this, function (_g) {\n      switch (_g.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _f = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"InvalidParameterException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.cloudwatchlogs#InvalidParameterException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.cloudwatchlogs#ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"ServiceUnavailableException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.cloudwatchlogs#ServiceUnavailableException\":\n              return [3\n              /*break*/\n              , 6];\n          }\n\n          return [3\n          /*break*/\n          , 8];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 9];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 9];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 9];\n\n        case 8:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _g.label = 9;\n\n        case 9:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_json1_1GetLogGroupFieldsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1GetLogGroupFieldsCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1GetLogGroupFieldsResponse(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output)\n          }, contents);\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_json1_1GetLogGroupFieldsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, parsedBody, message;\n\n    var _g;\n\n    return __generator(this, function (_h) {\n      switch (_h.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _g = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_g.body = _h.sent(), _g)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"InvalidParameterException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.cloudwatchlogs#InvalidParameterException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"LimitExceededException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.cloudwatchlogs#LimitExceededException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.cloudwatchlogs#ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"ServiceUnavailableException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.cloudwatchlogs#ServiceUnavailableException\":\n              return [3\n              /*break*/\n              , 8];\n          }\n\n          return [3\n          /*break*/\n          , 10];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 10:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _h.label = 11;\n\n        case 11:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_json1_1GetLogRecordCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1GetLogRecordCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1GetLogRecordResponse(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output)\n          }, contents);\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_json1_1GetLogRecordCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, parsedBody, message;\n\n    var _g;\n\n    return __generator(this, function (_h) {\n      switch (_h.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _g = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_g.body = _h.sent(), _g)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"InvalidParameterException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.cloudwatchlogs#InvalidParameterException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"LimitExceededException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.cloudwatchlogs#LimitExceededException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.cloudwatchlogs#ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"ServiceUnavailableException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.cloudwatchlogs#ServiceUnavailableException\":\n              return [3\n              /*break*/\n              , 8];\n          }\n\n          return [3\n          /*break*/\n          , 10];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 10:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _h.label = 11;\n\n        case 11:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_json1_1GetQueryResultsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1GetQueryResultsCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1GetQueryResultsResponse(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output)\n          }, contents);\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_json1_1GetQueryResultsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n\n    var _f;\n\n    return __generator(this, function (_g) {\n      switch (_g.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _f = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"InvalidParameterException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.cloudwatchlogs#InvalidParameterException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.cloudwatchlogs#ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"ServiceUnavailableException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.cloudwatchlogs#ServiceUnavailableException\":\n              return [3\n              /*break*/\n              , 6];\n          }\n\n          return [3\n          /*break*/\n          , 8];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 9];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 9];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 9];\n\n        case 8:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _g.label = 9;\n\n        case 9:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_json1_1ListTagsLogGroupCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1ListTagsLogGroupCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1ListTagsLogGroupResponse(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output)\n          }, contents);\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_json1_1ListTagsLogGroupCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, parsedBody, message;\n\n    var _e;\n\n    return __generator(this, function (_f) {\n      switch (_f.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _e = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_e.body = _f.sent(), _e)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.cloudwatchlogs#ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ServiceUnavailableException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.cloudwatchlogs#ServiceUnavailableException\":\n              return [3\n              /*break*/\n              , 4];\n          }\n\n          return [3\n          /*break*/\n          , 6];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_f.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 7];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_f.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 7];\n\n        case 6:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _f.label = 7;\n\n        case 7:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_json1_1PutDestinationCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1PutDestinationCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1PutDestinationResponse(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output)\n          }, contents);\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_json1_1PutDestinationCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n\n    var _f;\n\n    return __generator(this, function (_g) {\n      switch (_g.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _f = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"InvalidParameterException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.cloudwatchlogs#InvalidParameterException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"OperationAbortedException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.cloudwatchlogs#OperationAbortedException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"ServiceUnavailableException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.cloudwatchlogs#ServiceUnavailableException\":\n              return [3\n              /*break*/\n              , 6];\n          }\n\n          return [3\n          /*break*/\n          , 8];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 9];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1OperationAbortedExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 9];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 9];\n\n        case 8:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _g.label = 9;\n\n        case 9:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_json1_1PutDestinationPolicyCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1PutDestinationPolicyCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          response = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_json1_1PutDestinationPolicyCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n\n    var _f;\n\n    return __generator(this, function (_g) {\n      switch (_g.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _f = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"InvalidParameterException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.cloudwatchlogs#InvalidParameterException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"OperationAbortedException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.cloudwatchlogs#OperationAbortedException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"ServiceUnavailableException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.cloudwatchlogs#ServiceUnavailableException\":\n              return [3\n              /*break*/\n              , 6];\n          }\n\n          return [3\n          /*break*/\n          , 8];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 9];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1OperationAbortedExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 9];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 9];\n\n        case 8:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _g.label = 9;\n\n        case 9:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_json1_1PutLogEventsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1PutLogEventsCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1PutLogEventsResponse(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output)\n          }, contents);\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_json1_1PutLogEventsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, parsedBody, message;\n\n    var _j;\n\n    return __generator(this, function (_k) {\n      switch (_k.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _j = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_j.body = _k.sent(), _j)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"DataAlreadyAcceptedException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.cloudwatchlogs#DataAlreadyAcceptedException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"InvalidParameterException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.cloudwatchlogs#InvalidParameterException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InvalidSequenceTokenException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.cloudwatchlogs#InvalidSequenceTokenException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.cloudwatchlogs#ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"ServiceUnavailableException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.cloudwatchlogs#ServiceUnavailableException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"UnrecognizedClientException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.cloudwatchlogs#UnrecognizedClientException\":\n              return [3\n              /*break*/\n              , 12];\n          }\n\n          return [3\n          /*break*/\n          , 14];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1DataAlreadyAcceptedExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidSequenceTokenExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1UnrecognizedClientExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 14:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _k.label = 15;\n\n        case 15:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_json1_1PutMetricFilterCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1PutMetricFilterCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          response = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_json1_1PutMetricFilterCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, parsedBody, message;\n\n    var _h;\n\n    return __generator(this, function (_j) {\n      switch (_j.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _h = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_h.body = _j.sent(), _h)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"InvalidParameterException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.cloudwatchlogs#InvalidParameterException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"LimitExceededException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.cloudwatchlogs#LimitExceededException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"OperationAbortedException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.cloudwatchlogs#OperationAbortedException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.cloudwatchlogs#ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"ServiceUnavailableException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.cloudwatchlogs#ServiceUnavailableException\":\n              return [3\n              /*break*/\n              , 10];\n          }\n\n          return [3\n          /*break*/\n          , 12];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1OperationAbortedExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 12:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _j.label = 13;\n\n        case 13:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_json1_1PutQueryDefinitionCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1PutQueryDefinitionCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1PutQueryDefinitionResponse(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output)\n          }, contents);\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_json1_1PutQueryDefinitionCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n\n    var _f;\n\n    return __generator(this, function (_g) {\n      switch (_g.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _f = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"InvalidParameterException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.cloudwatchlogs#InvalidParameterException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.cloudwatchlogs#ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"ServiceUnavailableException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.cloudwatchlogs#ServiceUnavailableException\":\n              return [3\n              /*break*/\n              , 6];\n          }\n\n          return [3\n          /*break*/\n          , 8];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 9];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 9];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 9];\n\n        case 8:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _g.label = 9;\n\n        case 9:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_json1_1PutResourcePolicyCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1PutResourcePolicyCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1PutResourcePolicyResponse(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output)\n          }, contents);\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_json1_1PutResourcePolicyCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n\n    var _f;\n\n    return __generator(this, function (_g) {\n      switch (_g.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _f = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"InvalidParameterException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.cloudwatchlogs#InvalidParameterException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"LimitExceededException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.cloudwatchlogs#LimitExceededException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"ServiceUnavailableException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.cloudwatchlogs#ServiceUnavailableException\":\n              return [3\n              /*break*/\n              , 6];\n          }\n\n          return [3\n          /*break*/\n          , 8];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 9];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 9];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 9];\n\n        case 8:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _g.label = 9;\n\n        case 9:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_json1_1PutRetentionPolicyCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1PutRetentionPolicyCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          response = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_json1_1PutRetentionPolicyCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, parsedBody, message;\n\n    var _g;\n\n    return __generator(this, function (_h) {\n      switch (_h.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _g = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_g.body = _h.sent(), _g)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"InvalidParameterException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.cloudwatchlogs#InvalidParameterException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"OperationAbortedException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.cloudwatchlogs#OperationAbortedException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.cloudwatchlogs#ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"ServiceUnavailableException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.cloudwatchlogs#ServiceUnavailableException\":\n              return [3\n              /*break*/\n              , 8];\n          }\n\n          return [3\n          /*break*/\n          , 10];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1OperationAbortedExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 10:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _h.label = 11;\n\n        case 11:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_json1_1PutSubscriptionFilterCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1PutSubscriptionFilterCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          response = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_json1_1PutSubscriptionFilterCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, parsedBody, message;\n\n    var _h;\n\n    return __generator(this, function (_j) {\n      switch (_j.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _h = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_h.body = _j.sent(), _h)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"InvalidParameterException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.cloudwatchlogs#InvalidParameterException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"LimitExceededException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.cloudwatchlogs#LimitExceededException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"OperationAbortedException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.cloudwatchlogs#OperationAbortedException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.cloudwatchlogs#ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"ServiceUnavailableException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.cloudwatchlogs#ServiceUnavailableException\":\n              return [3\n              /*break*/\n              , 10];\n          }\n\n          return [3\n          /*break*/\n          , 12];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1OperationAbortedExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 12:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _j.label = 13;\n\n        case 13:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_json1_1StartQueryCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1StartQueryCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1StartQueryResponse(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output)\n          }, contents);\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_json1_1StartQueryCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, parsedBody, message;\n\n    var _h;\n\n    return __generator(this, function (_j) {\n      switch (_j.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _h = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_h.body = _j.sent(), _h)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"InvalidParameterException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.cloudwatchlogs#InvalidParameterException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"LimitExceededException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.cloudwatchlogs#LimitExceededException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"MalformedQueryException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.cloudwatchlogs#MalformedQueryException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.cloudwatchlogs#ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"ServiceUnavailableException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.cloudwatchlogs#ServiceUnavailableException\":\n              return [3\n              /*break*/\n              , 10];\n          }\n\n          return [3\n          /*break*/\n          , 12];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1MalformedQueryExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 12:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _j.label = 13;\n\n        case 13:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_json1_1StopQueryCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1StopQueryCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1StopQueryResponse(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output)\n          }, contents);\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_json1_1StopQueryCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n\n    var _f;\n\n    return __generator(this, function (_g) {\n      switch (_g.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _f = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"InvalidParameterException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.cloudwatchlogs#InvalidParameterException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.cloudwatchlogs#ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"ServiceUnavailableException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.cloudwatchlogs#ServiceUnavailableException\":\n              return [3\n              /*break*/\n              , 6];\n          }\n\n          return [3\n          /*break*/\n          , 8];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 9];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 9];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 9];\n\n        case 8:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _g.label = 9;\n\n        case 9:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_json1_1TagLogGroupCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1TagLogGroupCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          response = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_json1_1TagLogGroupCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, parsedBody, message;\n\n    var _e;\n\n    return __generator(this, function (_f) {\n      switch (_f.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _e = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_e.body = _f.sent(), _e)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"InvalidParameterException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.cloudwatchlogs#InvalidParameterException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.cloudwatchlogs#ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 4];\n          }\n\n          return [3\n          /*break*/\n          , 6];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_f.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 7];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_f.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 7];\n\n        case 6:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _f.label = 7;\n\n        case 7:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_json1_1TestMetricFilterCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1TestMetricFilterCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1TestMetricFilterResponse(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output)\n          }, contents);\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_json1_1TestMetricFilterCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, parsedBody, message;\n\n    var _e;\n\n    return __generator(this, function (_f) {\n      switch (_f.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _e = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_e.body = _f.sent(), _e)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"InvalidParameterException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.cloudwatchlogs#InvalidParameterException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ServiceUnavailableException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.cloudwatchlogs#ServiceUnavailableException\":\n              return [3\n              /*break*/\n              , 4];\n          }\n\n          return [3\n          /*break*/\n          , 6];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_f.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 7];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_f.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 7];\n\n        case 6:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _f.label = 7;\n\n        case 7:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_json1_1UntagLogGroupCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1UntagLogGroupCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          response = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_json1_1UntagLogGroupCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, parsedBody, message;\n\n    var _d;\n\n    return __generator(this, function (_e) {\n      switch (_e.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _d = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_d.body = _e.sent(), _d)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.cloudwatchlogs#ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 2];\n          }\n\n          return [3\n          /*break*/\n          , 4];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_e.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 5];\n\n        case 4:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _e.label = 5;\n\n        case 5:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nvar deserializeAws_json1_1DataAlreadyAcceptedExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1DataAlreadyAcceptedException(body, context);\n      contents = __assign({\n        name: \"DataAlreadyAcceptedException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_json1_1InvalidOperationExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1InvalidOperationException(body, context);\n      contents = __assign({\n        name: \"InvalidOperationException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_json1_1InvalidParameterExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1InvalidParameterException(body, context);\n      contents = __assign({\n        name: \"InvalidParameterException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_json1_1InvalidSequenceTokenExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1InvalidSequenceTokenException(body, context);\n      contents = __assign({\n        name: \"InvalidSequenceTokenException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_json1_1LimitExceededExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1LimitExceededException(body, context);\n      contents = __assign({\n        name: \"LimitExceededException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_json1_1MalformedQueryExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1MalformedQueryException(body, context);\n      contents = __assign({\n        name: \"MalformedQueryException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_json1_1OperationAbortedExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1OperationAbortedException(body, context);\n      contents = __assign({\n        name: \"OperationAbortedException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_json1_1ResourceAlreadyExistsExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1ResourceAlreadyExistsException(body, context);\n      contents = __assign({\n        name: \"ResourceAlreadyExistsException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_json1_1ResourceNotFoundExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1ResourceNotFoundException(body, context);\n      contents = __assign({\n        name: \"ResourceNotFoundException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_json1_1ServiceUnavailableExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1ServiceUnavailableException(body, context);\n      contents = __assign({\n        name: \"ServiceUnavailableException\",\n        $fault: \"server\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_json1_1UnrecognizedClientExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1UnrecognizedClientException(body, context);\n      contents = __assign({\n        name: \"UnrecognizedClientException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar serializeAws_json1_1AssociateKmsKeyRequest = function (input, context) {\n  return __assign(__assign({}, input.kmsKeyId !== undefined && input.kmsKeyId !== null && {\n    kmsKeyId: input.kmsKeyId\n  }), input.logGroupName !== undefined && input.logGroupName !== null && {\n    logGroupName: input.logGroupName\n  });\n};\n\nvar serializeAws_json1_1CancelExportTaskRequest = function (input, context) {\n  return __assign({}, input.taskId !== undefined && input.taskId !== null && {\n    taskId: input.taskId\n  });\n};\n\nvar serializeAws_json1_1CreateExportTaskRequest = function (input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign(__assign({}, input.destination !== undefined && input.destination !== null && {\n    destination: input.destination\n  }), input.destinationPrefix !== undefined && input.destinationPrefix !== null && {\n    destinationPrefix: input.destinationPrefix\n  }), input.from !== undefined && input.from !== null && {\n    from: input.from\n  }), input.logGroupName !== undefined && input.logGroupName !== null && {\n    logGroupName: input.logGroupName\n  }), input.logStreamNamePrefix !== undefined && input.logStreamNamePrefix !== null && {\n    logStreamNamePrefix: input.logStreamNamePrefix\n  }), input.taskName !== undefined && input.taskName !== null && {\n    taskName: input.taskName\n  }), input.to !== undefined && input.to !== null && {\n    to: input.to\n  });\n};\n\nvar serializeAws_json1_1CreateLogGroupRequest = function (input, context) {\n  return __assign(__assign(__assign({}, input.kmsKeyId !== undefined && input.kmsKeyId !== null && {\n    kmsKeyId: input.kmsKeyId\n  }), input.logGroupName !== undefined && input.logGroupName !== null && {\n    logGroupName: input.logGroupName\n  }), input.tags !== undefined && input.tags !== null && {\n    tags: serializeAws_json1_1Tags(input.tags, context)\n  });\n};\n\nvar serializeAws_json1_1CreateLogStreamRequest = function (input, context) {\n  return __assign(__assign({}, input.logGroupName !== undefined && input.logGroupName !== null && {\n    logGroupName: input.logGroupName\n  }), input.logStreamName !== undefined && input.logStreamName !== null && {\n    logStreamName: input.logStreamName\n  });\n};\n\nvar serializeAws_json1_1DeleteDestinationRequest = function (input, context) {\n  return __assign({}, input.destinationName !== undefined && input.destinationName !== null && {\n    destinationName: input.destinationName\n  });\n};\n\nvar serializeAws_json1_1DeleteLogGroupRequest = function (input, context) {\n  return __assign({}, input.logGroupName !== undefined && input.logGroupName !== null && {\n    logGroupName: input.logGroupName\n  });\n};\n\nvar serializeAws_json1_1DeleteLogStreamRequest = function (input, context) {\n  return __assign(__assign({}, input.logGroupName !== undefined && input.logGroupName !== null && {\n    logGroupName: input.logGroupName\n  }), input.logStreamName !== undefined && input.logStreamName !== null && {\n    logStreamName: input.logStreamName\n  });\n};\n\nvar serializeAws_json1_1DeleteMetricFilterRequest = function (input, context) {\n  return __assign(__assign({}, input.filterName !== undefined && input.filterName !== null && {\n    filterName: input.filterName\n  }), input.logGroupName !== undefined && input.logGroupName !== null && {\n    logGroupName: input.logGroupName\n  });\n};\n\nvar serializeAws_json1_1DeleteQueryDefinitionRequest = function (input, context) {\n  return __assign({}, input.queryDefinitionId !== undefined && input.queryDefinitionId !== null && {\n    queryDefinitionId: input.queryDefinitionId\n  });\n};\n\nvar serializeAws_json1_1DeleteResourcePolicyRequest = function (input, context) {\n  return __assign({}, input.policyName !== undefined && input.policyName !== null && {\n    policyName: input.policyName\n  });\n};\n\nvar serializeAws_json1_1DeleteRetentionPolicyRequest = function (input, context) {\n  return __assign({}, input.logGroupName !== undefined && input.logGroupName !== null && {\n    logGroupName: input.logGroupName\n  });\n};\n\nvar serializeAws_json1_1DeleteSubscriptionFilterRequest = function (input, context) {\n  return __assign(__assign({}, input.filterName !== undefined && input.filterName !== null && {\n    filterName: input.filterName\n  }), input.logGroupName !== undefined && input.logGroupName !== null && {\n    logGroupName: input.logGroupName\n  });\n};\n\nvar serializeAws_json1_1DescribeDestinationsRequest = function (input, context) {\n  return __assign(__assign(__assign({}, input.DestinationNamePrefix !== undefined && input.DestinationNamePrefix !== null && {\n    DestinationNamePrefix: input.DestinationNamePrefix\n  }), input.limit !== undefined && input.limit !== null && {\n    limit: input.limit\n  }), input.nextToken !== undefined && input.nextToken !== null && {\n    nextToken: input.nextToken\n  });\n};\n\nvar serializeAws_json1_1DescribeExportTasksRequest = function (input, context) {\n  return __assign(__assign(__assign(__assign({}, input.limit !== undefined && input.limit !== null && {\n    limit: input.limit\n  }), input.nextToken !== undefined && input.nextToken !== null && {\n    nextToken: input.nextToken\n  }), input.statusCode !== undefined && input.statusCode !== null && {\n    statusCode: input.statusCode\n  }), input.taskId !== undefined && input.taskId !== null && {\n    taskId: input.taskId\n  });\n};\n\nvar serializeAws_json1_1DescribeLogGroupsRequest = function (input, context) {\n  return __assign(__assign(__assign({}, input.limit !== undefined && input.limit !== null && {\n    limit: input.limit\n  }), input.logGroupNamePrefix !== undefined && input.logGroupNamePrefix !== null && {\n    logGroupNamePrefix: input.logGroupNamePrefix\n  }), input.nextToken !== undefined && input.nextToken !== null && {\n    nextToken: input.nextToken\n  });\n};\n\nvar serializeAws_json1_1DescribeLogStreamsRequest = function (input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign({}, input.descending !== undefined && input.descending !== null && {\n    descending: input.descending\n  }), input.limit !== undefined && input.limit !== null && {\n    limit: input.limit\n  }), input.logGroupName !== undefined && input.logGroupName !== null && {\n    logGroupName: input.logGroupName\n  }), input.logStreamNamePrefix !== undefined && input.logStreamNamePrefix !== null && {\n    logStreamNamePrefix: input.logStreamNamePrefix\n  }), input.nextToken !== undefined && input.nextToken !== null && {\n    nextToken: input.nextToken\n  }), input.orderBy !== undefined && input.orderBy !== null && {\n    orderBy: input.orderBy\n  });\n};\n\nvar serializeAws_json1_1DescribeMetricFiltersRequest = function (input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign({}, input.filterNamePrefix !== undefined && input.filterNamePrefix !== null && {\n    filterNamePrefix: input.filterNamePrefix\n  }), input.limit !== undefined && input.limit !== null && {\n    limit: input.limit\n  }), input.logGroupName !== undefined && input.logGroupName !== null && {\n    logGroupName: input.logGroupName\n  }), input.metricName !== undefined && input.metricName !== null && {\n    metricName: input.metricName\n  }), input.metricNamespace !== undefined && input.metricNamespace !== null && {\n    metricNamespace: input.metricNamespace\n  }), input.nextToken !== undefined && input.nextToken !== null && {\n    nextToken: input.nextToken\n  });\n};\n\nvar serializeAws_json1_1DescribeQueriesRequest = function (input, context) {\n  return __assign(__assign(__assign(__assign({}, input.logGroupName !== undefined && input.logGroupName !== null && {\n    logGroupName: input.logGroupName\n  }), input.maxResults !== undefined && input.maxResults !== null && {\n    maxResults: input.maxResults\n  }), input.nextToken !== undefined && input.nextToken !== null && {\n    nextToken: input.nextToken\n  }), input.status !== undefined && input.status !== null && {\n    status: input.status\n  });\n};\n\nvar serializeAws_json1_1DescribeQueryDefinitionsRequest = function (input, context) {\n  return __assign(__assign(__assign({}, input.maxResults !== undefined && input.maxResults !== null && {\n    maxResults: input.maxResults\n  }), input.nextToken !== undefined && input.nextToken !== null && {\n    nextToken: input.nextToken\n  }), input.queryDefinitionNamePrefix !== undefined && input.queryDefinitionNamePrefix !== null && {\n    queryDefinitionNamePrefix: input.queryDefinitionNamePrefix\n  });\n};\n\nvar serializeAws_json1_1DescribeResourcePoliciesRequest = function (input, context) {\n  return __assign(__assign({}, input.limit !== undefined && input.limit !== null && {\n    limit: input.limit\n  }), input.nextToken !== undefined && input.nextToken !== null && {\n    nextToken: input.nextToken\n  });\n};\n\nvar serializeAws_json1_1DescribeSubscriptionFiltersRequest = function (input, context) {\n  return __assign(__assign(__assign(__assign({}, input.filterNamePrefix !== undefined && input.filterNamePrefix !== null && {\n    filterNamePrefix: input.filterNamePrefix\n  }), input.limit !== undefined && input.limit !== null && {\n    limit: input.limit\n  }), input.logGroupName !== undefined && input.logGroupName !== null && {\n    logGroupName: input.logGroupName\n  }), input.nextToken !== undefined && input.nextToken !== null && {\n    nextToken: input.nextToken\n  });\n};\n\nvar serializeAws_json1_1DisassociateKmsKeyRequest = function (input, context) {\n  return __assign({}, input.logGroupName !== undefined && input.logGroupName !== null && {\n    logGroupName: input.logGroupName\n  });\n};\n\nvar serializeAws_json1_1FilterLogEventsRequest = function (input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, input.endTime !== undefined && input.endTime !== null && {\n    endTime: input.endTime\n  }), input.filterPattern !== undefined && input.filterPattern !== null && {\n    filterPattern: input.filterPattern\n  }), input.interleaved !== undefined && input.interleaved !== null && {\n    interleaved: input.interleaved\n  }), input.limit !== undefined && input.limit !== null && {\n    limit: input.limit\n  }), input.logGroupName !== undefined && input.logGroupName !== null && {\n    logGroupName: input.logGroupName\n  }), input.logStreamNamePrefix !== undefined && input.logStreamNamePrefix !== null && {\n    logStreamNamePrefix: input.logStreamNamePrefix\n  }), input.logStreamNames !== undefined && input.logStreamNames !== null && {\n    logStreamNames: serializeAws_json1_1InputLogStreamNames(input.logStreamNames, context)\n  }), input.nextToken !== undefined && input.nextToken !== null && {\n    nextToken: input.nextToken\n  }), input.startTime !== undefined && input.startTime !== null && {\n    startTime: input.startTime\n  });\n};\n\nvar serializeAws_json1_1GetLogEventsRequest = function (input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign(__assign({}, input.endTime !== undefined && input.endTime !== null && {\n    endTime: input.endTime\n  }), input.limit !== undefined && input.limit !== null && {\n    limit: input.limit\n  }), input.logGroupName !== undefined && input.logGroupName !== null && {\n    logGroupName: input.logGroupName\n  }), input.logStreamName !== undefined && input.logStreamName !== null && {\n    logStreamName: input.logStreamName\n  }), input.nextToken !== undefined && input.nextToken !== null && {\n    nextToken: input.nextToken\n  }), input.startFromHead !== undefined && input.startFromHead !== null && {\n    startFromHead: input.startFromHead\n  }), input.startTime !== undefined && input.startTime !== null && {\n    startTime: input.startTime\n  });\n};\n\nvar serializeAws_json1_1GetLogGroupFieldsRequest = function (input, context) {\n  return __assign(__assign({}, input.logGroupName !== undefined && input.logGroupName !== null && {\n    logGroupName: input.logGroupName\n  }), input.time !== undefined && input.time !== null && {\n    time: input.time\n  });\n};\n\nvar serializeAws_json1_1GetLogRecordRequest = function (input, context) {\n  return __assign({}, input.logRecordPointer !== undefined && input.logRecordPointer !== null && {\n    logRecordPointer: input.logRecordPointer\n  });\n};\n\nvar serializeAws_json1_1GetQueryResultsRequest = function (input, context) {\n  return __assign({}, input.queryId !== undefined && input.queryId !== null && {\n    queryId: input.queryId\n  });\n};\n\nvar serializeAws_json1_1InputLogEvent = function (input, context) {\n  return __assign(__assign({}, input.message !== undefined && input.message !== null && {\n    message: input.message\n  }), input.timestamp !== undefined && input.timestamp !== null && {\n    timestamp: input.timestamp\n  });\n};\n\nvar serializeAws_json1_1InputLogEvents = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return serializeAws_json1_1InputLogEvent(entry, context);\n  });\n};\n\nvar serializeAws_json1_1InputLogStreamNames = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return entry;\n  });\n};\n\nvar serializeAws_json1_1ListTagsLogGroupRequest = function (input, context) {\n  return __assign({}, input.logGroupName !== undefined && input.logGroupName !== null && {\n    logGroupName: input.logGroupName\n  });\n};\n\nvar serializeAws_json1_1LogGroupNames = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return entry;\n  });\n};\n\nvar serializeAws_json1_1MetricTransformation = function (input, context) {\n  return __assign(__assign(__assign(__assign({}, input.defaultValue !== undefined && input.defaultValue !== null && {\n    defaultValue: input.defaultValue\n  }), input.metricName !== undefined && input.metricName !== null && {\n    metricName: input.metricName\n  }), input.metricNamespace !== undefined && input.metricNamespace !== null && {\n    metricNamespace: input.metricNamespace\n  }), input.metricValue !== undefined && input.metricValue !== null && {\n    metricValue: input.metricValue\n  });\n};\n\nvar serializeAws_json1_1MetricTransformations = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return serializeAws_json1_1MetricTransformation(entry, context);\n  });\n};\n\nvar serializeAws_json1_1PutDestinationPolicyRequest = function (input, context) {\n  return __assign(__assign({}, input.accessPolicy !== undefined && input.accessPolicy !== null && {\n    accessPolicy: input.accessPolicy\n  }), input.destinationName !== undefined && input.destinationName !== null && {\n    destinationName: input.destinationName\n  });\n};\n\nvar serializeAws_json1_1PutDestinationRequest = function (input, context) {\n  return __assign(__assign(__assign({}, input.destinationName !== undefined && input.destinationName !== null && {\n    destinationName: input.destinationName\n  }), input.roleArn !== undefined && input.roleArn !== null && {\n    roleArn: input.roleArn\n  }), input.targetArn !== undefined && input.targetArn !== null && {\n    targetArn: input.targetArn\n  });\n};\n\nvar serializeAws_json1_1PutLogEventsRequest = function (input, context) {\n  return __assign(__assign(__assign(__assign({}, input.logEvents !== undefined && input.logEvents !== null && {\n    logEvents: serializeAws_json1_1InputLogEvents(input.logEvents, context)\n  }), input.logGroupName !== undefined && input.logGroupName !== null && {\n    logGroupName: input.logGroupName\n  }), input.logStreamName !== undefined && input.logStreamName !== null && {\n    logStreamName: input.logStreamName\n  }), input.sequenceToken !== undefined && input.sequenceToken !== null && {\n    sequenceToken: input.sequenceToken\n  });\n};\n\nvar serializeAws_json1_1PutMetricFilterRequest = function (input, context) {\n  return __assign(__assign(__assign(__assign({}, input.filterName !== undefined && input.filterName !== null && {\n    filterName: input.filterName\n  }), input.filterPattern !== undefined && input.filterPattern !== null && {\n    filterPattern: input.filterPattern\n  }), input.logGroupName !== undefined && input.logGroupName !== null && {\n    logGroupName: input.logGroupName\n  }), input.metricTransformations !== undefined && input.metricTransformations !== null && {\n    metricTransformations: serializeAws_json1_1MetricTransformations(input.metricTransformations, context)\n  });\n};\n\nvar serializeAws_json1_1PutQueryDefinitionRequest = function (input, context) {\n  return __assign(__assign(__assign(__assign({}, input.logGroupNames !== undefined && input.logGroupNames !== null && {\n    logGroupNames: serializeAws_json1_1LogGroupNames(input.logGroupNames, context)\n  }), input.name !== undefined && input.name !== null && {\n    name: input.name\n  }), input.queryDefinitionId !== undefined && input.queryDefinitionId !== null && {\n    queryDefinitionId: input.queryDefinitionId\n  }), input.queryString !== undefined && input.queryString !== null && {\n    queryString: input.queryString\n  });\n};\n\nvar serializeAws_json1_1PutResourcePolicyRequest = function (input, context) {\n  return __assign(__assign({}, input.policyDocument !== undefined && input.policyDocument !== null && {\n    policyDocument: input.policyDocument\n  }), input.policyName !== undefined && input.policyName !== null && {\n    policyName: input.policyName\n  });\n};\n\nvar serializeAws_json1_1PutRetentionPolicyRequest = function (input, context) {\n  return __assign(__assign({}, input.logGroupName !== undefined && input.logGroupName !== null && {\n    logGroupName: input.logGroupName\n  }), input.retentionInDays !== undefined && input.retentionInDays !== null && {\n    retentionInDays: input.retentionInDays\n  });\n};\n\nvar serializeAws_json1_1PutSubscriptionFilterRequest = function (input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign({}, input.destinationArn !== undefined && input.destinationArn !== null && {\n    destinationArn: input.destinationArn\n  }), input.distribution !== undefined && input.distribution !== null && {\n    distribution: input.distribution\n  }), input.filterName !== undefined && input.filterName !== null && {\n    filterName: input.filterName\n  }), input.filterPattern !== undefined && input.filterPattern !== null && {\n    filterPattern: input.filterPattern\n  }), input.logGroupName !== undefined && input.logGroupName !== null && {\n    logGroupName: input.logGroupName\n  }), input.roleArn !== undefined && input.roleArn !== null && {\n    roleArn: input.roleArn\n  });\n};\n\nvar serializeAws_json1_1StartQueryRequest = function (input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign({}, input.endTime !== undefined && input.endTime !== null && {\n    endTime: input.endTime\n  }), input.limit !== undefined && input.limit !== null && {\n    limit: input.limit\n  }), input.logGroupName !== undefined && input.logGroupName !== null && {\n    logGroupName: input.logGroupName\n  }), input.logGroupNames !== undefined && input.logGroupNames !== null && {\n    logGroupNames: serializeAws_json1_1LogGroupNames(input.logGroupNames, context)\n  }), input.queryString !== undefined && input.queryString !== null && {\n    queryString: input.queryString\n  }), input.startTime !== undefined && input.startTime !== null && {\n    startTime: input.startTime\n  });\n};\n\nvar serializeAws_json1_1StopQueryRequest = function (input, context) {\n  return __assign({}, input.queryId !== undefined && input.queryId !== null && {\n    queryId: input.queryId\n  });\n};\n\nvar serializeAws_json1_1TagList = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return entry;\n  });\n};\n\nvar serializeAws_json1_1TagLogGroupRequest = function (input, context) {\n  return __assign(__assign({}, input.logGroupName !== undefined && input.logGroupName !== null && {\n    logGroupName: input.logGroupName\n  }), input.tags !== undefined && input.tags !== null && {\n    tags: serializeAws_json1_1Tags(input.tags, context)\n  });\n};\n\nvar serializeAws_json1_1Tags = function (input, context) {\n  return Object.entries(input).reduce(function (acc, _a) {\n    var _b;\n\n    var _c = __read(_a, 2),\n        key = _c[0],\n        value = _c[1];\n\n    if (value === null) {\n      return acc;\n    }\n\n    return __assign(__assign({}, acc), (_b = {}, _b[key] = value, _b));\n  }, {});\n};\n\nvar serializeAws_json1_1TestEventMessages = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return entry;\n  });\n};\n\nvar serializeAws_json1_1TestMetricFilterRequest = function (input, context) {\n  return __assign(__assign({}, input.filterPattern !== undefined && input.filterPattern !== null && {\n    filterPattern: input.filterPattern\n  }), input.logEventMessages !== undefined && input.logEventMessages !== null && {\n    logEventMessages: serializeAws_json1_1TestEventMessages(input.logEventMessages, context)\n  });\n};\n\nvar serializeAws_json1_1UntagLogGroupRequest = function (input, context) {\n  return __assign(__assign({}, input.logGroupName !== undefined && input.logGroupName !== null && {\n    logGroupName: input.logGroupName\n  }), input.tags !== undefined && input.tags !== null && {\n    tags: serializeAws_json1_1TagList(input.tags, context)\n  });\n};\n\nvar deserializeAws_json1_1CreateExportTaskResponse = function (output, context) {\n  return {\n    taskId: output.taskId !== undefined && output.taskId !== null ? output.taskId : undefined\n  };\n};\n\nvar deserializeAws_json1_1DataAlreadyAcceptedException = function (output, context) {\n  return {\n    expectedSequenceToken: output.expectedSequenceToken !== undefined && output.expectedSequenceToken !== null ? output.expectedSequenceToken : undefined,\n    message: output.message !== undefined && output.message !== null ? output.message : undefined\n  };\n};\n\nvar deserializeAws_json1_1DeleteQueryDefinitionResponse = function (output, context) {\n  return {\n    success: output.success !== undefined && output.success !== null ? output.success : undefined\n  };\n};\n\nvar deserializeAws_json1_1DescribeDestinationsResponse = function (output, context) {\n  return {\n    destinations: output.destinations !== undefined && output.destinations !== null ? deserializeAws_json1_1Destinations(output.destinations, context) : undefined,\n    nextToken: output.nextToken !== undefined && output.nextToken !== null ? output.nextToken : undefined\n  };\n};\n\nvar deserializeAws_json1_1DescribeExportTasksResponse = function (output, context) {\n  return {\n    exportTasks: output.exportTasks !== undefined && output.exportTasks !== null ? deserializeAws_json1_1ExportTasks(output.exportTasks, context) : undefined,\n    nextToken: output.nextToken !== undefined && output.nextToken !== null ? output.nextToken : undefined\n  };\n};\n\nvar deserializeAws_json1_1DescribeLogGroupsResponse = function (output, context) {\n  return {\n    logGroups: output.logGroups !== undefined && output.logGroups !== null ? deserializeAws_json1_1LogGroups(output.logGroups, context) : undefined,\n    nextToken: output.nextToken !== undefined && output.nextToken !== null ? output.nextToken : undefined\n  };\n};\n\nvar deserializeAws_json1_1DescribeLogStreamsResponse = function (output, context) {\n  return {\n    logStreams: output.logStreams !== undefined && output.logStreams !== null ? deserializeAws_json1_1LogStreams(output.logStreams, context) : undefined,\n    nextToken: output.nextToken !== undefined && output.nextToken !== null ? output.nextToken : undefined\n  };\n};\n\nvar deserializeAws_json1_1DescribeMetricFiltersResponse = function (output, context) {\n  return {\n    metricFilters: output.metricFilters !== undefined && output.metricFilters !== null ? deserializeAws_json1_1MetricFilters(output.metricFilters, context) : undefined,\n    nextToken: output.nextToken !== undefined && output.nextToken !== null ? output.nextToken : undefined\n  };\n};\n\nvar deserializeAws_json1_1DescribeQueriesResponse = function (output, context) {\n  return {\n    nextToken: output.nextToken !== undefined && output.nextToken !== null ? output.nextToken : undefined,\n    queries: output.queries !== undefined && output.queries !== null ? deserializeAws_json1_1QueryInfoList(output.queries, context) : undefined\n  };\n};\n\nvar deserializeAws_json1_1DescribeQueryDefinitionsResponse = function (output, context) {\n  return {\n    nextToken: output.nextToken !== undefined && output.nextToken !== null ? output.nextToken : undefined,\n    queryDefinitions: output.queryDefinitions !== undefined && output.queryDefinitions !== null ? deserializeAws_json1_1QueryDefinitionList(output.queryDefinitions, context) : undefined\n  };\n};\n\nvar deserializeAws_json1_1DescribeResourcePoliciesResponse = function (output, context) {\n  return {\n    nextToken: output.nextToken !== undefined && output.nextToken !== null ? output.nextToken : undefined,\n    resourcePolicies: output.resourcePolicies !== undefined && output.resourcePolicies !== null ? deserializeAws_json1_1ResourcePolicies(output.resourcePolicies, context) : undefined\n  };\n};\n\nvar deserializeAws_json1_1DescribeSubscriptionFiltersResponse = function (output, context) {\n  return {\n    nextToken: output.nextToken !== undefined && output.nextToken !== null ? output.nextToken : undefined,\n    subscriptionFilters: output.subscriptionFilters !== undefined && output.subscriptionFilters !== null ? deserializeAws_json1_1SubscriptionFilters(output.subscriptionFilters, context) : undefined\n  };\n};\n\nvar deserializeAws_json1_1Destination = function (output, context) {\n  return {\n    accessPolicy: output.accessPolicy !== undefined && output.accessPolicy !== null ? output.accessPolicy : undefined,\n    arn: output.arn !== undefined && output.arn !== null ? output.arn : undefined,\n    creationTime: output.creationTime !== undefined && output.creationTime !== null ? output.creationTime : undefined,\n    destinationName: output.destinationName !== undefined && output.destinationName !== null ? output.destinationName : undefined,\n    roleArn: output.roleArn !== undefined && output.roleArn !== null ? output.roleArn : undefined,\n    targetArn: output.targetArn !== undefined && output.targetArn !== null ? output.targetArn : undefined\n  };\n};\n\nvar deserializeAws_json1_1Destinations = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_json1_1Destination(entry, context);\n  });\n};\n\nvar deserializeAws_json1_1ExportTask = function (output, context) {\n  return {\n    destination: output.destination !== undefined && output.destination !== null ? output.destination : undefined,\n    destinationPrefix: output.destinationPrefix !== undefined && output.destinationPrefix !== null ? output.destinationPrefix : undefined,\n    executionInfo: output.executionInfo !== undefined && output.executionInfo !== null ? deserializeAws_json1_1ExportTaskExecutionInfo(output.executionInfo, context) : undefined,\n    from: output.from !== undefined && output.from !== null ? output.from : undefined,\n    logGroupName: output.logGroupName !== undefined && output.logGroupName !== null ? output.logGroupName : undefined,\n    status: output.status !== undefined && output.status !== null ? deserializeAws_json1_1ExportTaskStatus(output.status, context) : undefined,\n    taskId: output.taskId !== undefined && output.taskId !== null ? output.taskId : undefined,\n    taskName: output.taskName !== undefined && output.taskName !== null ? output.taskName : undefined,\n    to: output.to !== undefined && output.to !== null ? output.to : undefined\n  };\n};\n\nvar deserializeAws_json1_1ExportTaskExecutionInfo = function (output, context) {\n  return {\n    completionTime: output.completionTime !== undefined && output.completionTime !== null ? output.completionTime : undefined,\n    creationTime: output.creationTime !== undefined && output.creationTime !== null ? output.creationTime : undefined\n  };\n};\n\nvar deserializeAws_json1_1ExportTasks = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_json1_1ExportTask(entry, context);\n  });\n};\n\nvar deserializeAws_json1_1ExportTaskStatus = function (output, context) {\n  return {\n    code: output.code !== undefined && output.code !== null ? output.code : undefined,\n    message: output.message !== undefined && output.message !== null ? output.message : undefined\n  };\n};\n\nvar deserializeAws_json1_1ExtractedValues = function (output, context) {\n  return Object.entries(output).reduce(function (acc, _a) {\n    var _b;\n\n    var _c = __read(_a, 2),\n        key = _c[0],\n        value = _c[1];\n\n    if (value === null) {\n      return acc;\n    }\n\n    return __assign(__assign({}, acc), (_b = {}, _b[key] = value, _b));\n  }, {});\n};\n\nvar deserializeAws_json1_1FilteredLogEvent = function (output, context) {\n  return {\n    eventId: output.eventId !== undefined && output.eventId !== null ? output.eventId : undefined,\n    ingestionTime: output.ingestionTime !== undefined && output.ingestionTime !== null ? output.ingestionTime : undefined,\n    logStreamName: output.logStreamName !== undefined && output.logStreamName !== null ? output.logStreamName : undefined,\n    message: output.message !== undefined && output.message !== null ? output.message : undefined,\n    timestamp: output.timestamp !== undefined && output.timestamp !== null ? output.timestamp : undefined\n  };\n};\n\nvar deserializeAws_json1_1FilteredLogEvents = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_json1_1FilteredLogEvent(entry, context);\n  });\n};\n\nvar deserializeAws_json1_1FilterLogEventsResponse = function (output, context) {\n  return {\n    events: output.events !== undefined && output.events !== null ? deserializeAws_json1_1FilteredLogEvents(output.events, context) : undefined,\n    nextToken: output.nextToken !== undefined && output.nextToken !== null ? output.nextToken : undefined,\n    searchedLogStreams: output.searchedLogStreams !== undefined && output.searchedLogStreams !== null ? deserializeAws_json1_1SearchedLogStreams(output.searchedLogStreams, context) : undefined\n  };\n};\n\nvar deserializeAws_json1_1GetLogEventsResponse = function (output, context) {\n  return {\n    events: output.events !== undefined && output.events !== null ? deserializeAws_json1_1OutputLogEvents(output.events, context) : undefined,\n    nextBackwardToken: output.nextBackwardToken !== undefined && output.nextBackwardToken !== null ? output.nextBackwardToken : undefined,\n    nextForwardToken: output.nextForwardToken !== undefined && output.nextForwardToken !== null ? output.nextForwardToken : undefined\n  };\n};\n\nvar deserializeAws_json1_1GetLogGroupFieldsResponse = function (output, context) {\n  return {\n    logGroupFields: output.logGroupFields !== undefined && output.logGroupFields !== null ? deserializeAws_json1_1LogGroupFieldList(output.logGroupFields, context) : undefined\n  };\n};\n\nvar deserializeAws_json1_1GetLogRecordResponse = function (output, context) {\n  return {\n    logRecord: output.logRecord !== undefined && output.logRecord !== null ? deserializeAws_json1_1LogRecord(output.logRecord, context) : undefined\n  };\n};\n\nvar deserializeAws_json1_1GetQueryResultsResponse = function (output, context) {\n  return {\n    results: output.results !== undefined && output.results !== null ? deserializeAws_json1_1QueryResults(output.results, context) : undefined,\n    statistics: output.statistics !== undefined && output.statistics !== null ? deserializeAws_json1_1QueryStatistics(output.statistics, context) : undefined,\n    status: output.status !== undefined && output.status !== null ? output.status : undefined\n  };\n};\n\nvar deserializeAws_json1_1InvalidOperationException = function (output, context) {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined\n  };\n};\n\nvar deserializeAws_json1_1InvalidParameterException = function (output, context) {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined\n  };\n};\n\nvar deserializeAws_json1_1InvalidSequenceTokenException = function (output, context) {\n  return {\n    expectedSequenceToken: output.expectedSequenceToken !== undefined && output.expectedSequenceToken !== null ? output.expectedSequenceToken : undefined,\n    message: output.message !== undefined && output.message !== null ? output.message : undefined\n  };\n};\n\nvar deserializeAws_json1_1LimitExceededException = function (output, context) {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined\n  };\n};\n\nvar deserializeAws_json1_1ListTagsLogGroupResponse = function (output, context) {\n  return {\n    tags: output.tags !== undefined && output.tags !== null ? deserializeAws_json1_1Tags(output.tags, context) : undefined\n  };\n};\n\nvar deserializeAws_json1_1LogGroup = function (output, context) {\n  return {\n    arn: output.arn !== undefined && output.arn !== null ? output.arn : undefined,\n    creationTime: output.creationTime !== undefined && output.creationTime !== null ? output.creationTime : undefined,\n    kmsKeyId: output.kmsKeyId !== undefined && output.kmsKeyId !== null ? output.kmsKeyId : undefined,\n    logGroupName: output.logGroupName !== undefined && output.logGroupName !== null ? output.logGroupName : undefined,\n    metricFilterCount: output.metricFilterCount !== undefined && output.metricFilterCount !== null ? output.metricFilterCount : undefined,\n    retentionInDays: output.retentionInDays !== undefined && output.retentionInDays !== null ? output.retentionInDays : undefined,\n    storedBytes: output.storedBytes !== undefined && output.storedBytes !== null ? output.storedBytes : undefined\n  };\n};\n\nvar deserializeAws_json1_1LogGroupField = function (output, context) {\n  return {\n    name: output.name !== undefined && output.name !== null ? output.name : undefined,\n    percent: output.percent !== undefined && output.percent !== null ? output.percent : undefined\n  };\n};\n\nvar deserializeAws_json1_1LogGroupFieldList = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_json1_1LogGroupField(entry, context);\n  });\n};\n\nvar deserializeAws_json1_1LogGroupNames = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return entry;\n  });\n};\n\nvar deserializeAws_json1_1LogGroups = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_json1_1LogGroup(entry, context);\n  });\n};\n\nvar deserializeAws_json1_1LogRecord = function (output, context) {\n  return Object.entries(output).reduce(function (acc, _a) {\n    var _b;\n\n    var _c = __read(_a, 2),\n        key = _c[0],\n        value = _c[1];\n\n    if (value === null) {\n      return acc;\n    }\n\n    return __assign(__assign({}, acc), (_b = {}, _b[key] = value, _b));\n  }, {});\n};\n\nvar deserializeAws_json1_1LogStream = function (output, context) {\n  return {\n    arn: output.arn !== undefined && output.arn !== null ? output.arn : undefined,\n    creationTime: output.creationTime !== undefined && output.creationTime !== null ? output.creationTime : undefined,\n    firstEventTimestamp: output.firstEventTimestamp !== undefined && output.firstEventTimestamp !== null ? output.firstEventTimestamp : undefined,\n    lastEventTimestamp: output.lastEventTimestamp !== undefined && output.lastEventTimestamp !== null ? output.lastEventTimestamp : undefined,\n    lastIngestionTime: output.lastIngestionTime !== undefined && output.lastIngestionTime !== null ? output.lastIngestionTime : undefined,\n    logStreamName: output.logStreamName !== undefined && output.logStreamName !== null ? output.logStreamName : undefined,\n    storedBytes: output.storedBytes !== undefined && output.storedBytes !== null ? output.storedBytes : undefined,\n    uploadSequenceToken: output.uploadSequenceToken !== undefined && output.uploadSequenceToken !== null ? output.uploadSequenceToken : undefined\n  };\n};\n\nvar deserializeAws_json1_1LogStreams = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_json1_1LogStream(entry, context);\n  });\n};\n\nvar deserializeAws_json1_1MalformedQueryException = function (output, context) {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined,\n    queryCompileError: output.queryCompileError !== undefined && output.queryCompileError !== null ? deserializeAws_json1_1QueryCompileError(output.queryCompileError, context) : undefined\n  };\n};\n\nvar deserializeAws_json1_1MetricFilter = function (output, context) {\n  return {\n    creationTime: output.creationTime !== undefined && output.creationTime !== null ? output.creationTime : undefined,\n    filterName: output.filterName !== undefined && output.filterName !== null ? output.filterName : undefined,\n    filterPattern: output.filterPattern !== undefined && output.filterPattern !== null ? output.filterPattern : undefined,\n    logGroupName: output.logGroupName !== undefined && output.logGroupName !== null ? output.logGroupName : undefined,\n    metricTransformations: output.metricTransformations !== undefined && output.metricTransformations !== null ? deserializeAws_json1_1MetricTransformations(output.metricTransformations, context) : undefined\n  };\n};\n\nvar deserializeAws_json1_1MetricFilterMatches = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_json1_1MetricFilterMatchRecord(entry, context);\n  });\n};\n\nvar deserializeAws_json1_1MetricFilterMatchRecord = function (output, context) {\n  return {\n    eventMessage: output.eventMessage !== undefined && output.eventMessage !== null ? output.eventMessage : undefined,\n    eventNumber: output.eventNumber !== undefined && output.eventNumber !== null ? output.eventNumber : undefined,\n    extractedValues: output.extractedValues !== undefined && output.extractedValues !== null ? deserializeAws_json1_1ExtractedValues(output.extractedValues, context) : undefined\n  };\n};\n\nvar deserializeAws_json1_1MetricFilters = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_json1_1MetricFilter(entry, context);\n  });\n};\n\nvar deserializeAws_json1_1MetricTransformation = function (output, context) {\n  return {\n    defaultValue: output.defaultValue !== undefined && output.defaultValue !== null ? output.defaultValue : undefined,\n    metricName: output.metricName !== undefined && output.metricName !== null ? output.metricName : undefined,\n    metricNamespace: output.metricNamespace !== undefined && output.metricNamespace !== null ? output.metricNamespace : undefined,\n    metricValue: output.metricValue !== undefined && output.metricValue !== null ? output.metricValue : undefined\n  };\n};\n\nvar deserializeAws_json1_1MetricTransformations = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_json1_1MetricTransformation(entry, context);\n  });\n};\n\nvar deserializeAws_json1_1OperationAbortedException = function (output, context) {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined\n  };\n};\n\nvar deserializeAws_json1_1OutputLogEvent = function (output, context) {\n  return {\n    ingestionTime: output.ingestionTime !== undefined && output.ingestionTime !== null ? output.ingestionTime : undefined,\n    message: output.message !== undefined && output.message !== null ? output.message : undefined,\n    timestamp: output.timestamp !== undefined && output.timestamp !== null ? output.timestamp : undefined\n  };\n};\n\nvar deserializeAws_json1_1OutputLogEvents = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_json1_1OutputLogEvent(entry, context);\n  });\n};\n\nvar deserializeAws_json1_1PutDestinationResponse = function (output, context) {\n  return {\n    destination: output.destination !== undefined && output.destination !== null ? deserializeAws_json1_1Destination(output.destination, context) : undefined\n  };\n};\n\nvar deserializeAws_json1_1PutLogEventsResponse = function (output, context) {\n  return {\n    nextSequenceToken: output.nextSequenceToken !== undefined && output.nextSequenceToken !== null ? output.nextSequenceToken : undefined,\n    rejectedLogEventsInfo: output.rejectedLogEventsInfo !== undefined && output.rejectedLogEventsInfo !== null ? deserializeAws_json1_1RejectedLogEventsInfo(output.rejectedLogEventsInfo, context) : undefined\n  };\n};\n\nvar deserializeAws_json1_1PutQueryDefinitionResponse = function (output, context) {\n  return {\n    queryDefinitionId: output.queryDefinitionId !== undefined && output.queryDefinitionId !== null ? output.queryDefinitionId : undefined\n  };\n};\n\nvar deserializeAws_json1_1PutResourcePolicyResponse = function (output, context) {\n  return {\n    resourcePolicy: output.resourcePolicy !== undefined && output.resourcePolicy !== null ? deserializeAws_json1_1ResourcePolicy(output.resourcePolicy, context) : undefined\n  };\n};\n\nvar deserializeAws_json1_1QueryCompileError = function (output, context) {\n  return {\n    location: output.location !== undefined && output.location !== null ? deserializeAws_json1_1QueryCompileErrorLocation(output.location, context) : undefined,\n    message: output.message !== undefined && output.message !== null ? output.message : undefined\n  };\n};\n\nvar deserializeAws_json1_1QueryCompileErrorLocation = function (output, context) {\n  return {\n    endCharOffset: output.endCharOffset !== undefined && output.endCharOffset !== null ? output.endCharOffset : undefined,\n    startCharOffset: output.startCharOffset !== undefined && output.startCharOffset !== null ? output.startCharOffset : undefined\n  };\n};\n\nvar deserializeAws_json1_1QueryDefinition = function (output, context) {\n  return {\n    lastModified: output.lastModified !== undefined && output.lastModified !== null ? output.lastModified : undefined,\n    logGroupNames: output.logGroupNames !== undefined && output.logGroupNames !== null ? deserializeAws_json1_1LogGroupNames(output.logGroupNames, context) : undefined,\n    name: output.name !== undefined && output.name !== null ? output.name : undefined,\n    queryDefinitionId: output.queryDefinitionId !== undefined && output.queryDefinitionId !== null ? output.queryDefinitionId : undefined,\n    queryString: output.queryString !== undefined && output.queryString !== null ? output.queryString : undefined\n  };\n};\n\nvar deserializeAws_json1_1QueryDefinitionList = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_json1_1QueryDefinition(entry, context);\n  });\n};\n\nvar deserializeAws_json1_1QueryInfo = function (output, context) {\n  return {\n    createTime: output.createTime !== undefined && output.createTime !== null ? output.createTime : undefined,\n    logGroupName: output.logGroupName !== undefined && output.logGroupName !== null ? output.logGroupName : undefined,\n    queryId: output.queryId !== undefined && output.queryId !== null ? output.queryId : undefined,\n    queryString: output.queryString !== undefined && output.queryString !== null ? output.queryString : undefined,\n    status: output.status !== undefined && output.status !== null ? output.status : undefined\n  };\n};\n\nvar deserializeAws_json1_1QueryInfoList = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_json1_1QueryInfo(entry, context);\n  });\n};\n\nvar deserializeAws_json1_1QueryResults = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_json1_1ResultRows(entry, context);\n  });\n};\n\nvar deserializeAws_json1_1QueryStatistics = function (output, context) {\n  return {\n    bytesScanned: output.bytesScanned !== undefined && output.bytesScanned !== null ? output.bytesScanned : undefined,\n    recordsMatched: output.recordsMatched !== undefined && output.recordsMatched !== null ? output.recordsMatched : undefined,\n    recordsScanned: output.recordsScanned !== undefined && output.recordsScanned !== null ? output.recordsScanned : undefined\n  };\n};\n\nvar deserializeAws_json1_1RejectedLogEventsInfo = function (output, context) {\n  return {\n    expiredLogEventEndIndex: output.expiredLogEventEndIndex !== undefined && output.expiredLogEventEndIndex !== null ? output.expiredLogEventEndIndex : undefined,\n    tooNewLogEventStartIndex: output.tooNewLogEventStartIndex !== undefined && output.tooNewLogEventStartIndex !== null ? output.tooNewLogEventStartIndex : undefined,\n    tooOldLogEventEndIndex: output.tooOldLogEventEndIndex !== undefined && output.tooOldLogEventEndIndex !== null ? output.tooOldLogEventEndIndex : undefined\n  };\n};\n\nvar deserializeAws_json1_1ResourceAlreadyExistsException = function (output, context) {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined\n  };\n};\n\nvar deserializeAws_json1_1ResourceNotFoundException = function (output, context) {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined\n  };\n};\n\nvar deserializeAws_json1_1ResourcePolicies = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_json1_1ResourcePolicy(entry, context);\n  });\n};\n\nvar deserializeAws_json1_1ResourcePolicy = function (output, context) {\n  return {\n    lastUpdatedTime: output.lastUpdatedTime !== undefined && output.lastUpdatedTime !== null ? output.lastUpdatedTime : undefined,\n    policyDocument: output.policyDocument !== undefined && output.policyDocument !== null ? output.policyDocument : undefined,\n    policyName: output.policyName !== undefined && output.policyName !== null ? output.policyName : undefined\n  };\n};\n\nvar deserializeAws_json1_1ResultField = function (output, context) {\n  return {\n    field: output.field !== undefined && output.field !== null ? output.field : undefined,\n    value: output.value !== undefined && output.value !== null ? output.value : undefined\n  };\n};\n\nvar deserializeAws_json1_1ResultRows = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_json1_1ResultField(entry, context);\n  });\n};\n\nvar deserializeAws_json1_1SearchedLogStream = function (output, context) {\n  return {\n    logStreamName: output.logStreamName !== undefined && output.logStreamName !== null ? output.logStreamName : undefined,\n    searchedCompletely: output.searchedCompletely !== undefined && output.searchedCompletely !== null ? output.searchedCompletely : undefined\n  };\n};\n\nvar deserializeAws_json1_1SearchedLogStreams = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_json1_1SearchedLogStream(entry, context);\n  });\n};\n\nvar deserializeAws_json1_1ServiceUnavailableException = function (output, context) {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined\n  };\n};\n\nvar deserializeAws_json1_1StartQueryResponse = function (output, context) {\n  return {\n    queryId: output.queryId !== undefined && output.queryId !== null ? output.queryId : undefined\n  };\n};\n\nvar deserializeAws_json1_1StopQueryResponse = function (output, context) {\n  return {\n    success: output.success !== undefined && output.success !== null ? output.success : undefined\n  };\n};\n\nvar deserializeAws_json1_1SubscriptionFilter = function (output, context) {\n  return {\n    creationTime: output.creationTime !== undefined && output.creationTime !== null ? output.creationTime : undefined,\n    destinationArn: output.destinationArn !== undefined && output.destinationArn !== null ? output.destinationArn : undefined,\n    distribution: output.distribution !== undefined && output.distribution !== null ? output.distribution : undefined,\n    filterName: output.filterName !== undefined && output.filterName !== null ? output.filterName : undefined,\n    filterPattern: output.filterPattern !== undefined && output.filterPattern !== null ? output.filterPattern : undefined,\n    logGroupName: output.logGroupName !== undefined && output.logGroupName !== null ? output.logGroupName : undefined,\n    roleArn: output.roleArn !== undefined && output.roleArn !== null ? output.roleArn : undefined\n  };\n};\n\nvar deserializeAws_json1_1SubscriptionFilters = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_json1_1SubscriptionFilter(entry, context);\n  });\n};\n\nvar deserializeAws_json1_1Tags = function (output, context) {\n  return Object.entries(output).reduce(function (acc, _a) {\n    var _b;\n\n    var _c = __read(_a, 2),\n        key = _c[0],\n        value = _c[1];\n\n    if (value === null) {\n      return acc;\n    }\n\n    return __assign(__assign({}, acc), (_b = {}, _b[key] = value, _b));\n  }, {});\n};\n\nvar deserializeAws_json1_1TestMetricFilterResponse = function (output, context) {\n  return {\n    matches: output.matches !== undefined && output.matches !== null ? deserializeAws_json1_1MetricFilterMatches(output.matches, context) : undefined\n  };\n};\n\nvar deserializeAws_json1_1UnrecognizedClientException = function (output, context) {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined\n  };\n};\n\nvar deserializeMetadata = function (output) {\n  var _a;\n\n  return {\n    httpStatusCode: output.statusCode,\n    requestId: (_a = output.headers[\"x-amzn-requestid\"]) !== null && _a !== void 0 ? _a : output.headers[\"x-amzn-request-id\"],\n    extendedRequestId: output.headers[\"x-amz-id-2\"],\n    cfId: output.headers[\"x-amz-cf-id\"]\n  };\n}; // Collect low-level response body stream to Uint8Array.\n\n\nvar collectBody = function (streamBody, context) {\n  if (streamBody === void 0) {\n    streamBody = new Uint8Array();\n  }\n\n  if (streamBody instanceof Uint8Array) {\n    return Promise.resolve(streamBody);\n  }\n\n  return context.streamCollector(streamBody) || Promise.resolve(new Uint8Array());\n}; // Encode Uint8Array data into string with utf-8.\n\n\nvar collectBodyString = function (streamBody, context) {\n  return collectBody(streamBody, context).then(function (body) {\n    return context.utf8Encoder(body);\n  });\n};\n\nvar buildHttpRpcRequest = function (context, headers, path, resolvedHostname, body) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, contents;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          contents = {\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            path: path,\n            headers: headers\n          };\n\n          if (resolvedHostname !== undefined) {\n            contents.hostname = resolvedHostname;\n          }\n\n          if (body !== undefined) {\n            contents.body = body;\n          }\n\n          return [2\n          /*return*/\n          , new __HttpRequest(contents)];\n      }\n    });\n  });\n};\n\nvar parseBody = function (streamBody, context) {\n  return collectBodyString(streamBody, context).then(function (encoded) {\n    if (encoded.length) {\n      return JSON.parse(encoded);\n    }\n\n    return {};\n  });\n};\n/**\n * Load an error code for the aws.rest-json-1.1 protocol.\n */\n\n\nvar loadRestJsonErrorCode = function (output, data) {\n  var findKey = function (object, key) {\n    return Object.keys(object).find(function (k) {\n      return k.toLowerCase() === key.toLowerCase();\n    });\n  };\n\n  var sanitizeErrorCode = function (rawValue) {\n    var cleanValue = rawValue;\n\n    if (cleanValue.indexOf(\":\") >= 0) {\n      cleanValue = cleanValue.split(\":\")[0];\n    }\n\n    if (cleanValue.indexOf(\"#\") >= 0) {\n      cleanValue = cleanValue.split(\"#\")[1];\n    }\n\n    return cleanValue;\n  };\n\n  var headerKey = findKey(output.headers, \"x-amzn-errortype\");\n\n  if (headerKey !== undefined) {\n    return sanitizeErrorCode(output.headers[headerKey]);\n  }\n\n  if (data.code !== undefined) {\n    return sanitizeErrorCode(data.code);\n  }\n\n  if (data[\"__type\"] !== undefined) {\n    return sanitizeErrorCode(data[\"__type\"]);\n  }\n\n  return \"\";\n};","map":{"version":3,"mappings":"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","names":["HttpRequest","__HttpRequest","serializeAws_json1_1AssociateKmsKeyCommand","input","context","headers","body","JSON","stringify","serializeAws_json1_1AssociateKmsKeyRequest","buildHttpRpcRequest","undefined","serializeAws_json1_1CancelExportTaskCommand","serializeAws_json1_1CancelExportTaskRequest","serializeAws_json1_1CreateExportTaskCommand","serializeAws_json1_1CreateExportTaskRequest","serializeAws_json1_1CreateLogGroupCommand","serializeAws_json1_1CreateLogGroupRequest","serializeAws_json1_1CreateLogStreamCommand","serializeAws_json1_1CreateLogStreamRequest","serializeAws_json1_1DeleteDestinationCommand","serializeAws_json1_1DeleteDestinationRequest","serializeAws_json1_1DeleteLogGroupCommand","serializeAws_json1_1DeleteLogGroupRequest","serializeAws_json1_1DeleteLogStreamCommand","serializeAws_json1_1DeleteLogStreamRequest","serializeAws_json1_1DeleteMetricFilterCommand","serializeAws_json1_1DeleteMetricFilterRequest","serializeAws_json1_1DeleteQueryDefinitionCommand","serializeAws_json1_1DeleteQueryDefinitionRequest","serializeAws_json1_1DeleteResourcePolicyCommand","serializeAws_json1_1DeleteResourcePolicyRequest","serializeAws_json1_1DeleteRetentionPolicyCommand","serializeAws_json1_1DeleteRetentionPolicyRequest","serializeAws_json1_1DeleteSubscriptionFilterCommand","serializeAws_json1_1DeleteSubscriptionFilterRequest","serializeAws_json1_1DescribeDestinationsCommand","serializeAws_json1_1DescribeDestinationsRequest","serializeAws_json1_1DescribeExportTasksCommand","serializeAws_json1_1DescribeExportTasksRequest","serializeAws_json1_1DescribeLogGroupsCommand","serializeAws_json1_1DescribeLogGroupsRequest","serializeAws_json1_1DescribeLogStreamsCommand","serializeAws_json1_1DescribeLogStreamsRequest","serializeAws_json1_1DescribeMetricFiltersCommand","serializeAws_json1_1DescribeMetricFiltersRequest","serializeAws_json1_1DescribeQueriesCommand","serializeAws_json1_1DescribeQueriesRequest","serializeAws_json1_1DescribeQueryDefinitionsCommand","serializeAws_json1_1DescribeQueryDefinitionsRequest","serializeAws_json1_1DescribeResourcePoliciesCommand","serializeAws_json1_1DescribeResourcePoliciesRequest","serializeAws_json1_1DescribeSubscriptionFiltersCommand","serializeAws_json1_1DescribeSubscriptionFiltersRequest","serializeAws_json1_1DisassociateKmsKeyCommand","serializeAws_json1_1DisassociateKmsKeyRequest","serializeAws_json1_1FilterLogEventsCommand","serializeAws_json1_1FilterLogEventsRequest","serializeAws_json1_1GetLogEventsCommand","serializeAws_json1_1GetLogEventsRequest","serializeAws_json1_1GetLogGroupFieldsCommand","serializeAws_json1_1GetLogGroupFieldsRequest","serializeAws_json1_1GetLogRecordCommand","serializeAws_json1_1GetLogRecordRequest","serializeAws_json1_1GetQueryResultsCommand","serializeAws_json1_1GetQueryResultsRequest","serializeAws_json1_1ListTagsLogGroupCommand","serializeAws_json1_1ListTagsLogGroupRequest","serializeAws_json1_1PutDestinationCommand","serializeAws_json1_1PutDestinationRequest","serializeAws_json1_1PutDestinationPolicyCommand","serializeAws_json1_1PutDestinationPolicyRequest","serializeAws_json1_1PutLogEventsCommand","serializeAws_json1_1PutLogEventsRequest","serializeAws_json1_1PutMetricFilterCommand","serializeAws_json1_1PutMetricFilterRequest","serializeAws_json1_1PutQueryDefinitionCommand","serializeAws_json1_1PutQueryDefinitionRequest","serializeAws_json1_1PutResourcePolicyCommand","serializeAws_json1_1PutResourcePolicyRequest","serializeAws_json1_1PutRetentionPolicyCommand","serializeAws_json1_1PutRetentionPolicyRequest","serializeAws_json1_1PutSubscriptionFilterCommand","serializeAws_json1_1PutSubscriptionFilterRequest","serializeAws_json1_1StartQueryCommand","serializeAws_json1_1StartQueryRequest","serializeAws_json1_1StopQueryCommand","serializeAws_json1_1StopQueryRequest","serializeAws_json1_1TagLogGroupCommand","serializeAws_json1_1TagLogGroupRequest","serializeAws_json1_1TestMetricFilterCommand","serializeAws_json1_1TestMetricFilterRequest","serializeAws_json1_1UntagLogGroupCommand","serializeAws_json1_1UntagLogGroupRequest","deserializeAws_json1_1AssociateKmsKeyCommand","output","statusCode","deserializeAws_json1_1AssociateKmsKeyCommandError","collectBody","_a","response","$metadata","deserializeMetadata","Promise","resolve","parseBody","parsedOutput","_g","_h","errorCode","loadRestJsonErrorCode","_b","deserializeAws_json1_1InvalidParameterExceptionResponse","name","deserializeAws_json1_1OperationAbortedExceptionResponse","deserializeAws_json1_1ResourceNotFoundExceptionResponse","deserializeAws_json1_1ServiceUnavailableExceptionResponse","parsedBody","code","Code","__assign","message","Message","$fault","reject","Object","assign","Error","deserializeAws_json1_1CancelExportTaskCommand","deserializeAws_json1_1CancelExportTaskCommandError","deserializeAws_json1_1InvalidOperationExceptionResponse","deserializeAws_json1_1CreateExportTaskCommand","deserializeAws_json1_1CreateExportTaskCommandError","data","contents","deserializeAws_json1_1CreateExportTaskResponse","_j","_k","deserializeAws_json1_1LimitExceededExceptionResponse","deserializeAws_json1_1ResourceAlreadyExistsExceptionResponse","deserializeAws_json1_1CreateLogGroupCommand","deserializeAws_json1_1CreateLogGroupCommandError","deserializeAws_json1_1CreateLogStreamCommand","deserializeAws_json1_1CreateLogStreamCommandError","deserializeAws_json1_1DeleteDestinationCommand","deserializeAws_json1_1DeleteDestinationCommandError","deserializeAws_json1_1DeleteLogGroupCommand","deserializeAws_json1_1DeleteLogGroupCommandError","deserializeAws_json1_1DeleteLogStreamCommand","deserializeAws_json1_1DeleteLogStreamCommandError","deserializeAws_json1_1DeleteMetricFilterCommand","deserializeAws_json1_1DeleteMetricFilterCommandError","deserializeAws_json1_1DeleteQueryDefinitionCommand","deserializeAws_json1_1DeleteQueryDefinitionCommandError","deserializeAws_json1_1DeleteQueryDefinitionResponse","_f","deserializeAws_json1_1DeleteResourcePolicyCommand","deserializeAws_json1_1DeleteResourcePolicyCommandError","deserializeAws_json1_1DeleteRetentionPolicyCommand","deserializeAws_json1_1DeleteRetentionPolicyCommandError","deserializeAws_json1_1DeleteSubscriptionFilterCommand","deserializeAws_json1_1DeleteSubscriptionFilterCommandError","deserializeAws_json1_1DescribeDestinationsCommand","deserializeAws_json1_1DescribeDestinationsCommandError","deserializeAws_json1_1DescribeDestinationsResponse","_e","deserializeAws_json1_1DescribeExportTasksCommand","deserializeAws_json1_1DescribeExportTasksCommandError","deserializeAws_json1_1DescribeExportTasksResponse","deserializeAws_json1_1DescribeLogGroupsCommand","deserializeAws_json1_1DescribeLogGroupsCommandError","deserializeAws_json1_1DescribeLogGroupsResponse","deserializeAws_json1_1DescribeLogStreamsCommand","deserializeAws_json1_1DescribeLogStreamsCommandError","deserializeAws_json1_1DescribeLogStreamsResponse","deserializeAws_json1_1DescribeMetricFiltersCommand","deserializeAws_json1_1DescribeMetricFiltersCommandError","deserializeAws_json1_1DescribeMetricFiltersResponse","deserializeAws_json1_1DescribeQueriesCommand","deserializeAws_json1_1DescribeQueriesCommandError","deserializeAws_json1_1DescribeQueriesResponse","deserializeAws_json1_1DescribeQueryDefinitionsCommand","deserializeAws_json1_1DescribeQueryDefinitionsCommandError","deserializeAws_json1_1DescribeQueryDefinitionsResponse","deserializeAws_json1_1DescribeResourcePoliciesCommand","deserializeAws_json1_1DescribeResourcePoliciesCommandError","deserializeAws_json1_1DescribeResourcePoliciesResponse","deserializeAws_json1_1DescribeSubscriptionFiltersCommand","deserializeAws_json1_1DescribeSubscriptionFiltersCommandError","deserializeAws_json1_1DescribeSubscriptionFiltersResponse","deserializeAws_json1_1DisassociateKmsKeyCommand","deserializeAws_json1_1DisassociateKmsKeyCommandError","deserializeAws_json1_1FilterLogEventsCommand","deserializeAws_json1_1FilterLogEventsCommandError","deserializeAws_json1_1FilterLogEventsResponse","deserializeAws_json1_1GetLogEventsCommand","deserializeAws_json1_1GetLogEventsCommandError","deserializeAws_json1_1GetLogEventsResponse","deserializeAws_json1_1GetLogGroupFieldsCommand","deserializeAws_json1_1GetLogGroupFieldsCommandError","deserializeAws_json1_1GetLogGroupFieldsResponse","deserializeAws_json1_1GetLogRecordCommand","deserializeAws_json1_1GetLogRecordCommandError","deserializeAws_json1_1GetLogRecordResponse","deserializeAws_json1_1GetQueryResultsCommand","deserializeAws_json1_1GetQueryResultsCommandError","deserializeAws_json1_1GetQueryResultsResponse","deserializeAws_json1_1ListTagsLogGroupCommand","deserializeAws_json1_1ListTagsLogGroupCommandError","deserializeAws_json1_1ListTagsLogGroupResponse","deserializeAws_json1_1PutDestinationCommand","deserializeAws_json1_1PutDestinationCommandError","deserializeAws_json1_1PutDestinationResponse","deserializeAws_json1_1PutDestinationPolicyCommand","deserializeAws_json1_1PutDestinationPolicyCommandError","deserializeAws_json1_1PutLogEventsCommand","deserializeAws_json1_1PutLogEventsCommandError","deserializeAws_json1_1PutLogEventsResponse","deserializeAws_json1_1DataAlreadyAcceptedExceptionResponse","deserializeAws_json1_1InvalidSequenceTokenExceptionResponse","deserializeAws_json1_1UnrecognizedClientExceptionResponse","deserializeAws_json1_1PutMetricFilterCommand","deserializeAws_json1_1PutMetricFilterCommandError","deserializeAws_json1_1PutQueryDefinitionCommand","deserializeAws_json1_1PutQueryDefinitionCommandError","deserializeAws_json1_1PutQueryDefinitionResponse","deserializeAws_json1_1PutResourcePolicyCommand","deserializeAws_json1_1PutResourcePolicyCommandError","deserializeAws_json1_1PutResourcePolicyResponse","deserializeAws_json1_1PutRetentionPolicyCommand","deserializeAws_json1_1PutRetentionPolicyCommandError","deserializeAws_json1_1PutSubscriptionFilterCommand","deserializeAws_json1_1PutSubscriptionFilterCommandError","deserializeAws_json1_1StartQueryCommand","deserializeAws_json1_1StartQueryCommandError","deserializeAws_json1_1StartQueryResponse","deserializeAws_json1_1MalformedQueryExceptionResponse","deserializeAws_json1_1StopQueryCommand","deserializeAws_json1_1StopQueryCommandError","deserializeAws_json1_1StopQueryResponse","deserializeAws_json1_1TagLogGroupCommand","deserializeAws_json1_1TagLogGroupCommandError","deserializeAws_json1_1TestMetricFilterCommand","deserializeAws_json1_1TestMetricFilterCommandError","deserializeAws_json1_1TestMetricFilterResponse","deserializeAws_json1_1UntagLogGroupCommand","deserializeAws_json1_1UntagLogGroupCommandError","_d","deserialized","deserializeAws_json1_1DataAlreadyAcceptedException","deserializeAws_json1_1InvalidOperationException","deserializeAws_json1_1InvalidParameterException","deserializeAws_json1_1InvalidSequenceTokenException","deserializeAws_json1_1LimitExceededException","deserializeAws_json1_1MalformedQueryException","deserializeAws_json1_1OperationAbortedException","deserializeAws_json1_1ResourceAlreadyExistsException","deserializeAws_json1_1ResourceNotFoundException","deserializeAws_json1_1ServiceUnavailableException","deserializeAws_json1_1UnrecognizedClientException","kmsKeyId","logGroupName","taskId","destination","destinationPrefix","from","logStreamNamePrefix","taskName","to","tags","serializeAws_json1_1Tags","logStreamName","destinationName","filterName","queryDefinitionId","policyName","DestinationNamePrefix","limit","nextToken","logGroupNamePrefix","descending","orderBy","filterNamePrefix","metricName","metricNamespace","maxResults","status","queryDefinitionNamePrefix","endTime","filterPattern","interleaved","logStreamNames","serializeAws_json1_1InputLogStreamNames","startTime","startFromHead","time","logRecordPointer","queryId","serializeAws_json1_1InputLogEvent","timestamp","serializeAws_json1_1InputLogEvents","filter","e","map","entry","serializeAws_json1_1LogGroupNames","serializeAws_json1_1MetricTransformation","defaultValue","metricValue","serializeAws_json1_1MetricTransformations","accessPolicy","roleArn","targetArn","logEvents","sequenceToken","metricTransformations","logGroupNames","queryString","policyDocument","retentionInDays","destinationArn","distribution","serializeAws_json1_1TagList","entries","reduce","acc","_c","key","value","serializeAws_json1_1TestEventMessages","logEventMessages","expectedSequenceToken","success","destinations","deserializeAws_json1_1Destinations","exportTasks","deserializeAws_json1_1ExportTasks","logGroups","deserializeAws_json1_1LogGroups","logStreams","deserializeAws_json1_1LogStreams","metricFilters","deserializeAws_json1_1MetricFilters","queries","deserializeAws_json1_1QueryInfoList","queryDefinitions","deserializeAws_json1_1QueryDefinitionList","resourcePolicies","deserializeAws_json1_1ResourcePolicies","subscriptionFilters","deserializeAws_json1_1SubscriptionFilters","deserializeAws_json1_1Destination","arn","creationTime","deserializeAws_json1_1ExportTask","executionInfo","deserializeAws_json1_1ExportTaskExecutionInfo","deserializeAws_json1_1ExportTaskStatus","completionTime","deserializeAws_json1_1ExtractedValues","deserializeAws_json1_1FilteredLogEvent","eventId","ingestionTime","deserializeAws_json1_1FilteredLogEvents","events","searchedLogStreams","deserializeAws_json1_1SearchedLogStreams","deserializeAws_json1_1OutputLogEvents","nextBackwardToken","nextForwardToken","logGroupFields","deserializeAws_json1_1LogGroupFieldList","logRecord","deserializeAws_json1_1LogRecord","results","deserializeAws_json1_1QueryResults","statistics","deserializeAws_json1_1QueryStatistics","deserializeAws_json1_1Tags","deserializeAws_json1_1LogGroup","metricFilterCount","storedBytes","deserializeAws_json1_1LogGroupField","percent","deserializeAws_json1_1LogGroupNames","deserializeAws_json1_1LogStream","firstEventTimestamp","lastEventTimestamp","lastIngestionTime","uploadSequenceToken","queryCompileError","deserializeAws_json1_1QueryCompileError","deserializeAws_json1_1MetricFilter","deserializeAws_json1_1MetricTransformations","deserializeAws_json1_1MetricFilterMatches","deserializeAws_json1_1MetricFilterMatchRecord","eventMessage","eventNumber","extractedValues","deserializeAws_json1_1MetricTransformation","deserializeAws_json1_1OutputLogEvent","nextSequenceToken","rejectedLogEventsInfo","deserializeAws_json1_1RejectedLogEventsInfo","resourcePolicy","deserializeAws_json1_1ResourcePolicy","location","deserializeAws_json1_1QueryCompileErrorLocation","endCharOffset","startCharOffset","deserializeAws_json1_1QueryDefinition","lastModified","deserializeAws_json1_1QueryInfo","createTime","deserializeAws_json1_1ResultRows","bytesScanned","recordsMatched","recordsScanned","expiredLogEventEndIndex","tooNewLogEventStartIndex","tooOldLogEventEndIndex","lastUpdatedTime","deserializeAws_json1_1ResultField","field","deserializeAws_json1_1SearchedLogStream","searchedCompletely","deserializeAws_json1_1SubscriptionFilter","matches","httpStatusCode","requestId","extendedRequestId","cfId","streamBody","Uint8Array","streamCollector","collectBodyString","then","utf8Encoder","path","resolvedHostname","endpoint","hostname","protocol","port","method","encoded","length","parse","findKey","object","keys","find","k","toLowerCase","sanitizeErrorCode","rawValue","cleanValue","indexOf","split","headerKey"],"sources":["C:\\Users\\lmore\\OneDrive\\Documents\\GitHub\\JacksOfAllTrades\\jacksofalltrades\\node_modules\\@aws-sdk\\client-cloudwatch-logs\\protocols\\Aws_json1_1.ts"],"sourcesContent":["import { AssociateKmsKeyCommandInput, AssociateKmsKeyCommandOutput } from \"../commands/AssociateKmsKeyCommand\";\nimport { CancelExportTaskCommandInput, CancelExportTaskCommandOutput } from \"../commands/CancelExportTaskCommand\";\nimport { CreateExportTaskCommandInput, CreateExportTaskCommandOutput } from \"../commands/CreateExportTaskCommand\";\nimport { CreateLogGroupCommandInput, CreateLogGroupCommandOutput } from \"../commands/CreateLogGroupCommand\";\nimport { CreateLogStreamCommandInput, CreateLogStreamCommandOutput } from \"../commands/CreateLogStreamCommand\";\nimport { DeleteDestinationCommandInput, DeleteDestinationCommandOutput } from \"../commands/DeleteDestinationCommand\";\nimport { DeleteLogGroupCommandInput, DeleteLogGroupCommandOutput } from \"../commands/DeleteLogGroupCommand\";\nimport { DeleteLogStreamCommandInput, DeleteLogStreamCommandOutput } from \"../commands/DeleteLogStreamCommand\";\nimport { DeleteMetricFilterCommandInput, DeleteMetricFilterCommandOutput } from \"../commands/DeleteMetricFilterCommand\";\nimport {\n  DeleteQueryDefinitionCommandInput,\n  DeleteQueryDefinitionCommandOutput,\n} from \"../commands/DeleteQueryDefinitionCommand\";\nimport {\n  DeleteResourcePolicyCommandInput,\n  DeleteResourcePolicyCommandOutput,\n} from \"../commands/DeleteResourcePolicyCommand\";\nimport {\n  DeleteRetentionPolicyCommandInput,\n  DeleteRetentionPolicyCommandOutput,\n} from \"../commands/DeleteRetentionPolicyCommand\";\nimport {\n  DeleteSubscriptionFilterCommandInput,\n  DeleteSubscriptionFilterCommandOutput,\n} from \"../commands/DeleteSubscriptionFilterCommand\";\nimport {\n  DescribeDestinationsCommandInput,\n  DescribeDestinationsCommandOutput,\n} from \"../commands/DescribeDestinationsCommand\";\nimport {\n  DescribeExportTasksCommandInput,\n  DescribeExportTasksCommandOutput,\n} from \"../commands/DescribeExportTasksCommand\";\nimport { DescribeLogGroupsCommandInput, DescribeLogGroupsCommandOutput } from \"../commands/DescribeLogGroupsCommand\";\nimport { DescribeLogStreamsCommandInput, DescribeLogStreamsCommandOutput } from \"../commands/DescribeLogStreamsCommand\";\nimport {\n  DescribeMetricFiltersCommandInput,\n  DescribeMetricFiltersCommandOutput,\n} from \"../commands/DescribeMetricFiltersCommand\";\nimport { DescribeQueriesCommandInput, DescribeQueriesCommandOutput } from \"../commands/DescribeQueriesCommand\";\nimport {\n  DescribeQueryDefinitionsCommandInput,\n  DescribeQueryDefinitionsCommandOutput,\n} from \"../commands/DescribeQueryDefinitionsCommand\";\nimport {\n  DescribeResourcePoliciesCommandInput,\n  DescribeResourcePoliciesCommandOutput,\n} from \"../commands/DescribeResourcePoliciesCommand\";\nimport {\n  DescribeSubscriptionFiltersCommandInput,\n  DescribeSubscriptionFiltersCommandOutput,\n} from \"../commands/DescribeSubscriptionFiltersCommand\";\nimport { DisassociateKmsKeyCommandInput, DisassociateKmsKeyCommandOutput } from \"../commands/DisassociateKmsKeyCommand\";\nimport { FilterLogEventsCommandInput, FilterLogEventsCommandOutput } from \"../commands/FilterLogEventsCommand\";\nimport { GetLogEventsCommandInput, GetLogEventsCommandOutput } from \"../commands/GetLogEventsCommand\";\nimport { GetLogGroupFieldsCommandInput, GetLogGroupFieldsCommandOutput } from \"../commands/GetLogGroupFieldsCommand\";\nimport { GetLogRecordCommandInput, GetLogRecordCommandOutput } from \"../commands/GetLogRecordCommand\";\nimport { GetQueryResultsCommandInput, GetQueryResultsCommandOutput } from \"../commands/GetQueryResultsCommand\";\nimport { ListTagsLogGroupCommandInput, ListTagsLogGroupCommandOutput } from \"../commands/ListTagsLogGroupCommand\";\nimport { PutDestinationCommandInput, PutDestinationCommandOutput } from \"../commands/PutDestinationCommand\";\nimport {\n  PutDestinationPolicyCommandInput,\n  PutDestinationPolicyCommandOutput,\n} from \"../commands/PutDestinationPolicyCommand\";\nimport { PutLogEventsCommandInput, PutLogEventsCommandOutput } from \"../commands/PutLogEventsCommand\";\nimport { PutMetricFilterCommandInput, PutMetricFilterCommandOutput } from \"../commands/PutMetricFilterCommand\";\nimport { PutQueryDefinitionCommandInput, PutQueryDefinitionCommandOutput } from \"../commands/PutQueryDefinitionCommand\";\nimport { PutResourcePolicyCommandInput, PutResourcePolicyCommandOutput } from \"../commands/PutResourcePolicyCommand\";\nimport { PutRetentionPolicyCommandInput, PutRetentionPolicyCommandOutput } from \"../commands/PutRetentionPolicyCommand\";\nimport {\n  PutSubscriptionFilterCommandInput,\n  PutSubscriptionFilterCommandOutput,\n} from \"../commands/PutSubscriptionFilterCommand\";\nimport { StartQueryCommandInput, StartQueryCommandOutput } from \"../commands/StartQueryCommand\";\nimport { StopQueryCommandInput, StopQueryCommandOutput } from \"../commands/StopQueryCommand\";\nimport { TagLogGroupCommandInput, TagLogGroupCommandOutput } from \"../commands/TagLogGroupCommand\";\nimport { TestMetricFilterCommandInput, TestMetricFilterCommandOutput } from \"../commands/TestMetricFilterCommand\";\nimport { UntagLogGroupCommandInput, UntagLogGroupCommandOutput } from \"../commands/UntagLogGroupCommand\";\nimport {\n  AssociateKmsKeyRequest,\n  CancelExportTaskRequest,\n  CreateExportTaskRequest,\n  CreateExportTaskResponse,\n  CreateLogGroupRequest,\n  CreateLogStreamRequest,\n  DataAlreadyAcceptedException,\n  DeleteDestinationRequest,\n  DeleteLogGroupRequest,\n  DeleteLogStreamRequest,\n  DeleteMetricFilterRequest,\n  DeleteQueryDefinitionRequest,\n  DeleteQueryDefinitionResponse,\n  DeleteResourcePolicyRequest,\n  DeleteRetentionPolicyRequest,\n  DeleteSubscriptionFilterRequest,\n  DescribeDestinationsRequest,\n  DescribeDestinationsResponse,\n  DescribeExportTasksRequest,\n  DescribeExportTasksResponse,\n  DescribeLogGroupsRequest,\n  DescribeLogGroupsResponse,\n  DescribeLogStreamsRequest,\n  DescribeLogStreamsResponse,\n  DescribeMetricFiltersRequest,\n  DescribeMetricFiltersResponse,\n  DescribeQueriesRequest,\n  DescribeQueriesResponse,\n  DescribeQueryDefinitionsRequest,\n  DescribeQueryDefinitionsResponse,\n  DescribeResourcePoliciesRequest,\n  DescribeResourcePoliciesResponse,\n  DescribeSubscriptionFiltersRequest,\n  DescribeSubscriptionFiltersResponse,\n  Destination,\n  DisassociateKmsKeyRequest,\n  ExportTask,\n  ExportTaskExecutionInfo,\n  ExportTaskStatus,\n  FilterLogEventsRequest,\n  FilterLogEventsResponse,\n  FilteredLogEvent,\n  GetLogEventsRequest,\n  GetLogEventsResponse,\n  GetLogGroupFieldsRequest,\n  GetLogGroupFieldsResponse,\n  GetLogRecordRequest,\n  GetLogRecordResponse,\n  GetQueryResultsRequest,\n  GetQueryResultsResponse,\n  InputLogEvent,\n  InvalidOperationException,\n  InvalidParameterException,\n  InvalidSequenceTokenException,\n  LimitExceededException,\n  ListTagsLogGroupRequest,\n  ListTagsLogGroupResponse,\n  LogGroup,\n  LogGroupField,\n  LogStream,\n  MalformedQueryException,\n  MetricFilter,\n  MetricFilterMatchRecord,\n  MetricTransformation,\n  OperationAbortedException,\n  OutputLogEvent,\n  PutDestinationPolicyRequest,\n  PutDestinationRequest,\n  PutDestinationResponse,\n  PutLogEventsRequest,\n  PutLogEventsResponse,\n  PutMetricFilterRequest,\n  PutQueryDefinitionRequest,\n  PutQueryDefinitionResponse,\n  PutResourcePolicyRequest,\n  PutResourcePolicyResponse,\n  PutRetentionPolicyRequest,\n  PutSubscriptionFilterRequest,\n  QueryCompileError,\n  QueryCompileErrorLocation,\n  QueryDefinition,\n  QueryInfo,\n  QueryStatistics,\n  RejectedLogEventsInfo,\n  ResourceAlreadyExistsException,\n  ResourceNotFoundException,\n  ResourcePolicy,\n  ResultField,\n  SearchedLogStream,\n  ServiceUnavailableException,\n  StartQueryRequest,\n  StartQueryResponse,\n  StopQueryRequest,\n  StopQueryResponse,\n  SubscriptionFilter,\n  TagLogGroupRequest,\n  TestMetricFilterRequest,\n  TestMetricFilterResponse,\n  UnrecognizedClientException,\n  UntagLogGroupRequest,\n} from \"../models/models_0\";\nimport { HttpRequest as __HttpRequest, HttpResponse as __HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { SmithyException as __SmithyException } from \"@aws-sdk/smithy-client\";\nimport {\n  Endpoint as __Endpoint,\n  HeaderBag as __HeaderBag,\n  MetadataBearer as __MetadataBearer,\n  ResponseMetadata as __ResponseMetadata,\n  SerdeContext as __SerdeContext,\n} from \"@aws-sdk/types\";\n\nexport const serializeAws_json1_1AssociateKmsKeyCommand = async (\n  input: AssociateKmsKeyCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Logs_20140328.AssociateKmsKey\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1AssociateKmsKeyRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1CancelExportTaskCommand = async (\n  input: CancelExportTaskCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Logs_20140328.CancelExportTask\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1CancelExportTaskRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1CreateExportTaskCommand = async (\n  input: CreateExportTaskCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Logs_20140328.CreateExportTask\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1CreateExportTaskRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1CreateLogGroupCommand = async (\n  input: CreateLogGroupCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Logs_20140328.CreateLogGroup\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1CreateLogGroupRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1CreateLogStreamCommand = async (\n  input: CreateLogStreamCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Logs_20140328.CreateLogStream\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1CreateLogStreamRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1DeleteDestinationCommand = async (\n  input: DeleteDestinationCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Logs_20140328.DeleteDestination\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1DeleteDestinationRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1DeleteLogGroupCommand = async (\n  input: DeleteLogGroupCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Logs_20140328.DeleteLogGroup\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1DeleteLogGroupRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1DeleteLogStreamCommand = async (\n  input: DeleteLogStreamCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Logs_20140328.DeleteLogStream\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1DeleteLogStreamRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1DeleteMetricFilterCommand = async (\n  input: DeleteMetricFilterCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Logs_20140328.DeleteMetricFilter\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1DeleteMetricFilterRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1DeleteQueryDefinitionCommand = async (\n  input: DeleteQueryDefinitionCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Logs_20140328.DeleteQueryDefinition\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1DeleteQueryDefinitionRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1DeleteResourcePolicyCommand = async (\n  input: DeleteResourcePolicyCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Logs_20140328.DeleteResourcePolicy\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1DeleteResourcePolicyRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1DeleteRetentionPolicyCommand = async (\n  input: DeleteRetentionPolicyCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Logs_20140328.DeleteRetentionPolicy\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1DeleteRetentionPolicyRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1DeleteSubscriptionFilterCommand = async (\n  input: DeleteSubscriptionFilterCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Logs_20140328.DeleteSubscriptionFilter\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1DeleteSubscriptionFilterRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1DescribeDestinationsCommand = async (\n  input: DescribeDestinationsCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Logs_20140328.DescribeDestinations\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1DescribeDestinationsRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1DescribeExportTasksCommand = async (\n  input: DescribeExportTasksCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Logs_20140328.DescribeExportTasks\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1DescribeExportTasksRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1DescribeLogGroupsCommand = async (\n  input: DescribeLogGroupsCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Logs_20140328.DescribeLogGroups\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1DescribeLogGroupsRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1DescribeLogStreamsCommand = async (\n  input: DescribeLogStreamsCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Logs_20140328.DescribeLogStreams\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1DescribeLogStreamsRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1DescribeMetricFiltersCommand = async (\n  input: DescribeMetricFiltersCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Logs_20140328.DescribeMetricFilters\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1DescribeMetricFiltersRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1DescribeQueriesCommand = async (\n  input: DescribeQueriesCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Logs_20140328.DescribeQueries\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1DescribeQueriesRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1DescribeQueryDefinitionsCommand = async (\n  input: DescribeQueryDefinitionsCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Logs_20140328.DescribeQueryDefinitions\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1DescribeQueryDefinitionsRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1DescribeResourcePoliciesCommand = async (\n  input: DescribeResourcePoliciesCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Logs_20140328.DescribeResourcePolicies\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1DescribeResourcePoliciesRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1DescribeSubscriptionFiltersCommand = async (\n  input: DescribeSubscriptionFiltersCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Logs_20140328.DescribeSubscriptionFilters\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1DescribeSubscriptionFiltersRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1DisassociateKmsKeyCommand = async (\n  input: DisassociateKmsKeyCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Logs_20140328.DisassociateKmsKey\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1DisassociateKmsKeyRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1FilterLogEventsCommand = async (\n  input: FilterLogEventsCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Logs_20140328.FilterLogEvents\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1FilterLogEventsRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1GetLogEventsCommand = async (\n  input: GetLogEventsCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Logs_20140328.GetLogEvents\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1GetLogEventsRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1GetLogGroupFieldsCommand = async (\n  input: GetLogGroupFieldsCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Logs_20140328.GetLogGroupFields\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1GetLogGroupFieldsRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1GetLogRecordCommand = async (\n  input: GetLogRecordCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Logs_20140328.GetLogRecord\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1GetLogRecordRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1GetQueryResultsCommand = async (\n  input: GetQueryResultsCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Logs_20140328.GetQueryResults\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1GetQueryResultsRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1ListTagsLogGroupCommand = async (\n  input: ListTagsLogGroupCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Logs_20140328.ListTagsLogGroup\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1ListTagsLogGroupRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1PutDestinationCommand = async (\n  input: PutDestinationCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Logs_20140328.PutDestination\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1PutDestinationRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1PutDestinationPolicyCommand = async (\n  input: PutDestinationPolicyCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Logs_20140328.PutDestinationPolicy\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1PutDestinationPolicyRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1PutLogEventsCommand = async (\n  input: PutLogEventsCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Logs_20140328.PutLogEvents\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1PutLogEventsRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1PutMetricFilterCommand = async (\n  input: PutMetricFilterCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Logs_20140328.PutMetricFilter\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1PutMetricFilterRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1PutQueryDefinitionCommand = async (\n  input: PutQueryDefinitionCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Logs_20140328.PutQueryDefinition\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1PutQueryDefinitionRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1PutResourcePolicyCommand = async (\n  input: PutResourcePolicyCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Logs_20140328.PutResourcePolicy\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1PutResourcePolicyRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1PutRetentionPolicyCommand = async (\n  input: PutRetentionPolicyCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Logs_20140328.PutRetentionPolicy\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1PutRetentionPolicyRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1PutSubscriptionFilterCommand = async (\n  input: PutSubscriptionFilterCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Logs_20140328.PutSubscriptionFilter\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1PutSubscriptionFilterRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1StartQueryCommand = async (\n  input: StartQueryCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Logs_20140328.StartQuery\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1StartQueryRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1StopQueryCommand = async (\n  input: StopQueryCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Logs_20140328.StopQuery\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1StopQueryRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1TagLogGroupCommand = async (\n  input: TagLogGroupCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Logs_20140328.TagLogGroup\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1TagLogGroupRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1TestMetricFilterCommand = async (\n  input: TestMetricFilterCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Logs_20140328.TestMetricFilter\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1TestMetricFilterRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1UntagLogGroupCommand = async (\n  input: UntagLogGroupCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Logs_20140328.UntagLogGroup\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1UntagLogGroupRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const deserializeAws_json1_1AssociateKmsKeyCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<AssociateKmsKeyCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1AssociateKmsKeyCommandError(output, context);\n  }\n  await collectBody(output.body, context);\n  const response: AssociateKmsKeyCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1AssociateKmsKeyCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<AssociateKmsKeyCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cloudwatchlogs#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"OperationAbortedException\":\n    case \"com.amazonaws.cloudwatchlogs#OperationAbortedException\":\n      response = {\n        ...(await deserializeAws_json1_1OperationAbortedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cloudwatchlogs#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ServiceUnavailableException\":\n    case \"com.amazonaws.cloudwatchlogs#ServiceUnavailableException\":\n      response = {\n        ...(await deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1CancelExportTaskCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<CancelExportTaskCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1CancelExportTaskCommandError(output, context);\n  }\n  await collectBody(output.body, context);\n  const response: CancelExportTaskCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1CancelExportTaskCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<CancelExportTaskCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidOperationException\":\n    case \"com.amazonaws.cloudwatchlogs#InvalidOperationException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidOperationExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cloudwatchlogs#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cloudwatchlogs#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ServiceUnavailableException\":\n    case \"com.amazonaws.cloudwatchlogs#ServiceUnavailableException\":\n      response = {\n        ...(await deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1CreateExportTaskCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<CreateExportTaskCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1CreateExportTaskCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1CreateExportTaskResponse(data, context);\n  const response: CreateExportTaskCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1CreateExportTaskCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<CreateExportTaskCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cloudwatchlogs#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"LimitExceededException\":\n    case \"com.amazonaws.cloudwatchlogs#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"OperationAbortedException\":\n    case \"com.amazonaws.cloudwatchlogs#OperationAbortedException\":\n      response = {\n        ...(await deserializeAws_json1_1OperationAbortedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceAlreadyExistsException\":\n    case \"com.amazonaws.cloudwatchlogs#ResourceAlreadyExistsException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceAlreadyExistsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cloudwatchlogs#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ServiceUnavailableException\":\n    case \"com.amazonaws.cloudwatchlogs#ServiceUnavailableException\":\n      response = {\n        ...(await deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1CreateLogGroupCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<CreateLogGroupCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1CreateLogGroupCommandError(output, context);\n  }\n  await collectBody(output.body, context);\n  const response: CreateLogGroupCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1CreateLogGroupCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<CreateLogGroupCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cloudwatchlogs#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"LimitExceededException\":\n    case \"com.amazonaws.cloudwatchlogs#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"OperationAbortedException\":\n    case \"com.amazonaws.cloudwatchlogs#OperationAbortedException\":\n      response = {\n        ...(await deserializeAws_json1_1OperationAbortedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceAlreadyExistsException\":\n    case \"com.amazonaws.cloudwatchlogs#ResourceAlreadyExistsException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceAlreadyExistsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ServiceUnavailableException\":\n    case \"com.amazonaws.cloudwatchlogs#ServiceUnavailableException\":\n      response = {\n        ...(await deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1CreateLogStreamCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<CreateLogStreamCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1CreateLogStreamCommandError(output, context);\n  }\n  await collectBody(output.body, context);\n  const response: CreateLogStreamCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1CreateLogStreamCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<CreateLogStreamCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cloudwatchlogs#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceAlreadyExistsException\":\n    case \"com.amazonaws.cloudwatchlogs#ResourceAlreadyExistsException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceAlreadyExistsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cloudwatchlogs#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ServiceUnavailableException\":\n    case \"com.amazonaws.cloudwatchlogs#ServiceUnavailableException\":\n      response = {\n        ...(await deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1DeleteDestinationCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteDestinationCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1DeleteDestinationCommandError(output, context);\n  }\n  await collectBody(output.body, context);\n  const response: DeleteDestinationCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1DeleteDestinationCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteDestinationCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cloudwatchlogs#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"OperationAbortedException\":\n    case \"com.amazonaws.cloudwatchlogs#OperationAbortedException\":\n      response = {\n        ...(await deserializeAws_json1_1OperationAbortedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cloudwatchlogs#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ServiceUnavailableException\":\n    case \"com.amazonaws.cloudwatchlogs#ServiceUnavailableException\":\n      response = {\n        ...(await deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1DeleteLogGroupCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteLogGroupCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1DeleteLogGroupCommandError(output, context);\n  }\n  await collectBody(output.body, context);\n  const response: DeleteLogGroupCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1DeleteLogGroupCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteLogGroupCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cloudwatchlogs#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"OperationAbortedException\":\n    case \"com.amazonaws.cloudwatchlogs#OperationAbortedException\":\n      response = {\n        ...(await deserializeAws_json1_1OperationAbortedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cloudwatchlogs#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ServiceUnavailableException\":\n    case \"com.amazonaws.cloudwatchlogs#ServiceUnavailableException\":\n      response = {\n        ...(await deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1DeleteLogStreamCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteLogStreamCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1DeleteLogStreamCommandError(output, context);\n  }\n  await collectBody(output.body, context);\n  const response: DeleteLogStreamCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1DeleteLogStreamCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteLogStreamCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cloudwatchlogs#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"OperationAbortedException\":\n    case \"com.amazonaws.cloudwatchlogs#OperationAbortedException\":\n      response = {\n        ...(await deserializeAws_json1_1OperationAbortedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cloudwatchlogs#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ServiceUnavailableException\":\n    case \"com.amazonaws.cloudwatchlogs#ServiceUnavailableException\":\n      response = {\n        ...(await deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1DeleteMetricFilterCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteMetricFilterCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1DeleteMetricFilterCommandError(output, context);\n  }\n  await collectBody(output.body, context);\n  const response: DeleteMetricFilterCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1DeleteMetricFilterCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteMetricFilterCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cloudwatchlogs#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"OperationAbortedException\":\n    case \"com.amazonaws.cloudwatchlogs#OperationAbortedException\":\n      response = {\n        ...(await deserializeAws_json1_1OperationAbortedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cloudwatchlogs#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ServiceUnavailableException\":\n    case \"com.amazonaws.cloudwatchlogs#ServiceUnavailableException\":\n      response = {\n        ...(await deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1DeleteQueryDefinitionCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteQueryDefinitionCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1DeleteQueryDefinitionCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1DeleteQueryDefinitionResponse(data, context);\n  const response: DeleteQueryDefinitionCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1DeleteQueryDefinitionCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteQueryDefinitionCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cloudwatchlogs#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cloudwatchlogs#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ServiceUnavailableException\":\n    case \"com.amazonaws.cloudwatchlogs#ServiceUnavailableException\":\n      response = {\n        ...(await deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1DeleteResourcePolicyCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteResourcePolicyCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1DeleteResourcePolicyCommandError(output, context);\n  }\n  await collectBody(output.body, context);\n  const response: DeleteResourcePolicyCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1DeleteResourcePolicyCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteResourcePolicyCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cloudwatchlogs#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cloudwatchlogs#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ServiceUnavailableException\":\n    case \"com.amazonaws.cloudwatchlogs#ServiceUnavailableException\":\n      response = {\n        ...(await deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1DeleteRetentionPolicyCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteRetentionPolicyCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1DeleteRetentionPolicyCommandError(output, context);\n  }\n  await collectBody(output.body, context);\n  const response: DeleteRetentionPolicyCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1DeleteRetentionPolicyCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteRetentionPolicyCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cloudwatchlogs#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"OperationAbortedException\":\n    case \"com.amazonaws.cloudwatchlogs#OperationAbortedException\":\n      response = {\n        ...(await deserializeAws_json1_1OperationAbortedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cloudwatchlogs#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ServiceUnavailableException\":\n    case \"com.amazonaws.cloudwatchlogs#ServiceUnavailableException\":\n      response = {\n        ...(await deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1DeleteSubscriptionFilterCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteSubscriptionFilterCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1DeleteSubscriptionFilterCommandError(output, context);\n  }\n  await collectBody(output.body, context);\n  const response: DeleteSubscriptionFilterCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1DeleteSubscriptionFilterCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteSubscriptionFilterCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cloudwatchlogs#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"OperationAbortedException\":\n    case \"com.amazonaws.cloudwatchlogs#OperationAbortedException\":\n      response = {\n        ...(await deserializeAws_json1_1OperationAbortedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cloudwatchlogs#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ServiceUnavailableException\":\n    case \"com.amazonaws.cloudwatchlogs#ServiceUnavailableException\":\n      response = {\n        ...(await deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1DescribeDestinationsCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DescribeDestinationsCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1DescribeDestinationsCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1DescribeDestinationsResponse(data, context);\n  const response: DescribeDestinationsCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1DescribeDestinationsCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DescribeDestinationsCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cloudwatchlogs#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ServiceUnavailableException\":\n    case \"com.amazonaws.cloudwatchlogs#ServiceUnavailableException\":\n      response = {\n        ...(await deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1DescribeExportTasksCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DescribeExportTasksCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1DescribeExportTasksCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1DescribeExportTasksResponse(data, context);\n  const response: DescribeExportTasksCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1DescribeExportTasksCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DescribeExportTasksCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cloudwatchlogs#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ServiceUnavailableException\":\n    case \"com.amazonaws.cloudwatchlogs#ServiceUnavailableException\":\n      response = {\n        ...(await deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1DescribeLogGroupsCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DescribeLogGroupsCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1DescribeLogGroupsCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1DescribeLogGroupsResponse(data, context);\n  const response: DescribeLogGroupsCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1DescribeLogGroupsCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DescribeLogGroupsCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cloudwatchlogs#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ServiceUnavailableException\":\n    case \"com.amazonaws.cloudwatchlogs#ServiceUnavailableException\":\n      response = {\n        ...(await deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1DescribeLogStreamsCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DescribeLogStreamsCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1DescribeLogStreamsCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1DescribeLogStreamsResponse(data, context);\n  const response: DescribeLogStreamsCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1DescribeLogStreamsCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DescribeLogStreamsCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cloudwatchlogs#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cloudwatchlogs#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ServiceUnavailableException\":\n    case \"com.amazonaws.cloudwatchlogs#ServiceUnavailableException\":\n      response = {\n        ...(await deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1DescribeMetricFiltersCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DescribeMetricFiltersCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1DescribeMetricFiltersCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1DescribeMetricFiltersResponse(data, context);\n  const response: DescribeMetricFiltersCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1DescribeMetricFiltersCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DescribeMetricFiltersCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cloudwatchlogs#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cloudwatchlogs#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ServiceUnavailableException\":\n    case \"com.amazonaws.cloudwatchlogs#ServiceUnavailableException\":\n      response = {\n        ...(await deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1DescribeQueriesCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DescribeQueriesCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1DescribeQueriesCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1DescribeQueriesResponse(data, context);\n  const response: DescribeQueriesCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1DescribeQueriesCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DescribeQueriesCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cloudwatchlogs#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cloudwatchlogs#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ServiceUnavailableException\":\n    case \"com.amazonaws.cloudwatchlogs#ServiceUnavailableException\":\n      response = {\n        ...(await deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1DescribeQueryDefinitionsCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DescribeQueryDefinitionsCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1DescribeQueryDefinitionsCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1DescribeQueryDefinitionsResponse(data, context);\n  const response: DescribeQueryDefinitionsCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1DescribeQueryDefinitionsCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DescribeQueryDefinitionsCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cloudwatchlogs#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ServiceUnavailableException\":\n    case \"com.amazonaws.cloudwatchlogs#ServiceUnavailableException\":\n      response = {\n        ...(await deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1DescribeResourcePoliciesCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DescribeResourcePoliciesCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1DescribeResourcePoliciesCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1DescribeResourcePoliciesResponse(data, context);\n  const response: DescribeResourcePoliciesCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1DescribeResourcePoliciesCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DescribeResourcePoliciesCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cloudwatchlogs#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ServiceUnavailableException\":\n    case \"com.amazonaws.cloudwatchlogs#ServiceUnavailableException\":\n      response = {\n        ...(await deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1DescribeSubscriptionFiltersCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DescribeSubscriptionFiltersCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1DescribeSubscriptionFiltersCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1DescribeSubscriptionFiltersResponse(data, context);\n  const response: DescribeSubscriptionFiltersCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1DescribeSubscriptionFiltersCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DescribeSubscriptionFiltersCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cloudwatchlogs#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cloudwatchlogs#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ServiceUnavailableException\":\n    case \"com.amazonaws.cloudwatchlogs#ServiceUnavailableException\":\n      response = {\n        ...(await deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1DisassociateKmsKeyCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DisassociateKmsKeyCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1DisassociateKmsKeyCommandError(output, context);\n  }\n  await collectBody(output.body, context);\n  const response: DisassociateKmsKeyCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1DisassociateKmsKeyCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DisassociateKmsKeyCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cloudwatchlogs#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"OperationAbortedException\":\n    case \"com.amazonaws.cloudwatchlogs#OperationAbortedException\":\n      response = {\n        ...(await deserializeAws_json1_1OperationAbortedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cloudwatchlogs#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ServiceUnavailableException\":\n    case \"com.amazonaws.cloudwatchlogs#ServiceUnavailableException\":\n      response = {\n        ...(await deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1FilterLogEventsCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<FilterLogEventsCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1FilterLogEventsCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1FilterLogEventsResponse(data, context);\n  const response: FilterLogEventsCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1FilterLogEventsCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<FilterLogEventsCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cloudwatchlogs#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cloudwatchlogs#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ServiceUnavailableException\":\n    case \"com.amazonaws.cloudwatchlogs#ServiceUnavailableException\":\n      response = {\n        ...(await deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1GetLogEventsCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetLogEventsCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1GetLogEventsCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1GetLogEventsResponse(data, context);\n  const response: GetLogEventsCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1GetLogEventsCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetLogEventsCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cloudwatchlogs#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cloudwatchlogs#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ServiceUnavailableException\":\n    case \"com.amazonaws.cloudwatchlogs#ServiceUnavailableException\":\n      response = {\n        ...(await deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1GetLogGroupFieldsCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetLogGroupFieldsCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1GetLogGroupFieldsCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1GetLogGroupFieldsResponse(data, context);\n  const response: GetLogGroupFieldsCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1GetLogGroupFieldsCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetLogGroupFieldsCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cloudwatchlogs#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"LimitExceededException\":\n    case \"com.amazonaws.cloudwatchlogs#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cloudwatchlogs#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ServiceUnavailableException\":\n    case \"com.amazonaws.cloudwatchlogs#ServiceUnavailableException\":\n      response = {\n        ...(await deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1GetLogRecordCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetLogRecordCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1GetLogRecordCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1GetLogRecordResponse(data, context);\n  const response: GetLogRecordCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1GetLogRecordCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetLogRecordCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cloudwatchlogs#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"LimitExceededException\":\n    case \"com.amazonaws.cloudwatchlogs#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cloudwatchlogs#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ServiceUnavailableException\":\n    case \"com.amazonaws.cloudwatchlogs#ServiceUnavailableException\":\n      response = {\n        ...(await deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1GetQueryResultsCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetQueryResultsCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1GetQueryResultsCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1GetQueryResultsResponse(data, context);\n  const response: GetQueryResultsCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1GetQueryResultsCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetQueryResultsCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cloudwatchlogs#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cloudwatchlogs#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ServiceUnavailableException\":\n    case \"com.amazonaws.cloudwatchlogs#ServiceUnavailableException\":\n      response = {\n        ...(await deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1ListTagsLogGroupCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<ListTagsLogGroupCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1ListTagsLogGroupCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1ListTagsLogGroupResponse(data, context);\n  const response: ListTagsLogGroupCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1ListTagsLogGroupCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<ListTagsLogGroupCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cloudwatchlogs#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ServiceUnavailableException\":\n    case \"com.amazonaws.cloudwatchlogs#ServiceUnavailableException\":\n      response = {\n        ...(await deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1PutDestinationCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PutDestinationCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1PutDestinationCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1PutDestinationResponse(data, context);\n  const response: PutDestinationCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1PutDestinationCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PutDestinationCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cloudwatchlogs#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"OperationAbortedException\":\n    case \"com.amazonaws.cloudwatchlogs#OperationAbortedException\":\n      response = {\n        ...(await deserializeAws_json1_1OperationAbortedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ServiceUnavailableException\":\n    case \"com.amazonaws.cloudwatchlogs#ServiceUnavailableException\":\n      response = {\n        ...(await deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1PutDestinationPolicyCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PutDestinationPolicyCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1PutDestinationPolicyCommandError(output, context);\n  }\n  await collectBody(output.body, context);\n  const response: PutDestinationPolicyCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1PutDestinationPolicyCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PutDestinationPolicyCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cloudwatchlogs#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"OperationAbortedException\":\n    case \"com.amazonaws.cloudwatchlogs#OperationAbortedException\":\n      response = {\n        ...(await deserializeAws_json1_1OperationAbortedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ServiceUnavailableException\":\n    case \"com.amazonaws.cloudwatchlogs#ServiceUnavailableException\":\n      response = {\n        ...(await deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1PutLogEventsCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PutLogEventsCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1PutLogEventsCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1PutLogEventsResponse(data, context);\n  const response: PutLogEventsCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1PutLogEventsCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PutLogEventsCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"DataAlreadyAcceptedException\":\n    case \"com.amazonaws.cloudwatchlogs#DataAlreadyAcceptedException\":\n      response = {\n        ...(await deserializeAws_json1_1DataAlreadyAcceptedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cloudwatchlogs#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InvalidSequenceTokenException\":\n    case \"com.amazonaws.cloudwatchlogs#InvalidSequenceTokenException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidSequenceTokenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cloudwatchlogs#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ServiceUnavailableException\":\n    case \"com.amazonaws.cloudwatchlogs#ServiceUnavailableException\":\n      response = {\n        ...(await deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"UnrecognizedClientException\":\n    case \"com.amazonaws.cloudwatchlogs#UnrecognizedClientException\":\n      response = {\n        ...(await deserializeAws_json1_1UnrecognizedClientExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1PutMetricFilterCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PutMetricFilterCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1PutMetricFilterCommandError(output, context);\n  }\n  await collectBody(output.body, context);\n  const response: PutMetricFilterCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1PutMetricFilterCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PutMetricFilterCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cloudwatchlogs#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"LimitExceededException\":\n    case \"com.amazonaws.cloudwatchlogs#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"OperationAbortedException\":\n    case \"com.amazonaws.cloudwatchlogs#OperationAbortedException\":\n      response = {\n        ...(await deserializeAws_json1_1OperationAbortedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cloudwatchlogs#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ServiceUnavailableException\":\n    case \"com.amazonaws.cloudwatchlogs#ServiceUnavailableException\":\n      response = {\n        ...(await deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1PutQueryDefinitionCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PutQueryDefinitionCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1PutQueryDefinitionCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1PutQueryDefinitionResponse(data, context);\n  const response: PutQueryDefinitionCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1PutQueryDefinitionCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PutQueryDefinitionCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cloudwatchlogs#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cloudwatchlogs#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ServiceUnavailableException\":\n    case \"com.amazonaws.cloudwatchlogs#ServiceUnavailableException\":\n      response = {\n        ...(await deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1PutResourcePolicyCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PutResourcePolicyCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1PutResourcePolicyCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1PutResourcePolicyResponse(data, context);\n  const response: PutResourcePolicyCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1PutResourcePolicyCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PutResourcePolicyCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cloudwatchlogs#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"LimitExceededException\":\n    case \"com.amazonaws.cloudwatchlogs#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ServiceUnavailableException\":\n    case \"com.amazonaws.cloudwatchlogs#ServiceUnavailableException\":\n      response = {\n        ...(await deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1PutRetentionPolicyCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PutRetentionPolicyCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1PutRetentionPolicyCommandError(output, context);\n  }\n  await collectBody(output.body, context);\n  const response: PutRetentionPolicyCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1PutRetentionPolicyCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PutRetentionPolicyCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cloudwatchlogs#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"OperationAbortedException\":\n    case \"com.amazonaws.cloudwatchlogs#OperationAbortedException\":\n      response = {\n        ...(await deserializeAws_json1_1OperationAbortedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cloudwatchlogs#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ServiceUnavailableException\":\n    case \"com.amazonaws.cloudwatchlogs#ServiceUnavailableException\":\n      response = {\n        ...(await deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1PutSubscriptionFilterCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PutSubscriptionFilterCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1PutSubscriptionFilterCommandError(output, context);\n  }\n  await collectBody(output.body, context);\n  const response: PutSubscriptionFilterCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1PutSubscriptionFilterCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PutSubscriptionFilterCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cloudwatchlogs#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"LimitExceededException\":\n    case \"com.amazonaws.cloudwatchlogs#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"OperationAbortedException\":\n    case \"com.amazonaws.cloudwatchlogs#OperationAbortedException\":\n      response = {\n        ...(await deserializeAws_json1_1OperationAbortedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cloudwatchlogs#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ServiceUnavailableException\":\n    case \"com.amazonaws.cloudwatchlogs#ServiceUnavailableException\":\n      response = {\n        ...(await deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1StartQueryCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<StartQueryCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1StartQueryCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1StartQueryResponse(data, context);\n  const response: StartQueryCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1StartQueryCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<StartQueryCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cloudwatchlogs#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"LimitExceededException\":\n    case \"com.amazonaws.cloudwatchlogs#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MalformedQueryException\":\n    case \"com.amazonaws.cloudwatchlogs#MalformedQueryException\":\n      response = {\n        ...(await deserializeAws_json1_1MalformedQueryExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cloudwatchlogs#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ServiceUnavailableException\":\n    case \"com.amazonaws.cloudwatchlogs#ServiceUnavailableException\":\n      response = {\n        ...(await deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1StopQueryCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<StopQueryCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1StopQueryCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1StopQueryResponse(data, context);\n  const response: StopQueryCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1StopQueryCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<StopQueryCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cloudwatchlogs#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cloudwatchlogs#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ServiceUnavailableException\":\n    case \"com.amazonaws.cloudwatchlogs#ServiceUnavailableException\":\n      response = {\n        ...(await deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1TagLogGroupCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<TagLogGroupCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1TagLogGroupCommandError(output, context);\n  }\n  await collectBody(output.body, context);\n  const response: TagLogGroupCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1TagLogGroupCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<TagLogGroupCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cloudwatchlogs#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cloudwatchlogs#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1TestMetricFilterCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<TestMetricFilterCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1TestMetricFilterCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1TestMetricFilterResponse(data, context);\n  const response: TestMetricFilterCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1TestMetricFilterCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<TestMetricFilterCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cloudwatchlogs#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ServiceUnavailableException\":\n    case \"com.amazonaws.cloudwatchlogs#ServiceUnavailableException\":\n      response = {\n        ...(await deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1UntagLogGroupCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UntagLogGroupCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1UntagLogGroupCommandError(output, context);\n  }\n  await collectBody(output.body, context);\n  const response: UntagLogGroupCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1UntagLogGroupCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UntagLogGroupCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cloudwatchlogs#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nconst deserializeAws_json1_1DataAlreadyAcceptedExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<DataAlreadyAcceptedException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1DataAlreadyAcceptedException(body, context);\n  const contents: DataAlreadyAcceptedException = {\n    name: \"DataAlreadyAcceptedException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1InvalidOperationExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<InvalidOperationException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1InvalidOperationException(body, context);\n  const contents: InvalidOperationException = {\n    name: \"InvalidOperationException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1InvalidParameterExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<InvalidParameterException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1InvalidParameterException(body, context);\n  const contents: InvalidParameterException = {\n    name: \"InvalidParameterException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1InvalidSequenceTokenExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<InvalidSequenceTokenException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1InvalidSequenceTokenException(body, context);\n  const contents: InvalidSequenceTokenException = {\n    name: \"InvalidSequenceTokenException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1LimitExceededExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<LimitExceededException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1LimitExceededException(body, context);\n  const contents: LimitExceededException = {\n    name: \"LimitExceededException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1MalformedQueryExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<MalformedQueryException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1MalformedQueryException(body, context);\n  const contents: MalformedQueryException = {\n    name: \"MalformedQueryException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1OperationAbortedExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<OperationAbortedException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1OperationAbortedException(body, context);\n  const contents: OperationAbortedException = {\n    name: \"OperationAbortedException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1ResourceAlreadyExistsExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<ResourceAlreadyExistsException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1ResourceAlreadyExistsException(body, context);\n  const contents: ResourceAlreadyExistsException = {\n    name: \"ResourceAlreadyExistsException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1ResourceNotFoundExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<ResourceNotFoundException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1ResourceNotFoundException(body, context);\n  const contents: ResourceNotFoundException = {\n    name: \"ResourceNotFoundException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1ServiceUnavailableExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<ServiceUnavailableException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1ServiceUnavailableException(body, context);\n  const contents: ServiceUnavailableException = {\n    name: \"ServiceUnavailableException\",\n    $fault: \"server\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1UnrecognizedClientExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<UnrecognizedClientException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1UnrecognizedClientException(body, context);\n  const contents: UnrecognizedClientException = {\n    name: \"UnrecognizedClientException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst serializeAws_json1_1AssociateKmsKeyRequest = (input: AssociateKmsKeyRequest, context: __SerdeContext): any => {\n  return {\n    ...(input.kmsKeyId !== undefined && input.kmsKeyId !== null && { kmsKeyId: input.kmsKeyId }),\n    ...(input.logGroupName !== undefined && input.logGroupName !== null && { logGroupName: input.logGroupName }),\n  };\n};\n\nconst serializeAws_json1_1CancelExportTaskRequest = (input: CancelExportTaskRequest, context: __SerdeContext): any => {\n  return {\n    ...(input.taskId !== undefined && input.taskId !== null && { taskId: input.taskId }),\n  };\n};\n\nconst serializeAws_json1_1CreateExportTaskRequest = (input: CreateExportTaskRequest, context: __SerdeContext): any => {\n  return {\n    ...(input.destination !== undefined && input.destination !== null && { destination: input.destination }),\n    ...(input.destinationPrefix !== undefined &&\n      input.destinationPrefix !== null && { destinationPrefix: input.destinationPrefix }),\n    ...(input.from !== undefined && input.from !== null && { from: input.from }),\n    ...(input.logGroupName !== undefined && input.logGroupName !== null && { logGroupName: input.logGroupName }),\n    ...(input.logStreamNamePrefix !== undefined &&\n      input.logStreamNamePrefix !== null && { logStreamNamePrefix: input.logStreamNamePrefix }),\n    ...(input.taskName !== undefined && input.taskName !== null && { taskName: input.taskName }),\n    ...(input.to !== undefined && input.to !== null && { to: input.to }),\n  };\n};\n\nconst serializeAws_json1_1CreateLogGroupRequest = (input: CreateLogGroupRequest, context: __SerdeContext): any => {\n  return {\n    ...(input.kmsKeyId !== undefined && input.kmsKeyId !== null && { kmsKeyId: input.kmsKeyId }),\n    ...(input.logGroupName !== undefined && input.logGroupName !== null && { logGroupName: input.logGroupName }),\n    ...(input.tags !== undefined && input.tags !== null && { tags: serializeAws_json1_1Tags(input.tags, context) }),\n  };\n};\n\nconst serializeAws_json1_1CreateLogStreamRequest = (input: CreateLogStreamRequest, context: __SerdeContext): any => {\n  return {\n    ...(input.logGroupName !== undefined && input.logGroupName !== null && { logGroupName: input.logGroupName }),\n    ...(input.logStreamName !== undefined && input.logStreamName !== null && { logStreamName: input.logStreamName }),\n  };\n};\n\nconst serializeAws_json1_1DeleteDestinationRequest = (\n  input: DeleteDestinationRequest,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.destinationName !== undefined &&\n      input.destinationName !== null && { destinationName: input.destinationName }),\n  };\n};\n\nconst serializeAws_json1_1DeleteLogGroupRequest = (input: DeleteLogGroupRequest, context: __SerdeContext): any => {\n  return {\n    ...(input.logGroupName !== undefined && input.logGroupName !== null && { logGroupName: input.logGroupName }),\n  };\n};\n\nconst serializeAws_json1_1DeleteLogStreamRequest = (input: DeleteLogStreamRequest, context: __SerdeContext): any => {\n  return {\n    ...(input.logGroupName !== undefined && input.logGroupName !== null && { logGroupName: input.logGroupName }),\n    ...(input.logStreamName !== undefined && input.logStreamName !== null && { logStreamName: input.logStreamName }),\n  };\n};\n\nconst serializeAws_json1_1DeleteMetricFilterRequest = (\n  input: DeleteMetricFilterRequest,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.filterName !== undefined && input.filterName !== null && { filterName: input.filterName }),\n    ...(input.logGroupName !== undefined && input.logGroupName !== null && { logGroupName: input.logGroupName }),\n  };\n};\n\nconst serializeAws_json1_1DeleteQueryDefinitionRequest = (\n  input: DeleteQueryDefinitionRequest,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.queryDefinitionId !== undefined &&\n      input.queryDefinitionId !== null && { queryDefinitionId: input.queryDefinitionId }),\n  };\n};\n\nconst serializeAws_json1_1DeleteResourcePolicyRequest = (\n  input: DeleteResourcePolicyRequest,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.policyName !== undefined && input.policyName !== null && { policyName: input.policyName }),\n  };\n};\n\nconst serializeAws_json1_1DeleteRetentionPolicyRequest = (\n  input: DeleteRetentionPolicyRequest,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.logGroupName !== undefined && input.logGroupName !== null && { logGroupName: input.logGroupName }),\n  };\n};\n\nconst serializeAws_json1_1DeleteSubscriptionFilterRequest = (\n  input: DeleteSubscriptionFilterRequest,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.filterName !== undefined && input.filterName !== null && { filterName: input.filterName }),\n    ...(input.logGroupName !== undefined && input.logGroupName !== null && { logGroupName: input.logGroupName }),\n  };\n};\n\nconst serializeAws_json1_1DescribeDestinationsRequest = (\n  input: DescribeDestinationsRequest,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.DestinationNamePrefix !== undefined &&\n      input.DestinationNamePrefix !== null && { DestinationNamePrefix: input.DestinationNamePrefix }),\n    ...(input.limit !== undefined && input.limit !== null && { limit: input.limit }),\n    ...(input.nextToken !== undefined && input.nextToken !== null && { nextToken: input.nextToken }),\n  };\n};\n\nconst serializeAws_json1_1DescribeExportTasksRequest = (\n  input: DescribeExportTasksRequest,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.limit !== undefined && input.limit !== null && { limit: input.limit }),\n    ...(input.nextToken !== undefined && input.nextToken !== null && { nextToken: input.nextToken }),\n    ...(input.statusCode !== undefined && input.statusCode !== null && { statusCode: input.statusCode }),\n    ...(input.taskId !== undefined && input.taskId !== null && { taskId: input.taskId }),\n  };\n};\n\nconst serializeAws_json1_1DescribeLogGroupsRequest = (\n  input: DescribeLogGroupsRequest,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.limit !== undefined && input.limit !== null && { limit: input.limit }),\n    ...(input.logGroupNamePrefix !== undefined &&\n      input.logGroupNamePrefix !== null && { logGroupNamePrefix: input.logGroupNamePrefix }),\n    ...(input.nextToken !== undefined && input.nextToken !== null && { nextToken: input.nextToken }),\n  };\n};\n\nconst serializeAws_json1_1DescribeLogStreamsRequest = (\n  input: DescribeLogStreamsRequest,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.descending !== undefined && input.descending !== null && { descending: input.descending }),\n    ...(input.limit !== undefined && input.limit !== null && { limit: input.limit }),\n    ...(input.logGroupName !== undefined && input.logGroupName !== null && { logGroupName: input.logGroupName }),\n    ...(input.logStreamNamePrefix !== undefined &&\n      input.logStreamNamePrefix !== null && { logStreamNamePrefix: input.logStreamNamePrefix }),\n    ...(input.nextToken !== undefined && input.nextToken !== null && { nextToken: input.nextToken }),\n    ...(input.orderBy !== undefined && input.orderBy !== null && { orderBy: input.orderBy }),\n  };\n};\n\nconst serializeAws_json1_1DescribeMetricFiltersRequest = (\n  input: DescribeMetricFiltersRequest,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.filterNamePrefix !== undefined &&\n      input.filterNamePrefix !== null && { filterNamePrefix: input.filterNamePrefix }),\n    ...(input.limit !== undefined && input.limit !== null && { limit: input.limit }),\n    ...(input.logGroupName !== undefined && input.logGroupName !== null && { logGroupName: input.logGroupName }),\n    ...(input.metricName !== undefined && input.metricName !== null && { metricName: input.metricName }),\n    ...(input.metricNamespace !== undefined &&\n      input.metricNamespace !== null && { metricNamespace: input.metricNamespace }),\n    ...(input.nextToken !== undefined && input.nextToken !== null && { nextToken: input.nextToken }),\n  };\n};\n\nconst serializeAws_json1_1DescribeQueriesRequest = (input: DescribeQueriesRequest, context: __SerdeContext): any => {\n  return {\n    ...(input.logGroupName !== undefined && input.logGroupName !== null && { logGroupName: input.logGroupName }),\n    ...(input.maxResults !== undefined && input.maxResults !== null && { maxResults: input.maxResults }),\n    ...(input.nextToken !== undefined && input.nextToken !== null && { nextToken: input.nextToken }),\n    ...(input.status !== undefined && input.status !== null && { status: input.status }),\n  };\n};\n\nconst serializeAws_json1_1DescribeQueryDefinitionsRequest = (\n  input: DescribeQueryDefinitionsRequest,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.maxResults !== undefined && input.maxResults !== null && { maxResults: input.maxResults }),\n    ...(input.nextToken !== undefined && input.nextToken !== null && { nextToken: input.nextToken }),\n    ...(input.queryDefinitionNamePrefix !== undefined &&\n      input.queryDefinitionNamePrefix !== null && { queryDefinitionNamePrefix: input.queryDefinitionNamePrefix }),\n  };\n};\n\nconst serializeAws_json1_1DescribeResourcePoliciesRequest = (\n  input: DescribeResourcePoliciesRequest,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.limit !== undefined && input.limit !== null && { limit: input.limit }),\n    ...(input.nextToken !== undefined && input.nextToken !== null && { nextToken: input.nextToken }),\n  };\n};\n\nconst serializeAws_json1_1DescribeSubscriptionFiltersRequest = (\n  input: DescribeSubscriptionFiltersRequest,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.filterNamePrefix !== undefined &&\n      input.filterNamePrefix !== null && { filterNamePrefix: input.filterNamePrefix }),\n    ...(input.limit !== undefined && input.limit !== null && { limit: input.limit }),\n    ...(input.logGroupName !== undefined && input.logGroupName !== null && { logGroupName: input.logGroupName }),\n    ...(input.nextToken !== undefined && input.nextToken !== null && { nextToken: input.nextToken }),\n  };\n};\n\nconst serializeAws_json1_1DisassociateKmsKeyRequest = (\n  input: DisassociateKmsKeyRequest,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.logGroupName !== undefined && input.logGroupName !== null && { logGroupName: input.logGroupName }),\n  };\n};\n\nconst serializeAws_json1_1FilterLogEventsRequest = (input: FilterLogEventsRequest, context: __SerdeContext): any => {\n  return {\n    ...(input.endTime !== undefined && input.endTime !== null && { endTime: input.endTime }),\n    ...(input.filterPattern !== undefined && input.filterPattern !== null && { filterPattern: input.filterPattern }),\n    ...(input.interleaved !== undefined && input.interleaved !== null && { interleaved: input.interleaved }),\n    ...(input.limit !== undefined && input.limit !== null && { limit: input.limit }),\n    ...(input.logGroupName !== undefined && input.logGroupName !== null && { logGroupName: input.logGroupName }),\n    ...(input.logStreamNamePrefix !== undefined &&\n      input.logStreamNamePrefix !== null && { logStreamNamePrefix: input.logStreamNamePrefix }),\n    ...(input.logStreamNames !== undefined &&\n      input.logStreamNames !== null && {\n        logStreamNames: serializeAws_json1_1InputLogStreamNames(input.logStreamNames, context),\n      }),\n    ...(input.nextToken !== undefined && input.nextToken !== null && { nextToken: input.nextToken }),\n    ...(input.startTime !== undefined && input.startTime !== null && { startTime: input.startTime }),\n  };\n};\n\nconst serializeAws_json1_1GetLogEventsRequest = (input: GetLogEventsRequest, context: __SerdeContext): any => {\n  return {\n    ...(input.endTime !== undefined && input.endTime !== null && { endTime: input.endTime }),\n    ...(input.limit !== undefined && input.limit !== null && { limit: input.limit }),\n    ...(input.logGroupName !== undefined && input.logGroupName !== null && { logGroupName: input.logGroupName }),\n    ...(input.logStreamName !== undefined && input.logStreamName !== null && { logStreamName: input.logStreamName }),\n    ...(input.nextToken !== undefined && input.nextToken !== null && { nextToken: input.nextToken }),\n    ...(input.startFromHead !== undefined && input.startFromHead !== null && { startFromHead: input.startFromHead }),\n    ...(input.startTime !== undefined && input.startTime !== null && { startTime: input.startTime }),\n  };\n};\n\nconst serializeAws_json1_1GetLogGroupFieldsRequest = (\n  input: GetLogGroupFieldsRequest,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.logGroupName !== undefined && input.logGroupName !== null && { logGroupName: input.logGroupName }),\n    ...(input.time !== undefined && input.time !== null && { time: input.time }),\n  };\n};\n\nconst serializeAws_json1_1GetLogRecordRequest = (input: GetLogRecordRequest, context: __SerdeContext): any => {\n  return {\n    ...(input.logRecordPointer !== undefined &&\n      input.logRecordPointer !== null && { logRecordPointer: input.logRecordPointer }),\n  };\n};\n\nconst serializeAws_json1_1GetQueryResultsRequest = (input: GetQueryResultsRequest, context: __SerdeContext): any => {\n  return {\n    ...(input.queryId !== undefined && input.queryId !== null && { queryId: input.queryId }),\n  };\n};\n\nconst serializeAws_json1_1InputLogEvent = (input: InputLogEvent, context: __SerdeContext): any => {\n  return {\n    ...(input.message !== undefined && input.message !== null && { message: input.message }),\n    ...(input.timestamp !== undefined && input.timestamp !== null && { timestamp: input.timestamp }),\n  };\n};\n\nconst serializeAws_json1_1InputLogEvents = (input: InputLogEvent[], context: __SerdeContext): any => {\n  return input\n    .filter((e: any) => e != null)\n    .map((entry) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return serializeAws_json1_1InputLogEvent(entry, context);\n    });\n};\n\nconst serializeAws_json1_1InputLogStreamNames = (input: string[], context: __SerdeContext): any => {\n  return input\n    .filter((e: any) => e != null)\n    .map((entry) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return entry;\n    });\n};\n\nconst serializeAws_json1_1ListTagsLogGroupRequest = (input: ListTagsLogGroupRequest, context: __SerdeContext): any => {\n  return {\n    ...(input.logGroupName !== undefined && input.logGroupName !== null && { logGroupName: input.logGroupName }),\n  };\n};\n\nconst serializeAws_json1_1LogGroupNames = (input: string[], context: __SerdeContext): any => {\n  return input\n    .filter((e: any) => e != null)\n    .map((entry) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return entry;\n    });\n};\n\nconst serializeAws_json1_1MetricTransformation = (input: MetricTransformation, context: __SerdeContext): any => {\n  return {\n    ...(input.defaultValue !== undefined && input.defaultValue !== null && { defaultValue: input.defaultValue }),\n    ...(input.metricName !== undefined && input.metricName !== null && { metricName: input.metricName }),\n    ...(input.metricNamespace !== undefined &&\n      input.metricNamespace !== null && { metricNamespace: input.metricNamespace }),\n    ...(input.metricValue !== undefined && input.metricValue !== null && { metricValue: input.metricValue }),\n  };\n};\n\nconst serializeAws_json1_1MetricTransformations = (input: MetricTransformation[], context: __SerdeContext): any => {\n  return input\n    .filter((e: any) => e != null)\n    .map((entry) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return serializeAws_json1_1MetricTransformation(entry, context);\n    });\n};\n\nconst serializeAws_json1_1PutDestinationPolicyRequest = (\n  input: PutDestinationPolicyRequest,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.accessPolicy !== undefined && input.accessPolicy !== null && { accessPolicy: input.accessPolicy }),\n    ...(input.destinationName !== undefined &&\n      input.destinationName !== null && { destinationName: input.destinationName }),\n  };\n};\n\nconst serializeAws_json1_1PutDestinationRequest = (input: PutDestinationRequest, context: __SerdeContext): any => {\n  return {\n    ...(input.destinationName !== undefined &&\n      input.destinationName !== null && { destinationName: input.destinationName }),\n    ...(input.roleArn !== undefined && input.roleArn !== null && { roleArn: input.roleArn }),\n    ...(input.targetArn !== undefined && input.targetArn !== null && { targetArn: input.targetArn }),\n  };\n};\n\nconst serializeAws_json1_1PutLogEventsRequest = (input: PutLogEventsRequest, context: __SerdeContext): any => {\n  return {\n    ...(input.logEvents !== undefined &&\n      input.logEvents !== null && { logEvents: serializeAws_json1_1InputLogEvents(input.logEvents, context) }),\n    ...(input.logGroupName !== undefined && input.logGroupName !== null && { logGroupName: input.logGroupName }),\n    ...(input.logStreamName !== undefined && input.logStreamName !== null && { logStreamName: input.logStreamName }),\n    ...(input.sequenceToken !== undefined && input.sequenceToken !== null && { sequenceToken: input.sequenceToken }),\n  };\n};\n\nconst serializeAws_json1_1PutMetricFilterRequest = (input: PutMetricFilterRequest, context: __SerdeContext): any => {\n  return {\n    ...(input.filterName !== undefined && input.filterName !== null && { filterName: input.filterName }),\n    ...(input.filterPattern !== undefined && input.filterPattern !== null && { filterPattern: input.filterPattern }),\n    ...(input.logGroupName !== undefined && input.logGroupName !== null && { logGroupName: input.logGroupName }),\n    ...(input.metricTransformations !== undefined &&\n      input.metricTransformations !== null && {\n        metricTransformations: serializeAws_json1_1MetricTransformations(input.metricTransformations, context),\n      }),\n  };\n};\n\nconst serializeAws_json1_1PutQueryDefinitionRequest = (\n  input: PutQueryDefinitionRequest,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.logGroupNames !== undefined &&\n      input.logGroupNames !== null && {\n        logGroupNames: serializeAws_json1_1LogGroupNames(input.logGroupNames, context),\n      }),\n    ...(input.name !== undefined && input.name !== null && { name: input.name }),\n    ...(input.queryDefinitionId !== undefined &&\n      input.queryDefinitionId !== null && { queryDefinitionId: input.queryDefinitionId }),\n    ...(input.queryString !== undefined && input.queryString !== null && { queryString: input.queryString }),\n  };\n};\n\nconst serializeAws_json1_1PutResourcePolicyRequest = (\n  input: PutResourcePolicyRequest,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.policyDocument !== undefined &&\n      input.policyDocument !== null && { policyDocument: input.policyDocument }),\n    ...(input.policyName !== undefined && input.policyName !== null && { policyName: input.policyName }),\n  };\n};\n\nconst serializeAws_json1_1PutRetentionPolicyRequest = (\n  input: PutRetentionPolicyRequest,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.logGroupName !== undefined && input.logGroupName !== null && { logGroupName: input.logGroupName }),\n    ...(input.retentionInDays !== undefined &&\n      input.retentionInDays !== null && { retentionInDays: input.retentionInDays }),\n  };\n};\n\nconst serializeAws_json1_1PutSubscriptionFilterRequest = (\n  input: PutSubscriptionFilterRequest,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.destinationArn !== undefined &&\n      input.destinationArn !== null && { destinationArn: input.destinationArn }),\n    ...(input.distribution !== undefined && input.distribution !== null && { distribution: input.distribution }),\n    ...(input.filterName !== undefined && input.filterName !== null && { filterName: input.filterName }),\n    ...(input.filterPattern !== undefined && input.filterPattern !== null && { filterPattern: input.filterPattern }),\n    ...(input.logGroupName !== undefined && input.logGroupName !== null && { logGroupName: input.logGroupName }),\n    ...(input.roleArn !== undefined && input.roleArn !== null && { roleArn: input.roleArn }),\n  };\n};\n\nconst serializeAws_json1_1StartQueryRequest = (input: StartQueryRequest, context: __SerdeContext): any => {\n  return {\n    ...(input.endTime !== undefined && input.endTime !== null && { endTime: input.endTime }),\n    ...(input.limit !== undefined && input.limit !== null && { limit: input.limit }),\n    ...(input.logGroupName !== undefined && input.logGroupName !== null && { logGroupName: input.logGroupName }),\n    ...(input.logGroupNames !== undefined &&\n      input.logGroupNames !== null && {\n        logGroupNames: serializeAws_json1_1LogGroupNames(input.logGroupNames, context),\n      }),\n    ...(input.queryString !== undefined && input.queryString !== null && { queryString: input.queryString }),\n    ...(input.startTime !== undefined && input.startTime !== null && { startTime: input.startTime }),\n  };\n};\n\nconst serializeAws_json1_1StopQueryRequest = (input: StopQueryRequest, context: __SerdeContext): any => {\n  return {\n    ...(input.queryId !== undefined && input.queryId !== null && { queryId: input.queryId }),\n  };\n};\n\nconst serializeAws_json1_1TagList = (input: string[], context: __SerdeContext): any => {\n  return input\n    .filter((e: any) => e != null)\n    .map((entry) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return entry;\n    });\n};\n\nconst serializeAws_json1_1TagLogGroupRequest = (input: TagLogGroupRequest, context: __SerdeContext): any => {\n  return {\n    ...(input.logGroupName !== undefined && input.logGroupName !== null && { logGroupName: input.logGroupName }),\n    ...(input.tags !== undefined && input.tags !== null && { tags: serializeAws_json1_1Tags(input.tags, context) }),\n  };\n};\n\nconst serializeAws_json1_1Tags = (input: { [key: string]: string }, context: __SerdeContext): any => {\n  return Object.entries(input).reduce((acc: { [key: string]: string }, [key, value]: [string, any]) => {\n    if (value === null) {\n      return acc;\n    }\n    return {\n      ...acc,\n      [key]: value,\n    };\n  }, {});\n};\n\nconst serializeAws_json1_1TestEventMessages = (input: string[], context: __SerdeContext): any => {\n  return input\n    .filter((e: any) => e != null)\n    .map((entry) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return entry;\n    });\n};\n\nconst serializeAws_json1_1TestMetricFilterRequest = (input: TestMetricFilterRequest, context: __SerdeContext): any => {\n  return {\n    ...(input.filterPattern !== undefined && input.filterPattern !== null && { filterPattern: input.filterPattern }),\n    ...(input.logEventMessages !== undefined &&\n      input.logEventMessages !== null && {\n        logEventMessages: serializeAws_json1_1TestEventMessages(input.logEventMessages, context),\n      }),\n  };\n};\n\nconst serializeAws_json1_1UntagLogGroupRequest = (input: UntagLogGroupRequest, context: __SerdeContext): any => {\n  return {\n    ...(input.logGroupName !== undefined && input.logGroupName !== null && { logGroupName: input.logGroupName }),\n    ...(input.tags !== undefined && input.tags !== null && { tags: serializeAws_json1_1TagList(input.tags, context) }),\n  };\n};\n\nconst deserializeAws_json1_1CreateExportTaskResponse = (\n  output: any,\n  context: __SerdeContext\n): CreateExportTaskResponse => {\n  return {\n    taskId: output.taskId !== undefined && output.taskId !== null ? output.taskId : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1DataAlreadyAcceptedException = (\n  output: any,\n  context: __SerdeContext\n): DataAlreadyAcceptedException => {\n  return {\n    expectedSequenceToken:\n      output.expectedSequenceToken !== undefined && output.expectedSequenceToken !== null\n        ? output.expectedSequenceToken\n        : undefined,\n    message: output.message !== undefined && output.message !== null ? output.message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1DeleteQueryDefinitionResponse = (\n  output: any,\n  context: __SerdeContext\n): DeleteQueryDefinitionResponse => {\n  return {\n    success: output.success !== undefined && output.success !== null ? output.success : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1DescribeDestinationsResponse = (\n  output: any,\n  context: __SerdeContext\n): DescribeDestinationsResponse => {\n  return {\n    destinations:\n      output.destinations !== undefined && output.destinations !== null\n        ? deserializeAws_json1_1Destinations(output.destinations, context)\n        : undefined,\n    nextToken: output.nextToken !== undefined && output.nextToken !== null ? output.nextToken : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1DescribeExportTasksResponse = (\n  output: any,\n  context: __SerdeContext\n): DescribeExportTasksResponse => {\n  return {\n    exportTasks:\n      output.exportTasks !== undefined && output.exportTasks !== null\n        ? deserializeAws_json1_1ExportTasks(output.exportTasks, context)\n        : undefined,\n    nextToken: output.nextToken !== undefined && output.nextToken !== null ? output.nextToken : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1DescribeLogGroupsResponse = (\n  output: any,\n  context: __SerdeContext\n): DescribeLogGroupsResponse => {\n  return {\n    logGroups:\n      output.logGroups !== undefined && output.logGroups !== null\n        ? deserializeAws_json1_1LogGroups(output.logGroups, context)\n        : undefined,\n    nextToken: output.nextToken !== undefined && output.nextToken !== null ? output.nextToken : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1DescribeLogStreamsResponse = (\n  output: any,\n  context: __SerdeContext\n): DescribeLogStreamsResponse => {\n  return {\n    logStreams:\n      output.logStreams !== undefined && output.logStreams !== null\n        ? deserializeAws_json1_1LogStreams(output.logStreams, context)\n        : undefined,\n    nextToken: output.nextToken !== undefined && output.nextToken !== null ? output.nextToken : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1DescribeMetricFiltersResponse = (\n  output: any,\n  context: __SerdeContext\n): DescribeMetricFiltersResponse => {\n  return {\n    metricFilters:\n      output.metricFilters !== undefined && output.metricFilters !== null\n        ? deserializeAws_json1_1MetricFilters(output.metricFilters, context)\n        : undefined,\n    nextToken: output.nextToken !== undefined && output.nextToken !== null ? output.nextToken : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1DescribeQueriesResponse = (\n  output: any,\n  context: __SerdeContext\n): DescribeQueriesResponse => {\n  return {\n    nextToken: output.nextToken !== undefined && output.nextToken !== null ? output.nextToken : undefined,\n    queries:\n      output.queries !== undefined && output.queries !== null\n        ? deserializeAws_json1_1QueryInfoList(output.queries, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1DescribeQueryDefinitionsResponse = (\n  output: any,\n  context: __SerdeContext\n): DescribeQueryDefinitionsResponse => {\n  return {\n    nextToken: output.nextToken !== undefined && output.nextToken !== null ? output.nextToken : undefined,\n    queryDefinitions:\n      output.queryDefinitions !== undefined && output.queryDefinitions !== null\n        ? deserializeAws_json1_1QueryDefinitionList(output.queryDefinitions, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1DescribeResourcePoliciesResponse = (\n  output: any,\n  context: __SerdeContext\n): DescribeResourcePoliciesResponse => {\n  return {\n    nextToken: output.nextToken !== undefined && output.nextToken !== null ? output.nextToken : undefined,\n    resourcePolicies:\n      output.resourcePolicies !== undefined && output.resourcePolicies !== null\n        ? deserializeAws_json1_1ResourcePolicies(output.resourcePolicies, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1DescribeSubscriptionFiltersResponse = (\n  output: any,\n  context: __SerdeContext\n): DescribeSubscriptionFiltersResponse => {\n  return {\n    nextToken: output.nextToken !== undefined && output.nextToken !== null ? output.nextToken : undefined,\n    subscriptionFilters:\n      output.subscriptionFilters !== undefined && output.subscriptionFilters !== null\n        ? deserializeAws_json1_1SubscriptionFilters(output.subscriptionFilters, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1Destination = (output: any, context: __SerdeContext): Destination => {\n  return {\n    accessPolicy: output.accessPolicy !== undefined && output.accessPolicy !== null ? output.accessPolicy : undefined,\n    arn: output.arn !== undefined && output.arn !== null ? output.arn : undefined,\n    creationTime: output.creationTime !== undefined && output.creationTime !== null ? output.creationTime : undefined,\n    destinationName:\n      output.destinationName !== undefined && output.destinationName !== null ? output.destinationName : undefined,\n    roleArn: output.roleArn !== undefined && output.roleArn !== null ? output.roleArn : undefined,\n    targetArn: output.targetArn !== undefined && output.targetArn !== null ? output.targetArn : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1Destinations = (output: any, context: __SerdeContext): Destination[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_json1_1Destination(entry, context);\n    });\n};\n\nconst deserializeAws_json1_1ExportTask = (output: any, context: __SerdeContext): ExportTask => {\n  return {\n    destination: output.destination !== undefined && output.destination !== null ? output.destination : undefined,\n    destinationPrefix:\n      output.destinationPrefix !== undefined && output.destinationPrefix !== null\n        ? output.destinationPrefix\n        : undefined,\n    executionInfo:\n      output.executionInfo !== undefined && output.executionInfo !== null\n        ? deserializeAws_json1_1ExportTaskExecutionInfo(output.executionInfo, context)\n        : undefined,\n    from: output.from !== undefined && output.from !== null ? output.from : undefined,\n    logGroupName: output.logGroupName !== undefined && output.logGroupName !== null ? output.logGroupName : undefined,\n    status:\n      output.status !== undefined && output.status !== null\n        ? deserializeAws_json1_1ExportTaskStatus(output.status, context)\n        : undefined,\n    taskId: output.taskId !== undefined && output.taskId !== null ? output.taskId : undefined,\n    taskName: output.taskName !== undefined && output.taskName !== null ? output.taskName : undefined,\n    to: output.to !== undefined && output.to !== null ? output.to : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1ExportTaskExecutionInfo = (\n  output: any,\n  context: __SerdeContext\n): ExportTaskExecutionInfo => {\n  return {\n    completionTime:\n      output.completionTime !== undefined && output.completionTime !== null ? output.completionTime : undefined,\n    creationTime: output.creationTime !== undefined && output.creationTime !== null ? output.creationTime : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1ExportTasks = (output: any, context: __SerdeContext): ExportTask[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_json1_1ExportTask(entry, context);\n    });\n};\n\nconst deserializeAws_json1_1ExportTaskStatus = (output: any, context: __SerdeContext): ExportTaskStatus => {\n  return {\n    code: output.code !== undefined && output.code !== null ? output.code : undefined,\n    message: output.message !== undefined && output.message !== null ? output.message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1ExtractedValues = (output: any, context: __SerdeContext): { [key: string]: string } => {\n  return Object.entries(output).reduce((acc: { [key: string]: string }, [key, value]: [string, any]) => {\n    if (value === null) {\n      return acc;\n    }\n    return {\n      ...acc,\n      [key]: value,\n    };\n  }, {});\n};\n\nconst deserializeAws_json1_1FilteredLogEvent = (output: any, context: __SerdeContext): FilteredLogEvent => {\n  return {\n    eventId: output.eventId !== undefined && output.eventId !== null ? output.eventId : undefined,\n    ingestionTime:\n      output.ingestionTime !== undefined && output.ingestionTime !== null ? output.ingestionTime : undefined,\n    logStreamName:\n      output.logStreamName !== undefined && output.logStreamName !== null ? output.logStreamName : undefined,\n    message: output.message !== undefined && output.message !== null ? output.message : undefined,\n    timestamp: output.timestamp !== undefined && output.timestamp !== null ? output.timestamp : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1FilteredLogEvents = (output: any, context: __SerdeContext): FilteredLogEvent[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_json1_1FilteredLogEvent(entry, context);\n    });\n};\n\nconst deserializeAws_json1_1FilterLogEventsResponse = (\n  output: any,\n  context: __SerdeContext\n): FilterLogEventsResponse => {\n  return {\n    events:\n      output.events !== undefined && output.events !== null\n        ? deserializeAws_json1_1FilteredLogEvents(output.events, context)\n        : undefined,\n    nextToken: output.nextToken !== undefined && output.nextToken !== null ? output.nextToken : undefined,\n    searchedLogStreams:\n      output.searchedLogStreams !== undefined && output.searchedLogStreams !== null\n        ? deserializeAws_json1_1SearchedLogStreams(output.searchedLogStreams, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1GetLogEventsResponse = (output: any, context: __SerdeContext): GetLogEventsResponse => {\n  return {\n    events:\n      output.events !== undefined && output.events !== null\n        ? deserializeAws_json1_1OutputLogEvents(output.events, context)\n        : undefined,\n    nextBackwardToken:\n      output.nextBackwardToken !== undefined && output.nextBackwardToken !== null\n        ? output.nextBackwardToken\n        : undefined,\n    nextForwardToken:\n      output.nextForwardToken !== undefined && output.nextForwardToken !== null ? output.nextForwardToken : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1GetLogGroupFieldsResponse = (\n  output: any,\n  context: __SerdeContext\n): GetLogGroupFieldsResponse => {\n  return {\n    logGroupFields:\n      output.logGroupFields !== undefined && output.logGroupFields !== null\n        ? deserializeAws_json1_1LogGroupFieldList(output.logGroupFields, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1GetLogRecordResponse = (output: any, context: __SerdeContext): GetLogRecordResponse => {\n  return {\n    logRecord:\n      output.logRecord !== undefined && output.logRecord !== null\n        ? deserializeAws_json1_1LogRecord(output.logRecord, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1GetQueryResultsResponse = (\n  output: any,\n  context: __SerdeContext\n): GetQueryResultsResponse => {\n  return {\n    results:\n      output.results !== undefined && output.results !== null\n        ? deserializeAws_json1_1QueryResults(output.results, context)\n        : undefined,\n    statistics:\n      output.statistics !== undefined && output.statistics !== null\n        ? deserializeAws_json1_1QueryStatistics(output.statistics, context)\n        : undefined,\n    status: output.status !== undefined && output.status !== null ? output.status : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1InvalidOperationException = (\n  output: any,\n  context: __SerdeContext\n): InvalidOperationException => {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1InvalidParameterException = (\n  output: any,\n  context: __SerdeContext\n): InvalidParameterException => {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1InvalidSequenceTokenException = (\n  output: any,\n  context: __SerdeContext\n): InvalidSequenceTokenException => {\n  return {\n    expectedSequenceToken:\n      output.expectedSequenceToken !== undefined && output.expectedSequenceToken !== null\n        ? output.expectedSequenceToken\n        : undefined,\n    message: output.message !== undefined && output.message !== null ? output.message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1LimitExceededException = (output: any, context: __SerdeContext): LimitExceededException => {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1ListTagsLogGroupResponse = (\n  output: any,\n  context: __SerdeContext\n): ListTagsLogGroupResponse => {\n  return {\n    tags:\n      output.tags !== undefined && output.tags !== null ? deserializeAws_json1_1Tags(output.tags, context) : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1LogGroup = (output: any, context: __SerdeContext): LogGroup => {\n  return {\n    arn: output.arn !== undefined && output.arn !== null ? output.arn : undefined,\n    creationTime: output.creationTime !== undefined && output.creationTime !== null ? output.creationTime : undefined,\n    kmsKeyId: output.kmsKeyId !== undefined && output.kmsKeyId !== null ? output.kmsKeyId : undefined,\n    logGroupName: output.logGroupName !== undefined && output.logGroupName !== null ? output.logGroupName : undefined,\n    metricFilterCount:\n      output.metricFilterCount !== undefined && output.metricFilterCount !== null\n        ? output.metricFilterCount\n        : undefined,\n    retentionInDays:\n      output.retentionInDays !== undefined && output.retentionInDays !== null ? output.retentionInDays : undefined,\n    storedBytes: output.storedBytes !== undefined && output.storedBytes !== null ? output.storedBytes : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1LogGroupField = (output: any, context: __SerdeContext): LogGroupField => {\n  return {\n    name: output.name !== undefined && output.name !== null ? output.name : undefined,\n    percent: output.percent !== undefined && output.percent !== null ? output.percent : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1LogGroupFieldList = (output: any, context: __SerdeContext): LogGroupField[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_json1_1LogGroupField(entry, context);\n    });\n};\n\nconst deserializeAws_json1_1LogGroupNames = (output: any, context: __SerdeContext): string[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return entry;\n    });\n};\n\nconst deserializeAws_json1_1LogGroups = (output: any, context: __SerdeContext): LogGroup[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_json1_1LogGroup(entry, context);\n    });\n};\n\nconst deserializeAws_json1_1LogRecord = (output: any, context: __SerdeContext): { [key: string]: string } => {\n  return Object.entries(output).reduce((acc: { [key: string]: string }, [key, value]: [string, any]) => {\n    if (value === null) {\n      return acc;\n    }\n    return {\n      ...acc,\n      [key]: value,\n    };\n  }, {});\n};\n\nconst deserializeAws_json1_1LogStream = (output: any, context: __SerdeContext): LogStream => {\n  return {\n    arn: output.arn !== undefined && output.arn !== null ? output.arn : undefined,\n    creationTime: output.creationTime !== undefined && output.creationTime !== null ? output.creationTime : undefined,\n    firstEventTimestamp:\n      output.firstEventTimestamp !== undefined && output.firstEventTimestamp !== null\n        ? output.firstEventTimestamp\n        : undefined,\n    lastEventTimestamp:\n      output.lastEventTimestamp !== undefined && output.lastEventTimestamp !== null\n        ? output.lastEventTimestamp\n        : undefined,\n    lastIngestionTime:\n      output.lastIngestionTime !== undefined && output.lastIngestionTime !== null\n        ? output.lastIngestionTime\n        : undefined,\n    logStreamName:\n      output.logStreamName !== undefined && output.logStreamName !== null ? output.logStreamName : undefined,\n    storedBytes: output.storedBytes !== undefined && output.storedBytes !== null ? output.storedBytes : undefined,\n    uploadSequenceToken:\n      output.uploadSequenceToken !== undefined && output.uploadSequenceToken !== null\n        ? output.uploadSequenceToken\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1LogStreams = (output: any, context: __SerdeContext): LogStream[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_json1_1LogStream(entry, context);\n    });\n};\n\nconst deserializeAws_json1_1MalformedQueryException = (\n  output: any,\n  context: __SerdeContext\n): MalformedQueryException => {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined,\n    queryCompileError:\n      output.queryCompileError !== undefined && output.queryCompileError !== null\n        ? deserializeAws_json1_1QueryCompileError(output.queryCompileError, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1MetricFilter = (output: any, context: __SerdeContext): MetricFilter => {\n  return {\n    creationTime: output.creationTime !== undefined && output.creationTime !== null ? output.creationTime : undefined,\n    filterName: output.filterName !== undefined && output.filterName !== null ? output.filterName : undefined,\n    filterPattern:\n      output.filterPattern !== undefined && output.filterPattern !== null ? output.filterPattern : undefined,\n    logGroupName: output.logGroupName !== undefined && output.logGroupName !== null ? output.logGroupName : undefined,\n    metricTransformations:\n      output.metricTransformations !== undefined && output.metricTransformations !== null\n        ? deserializeAws_json1_1MetricTransformations(output.metricTransformations, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1MetricFilterMatches = (output: any, context: __SerdeContext): MetricFilterMatchRecord[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_json1_1MetricFilterMatchRecord(entry, context);\n    });\n};\n\nconst deserializeAws_json1_1MetricFilterMatchRecord = (\n  output: any,\n  context: __SerdeContext\n): MetricFilterMatchRecord => {\n  return {\n    eventMessage: output.eventMessage !== undefined && output.eventMessage !== null ? output.eventMessage : undefined,\n    eventNumber: output.eventNumber !== undefined && output.eventNumber !== null ? output.eventNumber : undefined,\n    extractedValues:\n      output.extractedValues !== undefined && output.extractedValues !== null\n        ? deserializeAws_json1_1ExtractedValues(output.extractedValues, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1MetricFilters = (output: any, context: __SerdeContext): MetricFilter[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_json1_1MetricFilter(entry, context);\n    });\n};\n\nconst deserializeAws_json1_1MetricTransformation = (output: any, context: __SerdeContext): MetricTransformation => {\n  return {\n    defaultValue: output.defaultValue !== undefined && output.defaultValue !== null ? output.defaultValue : undefined,\n    metricName: output.metricName !== undefined && output.metricName !== null ? output.metricName : undefined,\n    metricNamespace:\n      output.metricNamespace !== undefined && output.metricNamespace !== null ? output.metricNamespace : undefined,\n    metricValue: output.metricValue !== undefined && output.metricValue !== null ? output.metricValue : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1MetricTransformations = (output: any, context: __SerdeContext): MetricTransformation[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_json1_1MetricTransformation(entry, context);\n    });\n};\n\nconst deserializeAws_json1_1OperationAbortedException = (\n  output: any,\n  context: __SerdeContext\n): OperationAbortedException => {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1OutputLogEvent = (output: any, context: __SerdeContext): OutputLogEvent => {\n  return {\n    ingestionTime:\n      output.ingestionTime !== undefined && output.ingestionTime !== null ? output.ingestionTime : undefined,\n    message: output.message !== undefined && output.message !== null ? output.message : undefined,\n    timestamp: output.timestamp !== undefined && output.timestamp !== null ? output.timestamp : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1OutputLogEvents = (output: any, context: __SerdeContext): OutputLogEvent[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_json1_1OutputLogEvent(entry, context);\n    });\n};\n\nconst deserializeAws_json1_1PutDestinationResponse = (output: any, context: __SerdeContext): PutDestinationResponse => {\n  return {\n    destination:\n      output.destination !== undefined && output.destination !== null\n        ? deserializeAws_json1_1Destination(output.destination, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1PutLogEventsResponse = (output: any, context: __SerdeContext): PutLogEventsResponse => {\n  return {\n    nextSequenceToken:\n      output.nextSequenceToken !== undefined && output.nextSequenceToken !== null\n        ? output.nextSequenceToken\n        : undefined,\n    rejectedLogEventsInfo:\n      output.rejectedLogEventsInfo !== undefined && output.rejectedLogEventsInfo !== null\n        ? deserializeAws_json1_1RejectedLogEventsInfo(output.rejectedLogEventsInfo, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1PutQueryDefinitionResponse = (\n  output: any,\n  context: __SerdeContext\n): PutQueryDefinitionResponse => {\n  return {\n    queryDefinitionId:\n      output.queryDefinitionId !== undefined && output.queryDefinitionId !== null\n        ? output.queryDefinitionId\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1PutResourcePolicyResponse = (\n  output: any,\n  context: __SerdeContext\n): PutResourcePolicyResponse => {\n  return {\n    resourcePolicy:\n      output.resourcePolicy !== undefined && output.resourcePolicy !== null\n        ? deserializeAws_json1_1ResourcePolicy(output.resourcePolicy, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1QueryCompileError = (output: any, context: __SerdeContext): QueryCompileError => {\n  return {\n    location:\n      output.location !== undefined && output.location !== null\n        ? deserializeAws_json1_1QueryCompileErrorLocation(output.location, context)\n        : undefined,\n    message: output.message !== undefined && output.message !== null ? output.message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1QueryCompileErrorLocation = (\n  output: any,\n  context: __SerdeContext\n): QueryCompileErrorLocation => {\n  return {\n    endCharOffset:\n      output.endCharOffset !== undefined && output.endCharOffset !== null ? output.endCharOffset : undefined,\n    startCharOffset:\n      output.startCharOffset !== undefined && output.startCharOffset !== null ? output.startCharOffset : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1QueryDefinition = (output: any, context: __SerdeContext): QueryDefinition => {\n  return {\n    lastModified: output.lastModified !== undefined && output.lastModified !== null ? output.lastModified : undefined,\n    logGroupNames:\n      output.logGroupNames !== undefined && output.logGroupNames !== null\n        ? deserializeAws_json1_1LogGroupNames(output.logGroupNames, context)\n        : undefined,\n    name: output.name !== undefined && output.name !== null ? output.name : undefined,\n    queryDefinitionId:\n      output.queryDefinitionId !== undefined && output.queryDefinitionId !== null\n        ? output.queryDefinitionId\n        : undefined,\n    queryString: output.queryString !== undefined && output.queryString !== null ? output.queryString : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1QueryDefinitionList = (output: any, context: __SerdeContext): QueryDefinition[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_json1_1QueryDefinition(entry, context);\n    });\n};\n\nconst deserializeAws_json1_1QueryInfo = (output: any, context: __SerdeContext): QueryInfo => {\n  return {\n    createTime: output.createTime !== undefined && output.createTime !== null ? output.createTime : undefined,\n    logGroupName: output.logGroupName !== undefined && output.logGroupName !== null ? output.logGroupName : undefined,\n    queryId: output.queryId !== undefined && output.queryId !== null ? output.queryId : undefined,\n    queryString: output.queryString !== undefined && output.queryString !== null ? output.queryString : undefined,\n    status: output.status !== undefined && output.status !== null ? output.status : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1QueryInfoList = (output: any, context: __SerdeContext): QueryInfo[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_json1_1QueryInfo(entry, context);\n    });\n};\n\nconst deserializeAws_json1_1QueryResults = (output: any, context: __SerdeContext): ResultField[][] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_json1_1ResultRows(entry, context);\n    });\n};\n\nconst deserializeAws_json1_1QueryStatistics = (output: any, context: __SerdeContext): QueryStatistics => {\n  return {\n    bytesScanned: output.bytesScanned !== undefined && output.bytesScanned !== null ? output.bytesScanned : undefined,\n    recordsMatched:\n      output.recordsMatched !== undefined && output.recordsMatched !== null ? output.recordsMatched : undefined,\n    recordsScanned:\n      output.recordsScanned !== undefined && output.recordsScanned !== null ? output.recordsScanned : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1RejectedLogEventsInfo = (output: any, context: __SerdeContext): RejectedLogEventsInfo => {\n  return {\n    expiredLogEventEndIndex:\n      output.expiredLogEventEndIndex !== undefined && output.expiredLogEventEndIndex !== null\n        ? output.expiredLogEventEndIndex\n        : undefined,\n    tooNewLogEventStartIndex:\n      output.tooNewLogEventStartIndex !== undefined && output.tooNewLogEventStartIndex !== null\n        ? output.tooNewLogEventStartIndex\n        : undefined,\n    tooOldLogEventEndIndex:\n      output.tooOldLogEventEndIndex !== undefined && output.tooOldLogEventEndIndex !== null\n        ? output.tooOldLogEventEndIndex\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1ResourceAlreadyExistsException = (\n  output: any,\n  context: __SerdeContext\n): ResourceAlreadyExistsException => {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1ResourceNotFoundException = (\n  output: any,\n  context: __SerdeContext\n): ResourceNotFoundException => {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1ResourcePolicies = (output: any, context: __SerdeContext): ResourcePolicy[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_json1_1ResourcePolicy(entry, context);\n    });\n};\n\nconst deserializeAws_json1_1ResourcePolicy = (output: any, context: __SerdeContext): ResourcePolicy => {\n  return {\n    lastUpdatedTime:\n      output.lastUpdatedTime !== undefined && output.lastUpdatedTime !== null ? output.lastUpdatedTime : undefined,\n    policyDocument:\n      output.policyDocument !== undefined && output.policyDocument !== null ? output.policyDocument : undefined,\n    policyName: output.policyName !== undefined && output.policyName !== null ? output.policyName : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1ResultField = (output: any, context: __SerdeContext): ResultField => {\n  return {\n    field: output.field !== undefined && output.field !== null ? output.field : undefined,\n    value: output.value !== undefined && output.value !== null ? output.value : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1ResultRows = (output: any, context: __SerdeContext): ResultField[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_json1_1ResultField(entry, context);\n    });\n};\n\nconst deserializeAws_json1_1SearchedLogStream = (output: any, context: __SerdeContext): SearchedLogStream => {\n  return {\n    logStreamName:\n      output.logStreamName !== undefined && output.logStreamName !== null ? output.logStreamName : undefined,\n    searchedCompletely:\n      output.searchedCompletely !== undefined && output.searchedCompletely !== null\n        ? output.searchedCompletely\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1SearchedLogStreams = (output: any, context: __SerdeContext): SearchedLogStream[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_json1_1SearchedLogStream(entry, context);\n    });\n};\n\nconst deserializeAws_json1_1ServiceUnavailableException = (\n  output: any,\n  context: __SerdeContext\n): ServiceUnavailableException => {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1StartQueryResponse = (output: any, context: __SerdeContext): StartQueryResponse => {\n  return {\n    queryId: output.queryId !== undefined && output.queryId !== null ? output.queryId : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1StopQueryResponse = (output: any, context: __SerdeContext): StopQueryResponse => {\n  return {\n    success: output.success !== undefined && output.success !== null ? output.success : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1SubscriptionFilter = (output: any, context: __SerdeContext): SubscriptionFilter => {\n  return {\n    creationTime: output.creationTime !== undefined && output.creationTime !== null ? output.creationTime : undefined,\n    destinationArn:\n      output.destinationArn !== undefined && output.destinationArn !== null ? output.destinationArn : undefined,\n    distribution: output.distribution !== undefined && output.distribution !== null ? output.distribution : undefined,\n    filterName: output.filterName !== undefined && output.filterName !== null ? output.filterName : undefined,\n    filterPattern:\n      output.filterPattern !== undefined && output.filterPattern !== null ? output.filterPattern : undefined,\n    logGroupName: output.logGroupName !== undefined && output.logGroupName !== null ? output.logGroupName : undefined,\n    roleArn: output.roleArn !== undefined && output.roleArn !== null ? output.roleArn : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1SubscriptionFilters = (output: any, context: __SerdeContext): SubscriptionFilter[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_json1_1SubscriptionFilter(entry, context);\n    });\n};\n\nconst deserializeAws_json1_1Tags = (output: any, context: __SerdeContext): { [key: string]: string } => {\n  return Object.entries(output).reduce((acc: { [key: string]: string }, [key, value]: [string, any]) => {\n    if (value === null) {\n      return acc;\n    }\n    return {\n      ...acc,\n      [key]: value,\n    };\n  }, {});\n};\n\nconst deserializeAws_json1_1TestMetricFilterResponse = (\n  output: any,\n  context: __SerdeContext\n): TestMetricFilterResponse => {\n  return {\n    matches:\n      output.matches !== undefined && output.matches !== null\n        ? deserializeAws_json1_1MetricFilterMatches(output.matches, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1UnrecognizedClientException = (\n  output: any,\n  context: __SerdeContext\n): UnrecognizedClientException => {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined,\n  } as any;\n};\n\nconst deserializeMetadata = (output: __HttpResponse): __ResponseMetadata => ({\n  httpStatusCode: output.statusCode,\n  requestId: output.headers[\"x-amzn-requestid\"] ?? output.headers[\"x-amzn-request-id\"],\n  extendedRequestId: output.headers[\"x-amz-id-2\"],\n  cfId: output.headers[\"x-amz-cf-id\"],\n});\n\n// Collect low-level response body stream to Uint8Array.\nconst collectBody = (streamBody: any = new Uint8Array(), context: __SerdeContext): Promise<Uint8Array> => {\n  if (streamBody instanceof Uint8Array) {\n    return Promise.resolve(streamBody);\n  }\n  return context.streamCollector(streamBody) || Promise.resolve(new Uint8Array());\n};\n\n// Encode Uint8Array data into string with utf-8.\nconst collectBodyString = (streamBody: any, context: __SerdeContext): Promise<string> =>\n  collectBody(streamBody, context).then((body) => context.utf8Encoder(body));\n\nconst buildHttpRpcRequest = async (\n  context: __SerdeContext,\n  headers: __HeaderBag,\n  path: string,\n  resolvedHostname: string | undefined,\n  body: any\n): Promise<__HttpRequest> => {\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  const contents: any = {\n    protocol,\n    hostname,\n    port,\n    method: \"POST\",\n    path,\n    headers,\n  };\n  if (resolvedHostname !== undefined) {\n    contents.hostname = resolvedHostname;\n  }\n  if (body !== undefined) {\n    contents.body = body;\n  }\n  return new __HttpRequest(contents);\n};\n\nconst parseBody = (streamBody: any, context: __SerdeContext): any =>\n  collectBodyString(streamBody, context).then((encoded) => {\n    if (encoded.length) {\n      return JSON.parse(encoded);\n    }\n    return {};\n  });\n\n/**\n * Load an error code for the aws.rest-json-1.1 protocol.\n */\nconst loadRestJsonErrorCode = (output: __HttpResponse, data: any): string => {\n  const findKey = (object: any, key: string) => Object.keys(object).find((k) => k.toLowerCase() === key.toLowerCase());\n\n  const sanitizeErrorCode = (rawValue: string): string => {\n    let cleanValue = rawValue;\n    if (cleanValue.indexOf(\":\") >= 0) {\n      cleanValue = cleanValue.split(\":\")[0];\n    }\n    if (cleanValue.indexOf(\"#\") >= 0) {\n      cleanValue = cleanValue.split(\"#\")[1];\n    }\n    return cleanValue;\n  };\n\n  const headerKey = findKey(output.headers, \"x-amzn-errortype\");\n  if (headerKey !== undefined) {\n    return sanitizeErrorCode(output.headers[headerKey]);\n  }\n\n  if (data.code !== undefined) {\n    return sanitizeErrorCode(data.code);\n  }\n\n  if (data[\"__type\"] !== undefined) {\n    return sanitizeErrorCode(data[\"__type\"]);\n  }\n\n  return \"\";\n};\n"]},"metadata":{},"sourceType":"module"}