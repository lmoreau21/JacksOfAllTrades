{"ast":null,"code":"import { createCollection as e } from \"@radix-ui/react-collection\";\nimport { Primitive as t } from \"@radix-ui/react-primitive\";\nimport { useSize as n } from \"@radix-ui/react-use-size\";\nimport { usePrevious as r } from \"@radix-ui/react-use-previous\";\nimport { useDirection as o } from \"@radix-ui/react-use-direction\";\nimport { useControllableState as i } from \"@radix-ui/react-use-controllable-state\";\nimport { createContextScope as a } from \"@radix-ui/react-context\";\nimport { useComposedRefs as l } from \"@radix-ui/react-compose-refs\";\nimport { composeEventHandlers as d } from \"@radix-ui/primitive\";\nimport { clamp as s } from \"@radix-ui/number\";\nimport * as u from \"react\";\nimport c from \"@babel/runtime/helpers/esm/extends\";\nconst m = [\"PageUp\", \"PageDown\"],\n      f = [\"ArrowUp\", \"ArrowDown\", \"ArrowLeft\", \"ArrowRight\"],\n      p = {\n  ltr: [\"ArrowDown\", \"Home\", \"ArrowLeft\", \"PageDown\"],\n  rtl: [\"ArrowDown\", \"Home\", \"ArrowRight\", \"PageDown\"]\n},\n      [S, h, v] = e(\"Slider\"),\n      [w, g] = a(\"Slider\", [v]);\nexport { g as createSliderScope };\nconst [x, b] = w(\"Slider\");\nexport const Slider = /*#__PURE__*/u.forwardRef((e, t) => {\n  const {\n    name: n,\n    min: r = 0,\n    max: o = 100,\n    step: a = 1,\n    orientation: d = \"horizontal\",\n    disabled: p = !1,\n    minStepsBetweenThumbs: h = 0,\n    defaultValue: v = [r],\n    value: w,\n    onValueChange: g = () => {},\n    ...b\n  } = e,\n        [E, y] = u.useState(null),\n        _ = l(t, e => y(e)),\n        M = u.useRef(new Set()),\n        K = u.useRef(0),\n        T = \"horizontal\" === d,\n        k = !E || Boolean(E.closest(\"form\")),\n        C = T ? R : D,\n        [I = [], z] = i({\n    prop: w,\n    defaultProp: v,\n    onChange: e => {\n      var t;\n      null === (t = [...M.current][K.current]) || void 0 === t || t.focus(), g(e);\n    }\n  });\n\n  function A(e, t) {\n    const n = function (e) {\n      return (String(e).split(\".\")[1] || \"\").length;\n    }(a),\n          i = function (e, t) {\n      const n = Math.pow(10, t);\n      return Math.round(e * n) / n;\n    }(Math.round((e - r) / a) * a + r, n),\n          l = s(i, [r, o]);\n\n    z(function () {\n      let e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n      const n = function () {\n        let e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n        let t = arguments.length > 1 ? arguments[1] : undefined;\n        let n = arguments.length > 2 ? arguments[2] : undefined;\n        const r = [...e];\n        return r[n] = t, r.sort((e, t) => e - t);\n      }(e, l, t);\n\n      return function (e, t) {\n        if (t > 0) {\n          const n = function (e) {\n            return e.slice(0, -1).map((t, n) => e[n + 1] - t);\n          }(e);\n\n          return Math.min(...n) >= t;\n        }\n\n        return !0;\n      }(n, h * a) ? (K.current = n.indexOf(l), String(n) === String(e) ? e : n) : e;\n    });\n  }\n  /*#__PURE__*/\n\n\n  return u.createElement(x, {\n    scope: e.__scopeSlider,\n    disabled: p,\n    min: r,\n    max: o,\n    valueIndexToChangeRef: K,\n    thumbs: M.current,\n    values: I,\n    orientation: d\n  }, /*#__PURE__*/u.createElement(S.Provider, {\n    scope: e.__scopeSlider\n  }, /*#__PURE__*/u.createElement(S.Slot, {\n    scope: e.__scopeSlider\n  }, /*#__PURE__*/u.createElement(C, c({\n    \"aria-disabled\": p,\n    \"data-disabled\": p ? \"\" : void 0\n  }, b, {\n    ref: _,\n    min: r,\n    max: o,\n    onSlideStart: p ? void 0 : function (e) {\n      A(e, function (e, t) {\n        if (1 === e.length) return 0;\n        const n = e.map(e => Math.abs(e - t)),\n              r = Math.min(...n);\n        return n.indexOf(r);\n      }(I, e));\n    },\n    onSlideMove: p ? void 0 : function (e) {\n      A(e, K.current);\n    },\n    onHomeKeyDown: () => !p && A(r, 0),\n    onEndKeyDown: () => !p && A(o, I.length - 1),\n    onStepKeyDown: _ref => {\n      let {\n        event: e,\n        direction: t\n      } = _ref;\n\n      if (!p) {\n        const n = m.includes(e.key) || e.shiftKey && f.includes(e.key) ? 10 : 1,\n              r = K.current;\n        A(I[r] + a * n * t, r);\n      }\n    }\n  })))), k && I.map((e, t) => /*#__PURE__*/u.createElement(P, {\n    key: t,\n    name: n ? n + (I.length > 1 ? \"[]\" : \"\") : void 0,\n    value: e\n  })));\n});\n/*#__PURE__*/\n\nconst [E, y] = w(\"Slider\", {\n  startEdge: \"left\",\n  endEdge: \"right\",\n  size: \"width\",\n  direction: 1\n}),\n      R = /*#__PURE__*/u.forwardRef((e, t) => {\n  const {\n    min: n,\n    max: r,\n    dir: i,\n    onSlideStart: a,\n    onSlideMove: d,\n    onStepKeyDown: s,\n    ...m\n  } = e,\n        [f, S] = u.useState(null),\n        h = l(t, e => S(e)),\n        v = u.useRef(),\n        w = o(f, i),\n        g = \"ltr\" === w;\n\n  function x(e) {\n    const t = v.current || f.getBoundingClientRect(),\n          o = T([0, t.width], g ? [n, r] : [r, n]);\n    return v.current = t, o(e - t.left);\n  }\n  /*#__PURE__*/\n\n\n  return u.createElement(E, {\n    scope: e.__scopeSlider,\n    startEdge: g ? \"left\" : \"right\",\n    endEdge: g ? \"right\" : \"left\",\n    direction: g ? 1 : -1,\n    size: \"width\"\n  }, /*#__PURE__*/u.createElement(_, c({\n    \"data-orientation\": \"horizontal\"\n  }, m, {\n    ref: h,\n    style: { ...m.style,\n      \"--radix-slider-thumb-transform\": \"translateX(-50%)\"\n    },\n    onSlideStart: e => {\n      const t = x(e.clientX);\n      null == a || a(t);\n    },\n    onSlideMove: e => {\n      const t = x(e.clientX);\n      null == d || d(t);\n    },\n    onSlideEnd: () => v.current = void 0,\n    onStepKeyDown: e => {\n      const t = p[w].includes(e.key);\n      null == s || s({\n        event: e,\n        direction: t ? -1 : 1\n      });\n    }\n  })));\n}),\n      D = /*#__PURE__*/u.forwardRef((e, t) => {\n  const {\n    min: n,\n    max: r,\n    onSlideStart: o,\n    onSlideMove: i,\n    onStepKeyDown: a,\n    ...d\n  } = e,\n        s = u.useRef(null),\n        m = l(t, s),\n        f = u.useRef();\n\n  function S(e) {\n    const t = f.current || s.current.getBoundingClientRect(),\n          o = T([0, t.height], [r, n]);\n    return f.current = t, o(e - t.top);\n  }\n  /*#__PURE__*/\n\n\n  return u.createElement(E, {\n    scope: e.__scopeSlider,\n    startEdge: \"bottom\",\n    endEdge: \"top\",\n    size: \"height\",\n    direction: 1\n  }, /*#__PURE__*/u.createElement(_, c({\n    \"data-orientation\": \"vertical\"\n  }, d, {\n    ref: m,\n    style: { ...d.style,\n      \"--radix-slider-thumb-transform\": \"translateY(50%)\"\n    },\n    onSlideStart: e => {\n      const t = S(e.clientY);\n      null == o || o(t);\n    },\n    onSlideMove: e => {\n      const t = S(e.clientY);\n      null == i || i(t);\n    },\n    onSlideEnd: () => f.current = void 0,\n    onStepKeyDown: e => {\n      const t = p.ltr.includes(e.key);\n      null == a || a({\n        event: e,\n        direction: t ? -1 : 1\n      });\n    }\n  })));\n}),\n      _ = /*#__PURE__*/u.forwardRef((e, n) => {\n  const {\n    __scopeSlider: r,\n    onSlideStart: o,\n    onSlideMove: i,\n    onSlideEnd: a,\n    onHomeKeyDown: l,\n    onEndKeyDown: s,\n    onStepKeyDown: p,\n    ...S\n  } = e,\n        h = b(\"Slider\", r);\n  /*#__PURE__*/\n\n  return u.createElement(t.span, c({}, S, {\n    ref: n,\n    onKeyDown: d(e.onKeyDown, e => {\n      \"Home\" === e.key ? (l(e), e.preventDefault()) : \"End\" === e.key ? (s(e), e.preventDefault()) : m.concat(f).includes(e.key) && (p(e), e.preventDefault());\n    }),\n    onPointerDown: d(e.onPointerDown, e => {\n      const t = e.target;\n      t.setPointerCapture(e.pointerId), e.preventDefault(), h.thumbs.has(t) ? t.focus() : o(e);\n    }),\n    onPointerMove: d(e.onPointerMove, e => {\n      e.target.hasPointerCapture(e.pointerId) && i(e);\n    }),\n    onPointerUp: d(e.onPointerUp, e => {\n      const t = e.target;\n      t.hasPointerCapture(e.pointerId) && (t.releasePointerCapture(e.pointerId), a(e));\n    })\n  }));\n});\n\nexport const SliderTrack = /*#__PURE__*/u.forwardRef((e, n) => {\n  const {\n    __scopeSlider: r,\n    ...o\n  } = e,\n        i = b(\"SliderTrack\", r);\n  /*#__PURE__*/\n\n  return u.createElement(t.span, c({\n    \"data-disabled\": i.disabled ? \"\" : void 0,\n    \"data-orientation\": i.orientation\n  }, o, {\n    ref: n\n  }));\n});\n/*#__PURE__*/\n\nexport const SliderRange = /*#__PURE__*/u.forwardRef((e, n) => {\n  const {\n    __scopeSlider: r,\n    ...o\n  } = e,\n        i = b(\"SliderRange\", r),\n        a = y(\"SliderRange\", r),\n        d = u.useRef(null),\n        s = l(n, d),\n        m = i.values.length,\n        f = i.values.map(e => K(e, i.min, i.max)),\n        p = m > 1 ? Math.min(...f) : 0,\n        S = 100 - Math.max(...f);\n  /*#__PURE__*/\n\n  return u.createElement(t.span, c({\n    \"data-orientation\": i.orientation,\n    \"data-disabled\": i.disabled ? \"\" : void 0\n  }, o, {\n    ref: s,\n    style: { ...e.style,\n      [a.startEdge]: p + \"%\",\n      [a.endEdge]: S + \"%\"\n    }\n  }));\n});\n/*#__PURE__*/\n\nexport const SliderThumb = /*#__PURE__*/u.forwardRef((e, t) => {\n  const n = h(e.__scopeSlider),\n        [r, o] = u.useState(null),\n        i = l(t, e => o(e)),\n        a = u.useMemo(() => r ? n().findIndex(e => e.ref.current === r) : -1, [n, r]);\n  /*#__PURE__*/\n\n  return u.createElement(M, c({}, e, {\n    ref: i,\n    index: a\n  }));\n});\n\nconst M = /*#__PURE__*/u.forwardRef((e, r) => {\n  const {\n    __scopeSlider: o,\n    index: i,\n    ...a\n  } = e,\n        s = b(\"SliderThumb\", o),\n        m = y(\"SliderThumb\", o),\n        [f, p] = u.useState(null),\n        h = l(r, e => p(e)),\n        v = n(f),\n        w = s.values[i],\n        g = void 0 === w ? 0 : K(w, s.min, s.max),\n        x = function (e, t) {\n    return t > 2 ? `Value ${e + 1} of ${t}` : 2 === t ? [\"Minimum\", \"Maximum\"][e] : void 0;\n  }(i, s.values.length),\n        E = null == v ? void 0 : v[m.size],\n        R = E ? function (e, t, n) {\n    const r = e / 2,\n          o = T([0, 50], [0, r]);\n    return (r - o(t) * n) * n;\n  }(E, g, m.direction) : 0;\n\n  return u.useEffect(() => {\n    if (f) return s.thumbs.add(f), () => {\n      s.thumbs.delete(f);\n    };\n  }, [f, s.thumbs]), /*#__PURE__*/u.createElement(\"span\", {\n    style: {\n      transform: \"var(--radix-slider-thumb-transform)\",\n      position: \"absolute\",\n      [m.startEdge]: `calc(${g}% + ${R}px)`\n    }\n  }, /*#__PURE__*/u.createElement(S.ItemSlot, {\n    scope: e.__scopeSlider\n  }, /*#__PURE__*/u.createElement(t.span, c({\n    role: \"slider\",\n    \"aria-label\": e[\"aria-label\"] || x,\n    \"aria-valuemin\": s.min,\n    \"aria-valuenow\": w,\n    \"aria-valuemax\": s.max,\n    \"aria-orientation\": s.orientation,\n    \"data-orientation\": s.orientation,\n    \"data-disabled\": s.disabled ? \"\" : void 0,\n    tabIndex: s.disabled ? void 0 : 0\n  }, a, {\n    ref: h,\n    style: void 0 === w ? {\n      display: \"none\"\n    } : e.style,\n    onFocus: d(e.onFocus, () => {\n      s.valueIndexToChangeRef.current = i;\n    })\n  }))));\n}),\n      P = e => {\n  const {\n    value: t,\n    ...n\n  } = e,\n        o = u.useRef(null),\n        i = r(t);\n  return u.useEffect(() => {\n    const e = o.current,\n          n = window.HTMLInputElement.prototype,\n          r = Object.getOwnPropertyDescriptor(n, \"value\").set;\n\n    if (i !== t && r) {\n      const n = new Event(\"input\", {\n        bubbles: !0\n      });\n      r.call(e, t), e.dispatchEvent(n);\n    }\n  }, [i, t]), /*#__PURE__*/u.createElement(\"input\", c({\n    style: {\n      display: \"none\"\n    }\n  }, n, {\n    ref: o,\n    defaultValue: t\n  }));\n};\n/*#__PURE__*/\n\n\nfunction K(e, t, n) {\n  return 100 / (n - t) * (e - t);\n}\n\nfunction T(e, t) {\n  return n => {\n    if (e[0] === e[1] || t[0] === t[1]) return t[0];\n    const r = (t[1] - t[0]) / (e[1] - e[0]);\n    return t[0] + r * (n - e[0]);\n  };\n}\n\nexport const Root = Slider;\nexport const Track = SliderTrack;\nexport const Range = SliderRange;\nexport const Thumb = SliderThumb;","map":{"version":3,"mappings":"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","names":["PAGE_KEYS","ARROW_KEYS","BACK_KEYS","ltr","rtl","Collection","useCollection","createCollectionScope","createCollection","createSliderContext","createSliderScope","createContextScope","SliderProvider","useSliderContext","Slider","React","forwardRef","props","forwardedRef","name","min","max","step","orientation","disabled","minStepsBetweenThumbs","defaultValue","value","onValueChange","sliderProps","slider","setSlider","useState","composedRefs","useComposedRefs","node","thumbRefs","useRef","Set","valueIndexToChangeRef","isHorizontal","isFormControl","Boolean","closest","SliderOrientation","SliderHorizontal","SliderVertical","values","setValues","useControllableState","prop","defaultProp","onChange","current","_thumbs$valueIndexToC","focus","updateValues","atIndex","decimalCount","String","split","length","getDecimalCount","snapToStep","rounder","Math","pow","round","roundValue","nextValue","clamp","prevValues","nextValues","sort","a","b","getNextSortedValues","minStepsBetweenValues","stepsBetweenValues","slice","map","index","getStepsBetweenValues","hasMinStepsBetweenValues","indexOf","_react","$a68403ced9538b15d14f377d3c557e$var$SliderProvider","scope","__scopeSlider","thumbs","$a68403ced9538b15d14f377d3c557e$var$Collection","Provider","Slot","undefined","_babelRuntimeHelpersEsmExtends","ref","onSlideStart","distances","abs","closestDistance","getClosestValueIndex","onSlideMove","onHomeKeyDown","onEndKeyDown","onStepKeyDown","stepDirection","event","direction","multiplier","includes","key","shiftKey","$a68403ced9538b15d14f377d3c557e$var$BubbleInput","SliderOrientationProvider","useSliderOrientationContext","startEdge","endEdge","size","dir","rectRef","useDirection","isDirectionLTR","getValueFromPointer","pointerPosition","rect","getBoundingClientRect","linearScale","width","left","$a68403ced9538b15d14f377d3c557e$var$SliderOrientationProvider","$a68403ced9538b15d14f377d3c557e$var$SliderImpl","style","clientX","onSlideEnd","isBackKey","sliderRef","height","top","clientY","SliderImpl","context","Primitive","span","onKeyDown","composeEventHandlers","preventDefault","concat","onPointerDown","target","setPointerCapture","pointerId","has","onPointerMove","hasPointerCapture","onPointerUp","releasePointerCapture","SliderTrack","trackProps","SliderRange","rangeProps","valuesCount","percentages","convertValueToPercentage","offsetStart","offsetEnd","SliderThumb","getItems","thumb","setThumb","useMemo","findIndex","item","$a68403ced9538b15d14f377d3c557e$var$SliderThumbImpl","SliderThumbImpl","thumbProps","useSize","percent","label","totalValues","getLabel","orientationSize","thumbInBoundsOffset","halfWidth","offset","getThumbInBoundsOffset","useEffect","add","delete","transform","position","ItemSlot","role","tabIndex","display","onFocus","BubbleInput","inputProps","prevValue","usePrevious","input","inputProto","window","HTMLInputElement","prototype","setValue","Object","getOwnPropertyDescriptor","set","Event","bubbles","call","dispatchEvent","output","ratio","Root","Track","Range","Thumb"],"sources":["C:\\Users\\lmore\\OneDrive\\Documents\\GitHub\\JacksOfAllTrades\\jacksofalltrades\\node_modules\\@aws-amplify\\ui-react\\node_modules\\@radix-ui\\react-slider\\dist\\packages\\react\\slider\\src\\Slider.tsx"],"sourcesContent":["import * as React from 'react';\nimport { clamp } from '@radix-ui/number';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { useControllableState } from '@radix-ui/react-use-controllable-state';\nimport { useDirection } from '@radix-ui/react-use-direction';\nimport { usePrevious } from '@radix-ui/react-use-previous';\nimport { useSize } from '@radix-ui/react-use-size';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport { createCollection } from '@radix-ui/react-collection';\n\nimport type * as Radix from '@radix-ui/react-primitive';\nimport type { Scope } from '@radix-ui/react-context';\n\ntype Direction = 'ltr' | 'rtl';\n\nconst PAGE_KEYS = ['PageUp', 'PageDown'];\nconst ARROW_KEYS = ['ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight'];\n\nconst BACK_KEYS: Record<Direction, string[]> = {\n  ltr: ['ArrowDown', 'Home', 'ArrowLeft', 'PageDown'],\n  rtl: ['ArrowDown', 'Home', 'ArrowRight', 'PageDown'],\n};\n\n/* -------------------------------------------------------------------------------------------------\n * Slider\n * -----------------------------------------------------------------------------------------------*/\n\nconst SLIDER_NAME = 'Slider';\n\nconst [Collection, useCollection, createCollectionScope] =\n  createCollection<SliderThumbElement>(SLIDER_NAME);\n\ntype ScopedProps<P> = P & { __scopeSlider?: Scope };\nconst [createSliderContext, createSliderScope] = createContextScope(SLIDER_NAME, [\n  createCollectionScope,\n]);\n\ntype SliderContextValue = {\n  disabled?: boolean;\n  min: number;\n  max: number;\n  values: number[];\n  valueIndexToChangeRef: React.MutableRefObject<number>;\n  thumbs: Set<SliderThumbElement>;\n  orientation: SliderProps['orientation'];\n};\n\nconst [SliderProvider, useSliderContext] = createSliderContext<SliderContextValue>(SLIDER_NAME);\n\ntype SliderElement = SliderHorizontalElement | SliderVerticalElement;\ninterface SliderProps\n  extends Omit<\n    SliderHorizontalProps | SliderVerticalProps,\n    keyof SliderOrientationPrivateProps | 'defaultValue'\n  > {\n  name?: string;\n  disabled?: boolean;\n  orientation?: React.AriaAttributes['aria-orientation'];\n  dir?: Direction;\n  min?: number;\n  max?: number;\n  step?: number;\n  minStepsBetweenThumbs?: number;\n  value?: number[];\n  defaultValue?: number[];\n  onValueChange?(value: number[]): void;\n}\n\nconst Slider = React.forwardRef<SliderElement, SliderProps>(\n  (props: ScopedProps<SliderProps>, forwardedRef) => {\n    const {\n      name,\n      min = 0,\n      max = 100,\n      step = 1,\n      orientation = 'horizontal',\n      disabled = false,\n      minStepsBetweenThumbs = 0,\n      defaultValue = [min],\n      value,\n      onValueChange = () => {},\n      ...sliderProps\n    } = props;\n    const [slider, setSlider] = React.useState<HTMLSpanElement | null>(null);\n    const composedRefs = useComposedRefs(forwardedRef, (node) => setSlider(node));\n    const thumbRefs = React.useRef<SliderContextValue['thumbs']>(new Set());\n    const valueIndexToChangeRef = React.useRef<number>(0);\n    const isHorizontal = orientation === 'horizontal';\n    // We set this to true by default so that events bubble to forms without JS (SSR)\n    const isFormControl = slider ? Boolean(slider.closest('form')) : true;\n    const SliderOrientation = isHorizontal ? SliderHorizontal : SliderVertical;\n\n    const [values = [], setValues] = useControllableState({\n      prop: value,\n      defaultProp: defaultValue,\n      onChange: (value) => {\n        const thumbs = [...thumbRefs.current];\n        thumbs[valueIndexToChangeRef.current]?.focus();\n        onValueChange(value);\n      },\n    });\n\n    function handleSlideStart(value: number) {\n      const closestIndex = getClosestValueIndex(values, value);\n      updateValues(value, closestIndex);\n    }\n\n    function handleSlideMove(value: number) {\n      updateValues(value, valueIndexToChangeRef.current);\n    }\n\n    function updateValues(value: number, atIndex: number) {\n      const decimalCount = getDecimalCount(step);\n      const snapToStep = roundValue(Math.round((value - min) / step) * step + min, decimalCount);\n      const nextValue = clamp(snapToStep, [min, max]);\n\n      setValues((prevValues = []) => {\n        const nextValues = getNextSortedValues(prevValues, nextValue, atIndex);\n        if (hasMinStepsBetweenValues(nextValues, minStepsBetweenThumbs * step)) {\n          valueIndexToChangeRef.current = nextValues.indexOf(nextValue);\n          return String(nextValues) === String(prevValues) ? prevValues : nextValues;\n        } else {\n          return prevValues;\n        }\n      });\n    }\n\n    return (\n      <SliderProvider\n        scope={props.__scopeSlider}\n        disabled={disabled}\n        min={min}\n        max={max}\n        valueIndexToChangeRef={valueIndexToChangeRef}\n        thumbs={thumbRefs.current}\n        values={values}\n        orientation={orientation}\n      >\n        <Collection.Provider scope={props.__scopeSlider}>\n          <Collection.Slot scope={props.__scopeSlider}>\n            <SliderOrientation\n              aria-disabled={disabled}\n              data-disabled={disabled ? '' : undefined}\n              {...sliderProps}\n              ref={composedRefs}\n              min={min}\n              max={max}\n              onSlideStart={disabled ? undefined : handleSlideStart}\n              onSlideMove={disabled ? undefined : handleSlideMove}\n              onHomeKeyDown={() => !disabled && updateValues(min, 0)}\n              onEndKeyDown={() => !disabled && updateValues(max, values.length - 1)}\n              onStepKeyDown={({ event, direction: stepDirection }) => {\n                if (!disabled) {\n                  const isPageKey = PAGE_KEYS.includes(event.key);\n                  const isSkipKey = isPageKey || (event.shiftKey && ARROW_KEYS.includes(event.key));\n                  const multiplier = isSkipKey ? 10 : 1;\n                  const atIndex = valueIndexToChangeRef.current;\n                  const value = values[atIndex];\n                  const stepInDirection = step * multiplier * stepDirection;\n                  updateValues(value + stepInDirection, atIndex);\n                }\n              }}\n            />\n          </Collection.Slot>\n        </Collection.Provider>\n        {isFormControl &&\n          values.map((value, index) => (\n            <BubbleInput\n              key={index}\n              name={name ? name + (values.length > 1 ? '[]' : '') : undefined}\n              value={value}\n            />\n          ))}\n      </SliderProvider>\n    );\n  }\n);\n\nSlider.displayName = SLIDER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SliderHorizontal\n * -----------------------------------------------------------------------------------------------*/\n\nconst [SliderOrientationProvider, useSliderOrientationContext] = createSliderContext<{\n  startEdge: 'bottom' | 'left' | 'right';\n  endEdge: 'top' | 'right' | 'left';\n  size: keyof NonNullable<ReturnType<typeof useSize>>;\n  direction: number;\n}>(SLIDER_NAME, {\n  startEdge: 'left',\n  endEdge: 'right',\n  size: 'width',\n  direction: 1,\n});\n\ntype SliderOrientationPrivateProps = {\n  min: number;\n  max: number;\n  onSlideStart?(value: number): void;\n  onSlideMove?(value: number): void;\n  onHomeKeyDown(event: React.KeyboardEvent): void;\n  onEndKeyDown(event: React.KeyboardEvent): void;\n  onStepKeyDown(step: { event: React.KeyboardEvent; direction: number }): void;\n};\ninterface SliderOrientationProps\n  extends Omit<SliderImplProps, keyof SliderImplPrivateProps>,\n    SliderOrientationPrivateProps {}\n\ntype SliderHorizontalElement = SliderImplElement;\ninterface SliderHorizontalProps extends SliderOrientationProps {\n  dir?: Direction;\n}\n\nconst SliderHorizontal = React.forwardRef<SliderHorizontalElement, SliderHorizontalProps>(\n  (props: ScopedProps<SliderHorizontalProps>, forwardedRef) => {\n    const { min, max, dir, onSlideStart, onSlideMove, onStepKeyDown, ...sliderProps } = props;\n    const [slider, setSlider] = React.useState<SliderImplElement | null>(null);\n    const composedRefs = useComposedRefs(forwardedRef, (node) => setSlider(node));\n    const rectRef = React.useRef<ClientRect>();\n    const direction = useDirection(slider, dir);\n    const isDirectionLTR = direction === 'ltr';\n\n    function getValueFromPointer(pointerPosition: number) {\n      const rect = rectRef.current || slider!.getBoundingClientRect();\n      const input: [number, number] = [0, rect.width];\n      const output: [number, number] = isDirectionLTR ? [min, max] : [max, min];\n      const value = linearScale(input, output);\n\n      rectRef.current = rect;\n      return value(pointerPosition - rect.left);\n    }\n\n    return (\n      <SliderOrientationProvider\n        scope={props.__scopeSlider}\n        startEdge={isDirectionLTR ? 'left' : 'right'}\n        endEdge={isDirectionLTR ? 'right' : 'left'}\n        direction={isDirectionLTR ? 1 : -1}\n        size=\"width\"\n      >\n        <SliderImpl\n          data-orientation=\"horizontal\"\n          {...sliderProps}\n          ref={composedRefs}\n          style={{\n            ...sliderProps.style,\n            ['--radix-slider-thumb-transform' as any]: 'translateX(-50%)',\n          }}\n          onSlideStart={(event) => {\n            const value = getValueFromPointer(event.clientX);\n            onSlideStart?.(value);\n          }}\n          onSlideMove={(event) => {\n            const value = getValueFromPointer(event.clientX);\n            onSlideMove?.(value);\n          }}\n          onSlideEnd={() => (rectRef.current = undefined)}\n          onStepKeyDown={(event) => {\n            const isBackKey = BACK_KEYS[direction].includes(event.key);\n            onStepKeyDown?.({ event, direction: isBackKey ? -1 : 1 });\n          }}\n        />\n      </SliderOrientationProvider>\n    );\n  }\n);\n\n/* -------------------------------------------------------------------------------------------------\n * SliderVertical\n * -----------------------------------------------------------------------------------------------*/\n\ntype SliderVerticalElement = SliderImplElement;\ninterface SliderVerticalProps extends SliderOrientationProps {}\n\nconst SliderVertical = React.forwardRef<SliderVerticalElement, SliderVerticalProps>(\n  (props: ScopedProps<SliderVerticalProps>, forwardedRef) => {\n    const { min, max, onSlideStart, onSlideMove, onStepKeyDown, ...sliderProps } = props;\n    const sliderRef = React.useRef<SliderImplElement>(null);\n    const ref = useComposedRefs(forwardedRef, sliderRef);\n    const rectRef = React.useRef<ClientRect>();\n\n    function getValueFromPointer(pointerPosition: number) {\n      const rect = rectRef.current || sliderRef.current!.getBoundingClientRect();\n      const input: [number, number] = [0, rect.height];\n      const output: [number, number] = [max, min];\n      const value = linearScale(input, output);\n\n      rectRef.current = rect;\n      return value(pointerPosition - rect.top);\n    }\n\n    return (\n      <SliderOrientationProvider\n        scope={props.__scopeSlider}\n        startEdge=\"bottom\"\n        endEdge=\"top\"\n        size=\"height\"\n        direction={1}\n      >\n        <SliderImpl\n          data-orientation=\"vertical\"\n          {...sliderProps}\n          ref={ref}\n          style={{\n            ...sliderProps.style,\n            ['--radix-slider-thumb-transform' as any]: 'translateY(50%)',\n          }}\n          onSlideStart={(event) => {\n            const value = getValueFromPointer(event.clientY);\n            onSlideStart?.(value);\n          }}\n          onSlideMove={(event) => {\n            const value = getValueFromPointer(event.clientY);\n            onSlideMove?.(value);\n          }}\n          onSlideEnd={() => (rectRef.current = undefined)}\n          onStepKeyDown={(event) => {\n            const isBackKey = BACK_KEYS.ltr.includes(event.key);\n            onStepKeyDown?.({ event, direction: isBackKey ? -1 : 1 });\n          }}\n        />\n      </SliderOrientationProvider>\n    );\n  }\n);\n\n/* -------------------------------------------------------------------------------------------------\n * SliderImpl\n * -----------------------------------------------------------------------------------------------*/\n\ntype SliderImplElement = React.ElementRef<typeof Primitive.span>;\ntype PrimitiveDivProps = Radix.ComponentPropsWithoutRef<typeof Primitive.div>;\ntype SliderImplPrivateProps = {\n  onSlideStart(event: React.PointerEvent): void;\n  onSlideMove(event: React.PointerEvent): void;\n  onSlideEnd(event: React.PointerEvent): void;\n  onHomeKeyDown(event: React.KeyboardEvent): void;\n  onEndKeyDown(event: React.KeyboardEvent): void;\n  onStepKeyDown(event: React.KeyboardEvent): void;\n};\ninterface SliderImplProps extends PrimitiveDivProps, SliderImplPrivateProps {}\n\nconst SliderImpl = React.forwardRef<SliderImplElement, SliderImplProps>(\n  (props: ScopedProps<SliderImplProps>, forwardedRef) => {\n    const {\n      __scopeSlider,\n      onSlideStart,\n      onSlideMove,\n      onSlideEnd,\n      onHomeKeyDown,\n      onEndKeyDown,\n      onStepKeyDown,\n      ...sliderProps\n    } = props;\n    const context = useSliderContext(SLIDER_NAME, __scopeSlider);\n\n    return (\n      <Primitive.span\n        {...sliderProps}\n        ref={forwardedRef}\n        onKeyDown={composeEventHandlers(props.onKeyDown, (event) => {\n          if (event.key === 'Home') {\n            onHomeKeyDown(event);\n            // Prevent scrolling to page start\n            event.preventDefault();\n          } else if (event.key === 'End') {\n            onEndKeyDown(event);\n            // Prevent scrolling to page end\n            event.preventDefault();\n          } else if (PAGE_KEYS.concat(ARROW_KEYS).includes(event.key)) {\n            onStepKeyDown(event);\n            // Prevent scrolling for directional key presses\n            event.preventDefault();\n          }\n        })}\n        onPointerDown={composeEventHandlers(props.onPointerDown, (event) => {\n          const target = event.target as HTMLElement;\n          target.setPointerCapture(event.pointerId);\n          // Prevent browser focus behaviour because we focus a thumb manually when values change.\n          event.preventDefault();\n          // Touch devices have a delay before focusing so won't focus if touch immediately moves\n          // away from target (sliding). We want thumb to focus regardless.\n          if (context.thumbs.has(target)) {\n            target.focus();\n          } else {\n            onSlideStart(event);\n          }\n        })}\n        onPointerMove={composeEventHandlers(props.onPointerMove, (event) => {\n          const target = event.target as HTMLElement;\n          if (target.hasPointerCapture(event.pointerId)) onSlideMove(event);\n        })}\n        onPointerUp={composeEventHandlers(props.onPointerUp, (event) => {\n          const target = event.target as HTMLElement;\n          if (target.hasPointerCapture(event.pointerId)) {\n            target.releasePointerCapture(event.pointerId);\n            onSlideEnd(event);\n          }\n        })}\n      />\n    );\n  }\n);\n\n/* -------------------------------------------------------------------------------------------------\n * SliderTrack\n * -----------------------------------------------------------------------------------------------*/\n\nconst TRACK_NAME = 'SliderTrack';\n\ntype SliderTrackElement = React.ElementRef<typeof Primitive.span>;\ntype PrimitiveSpanProps = Radix.ComponentPropsWithoutRef<typeof Primitive.span>;\ninterface SliderTrackProps extends PrimitiveSpanProps {}\n\nconst SliderTrack = React.forwardRef<SliderTrackElement, SliderTrackProps>(\n  (props: ScopedProps<SliderTrackProps>, forwardedRef) => {\n    const { __scopeSlider, ...trackProps } = props;\n    const context = useSliderContext(TRACK_NAME, __scopeSlider);\n    return (\n      <Primitive.span\n        data-disabled={context.disabled ? '' : undefined}\n        data-orientation={context.orientation}\n        {...trackProps}\n        ref={forwardedRef}\n      />\n    );\n  }\n);\n\nSliderTrack.displayName = TRACK_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SliderRange\n * -----------------------------------------------------------------------------------------------*/\n\nconst RANGE_NAME = 'SliderRange';\n\ntype SliderRangeElement = React.ElementRef<typeof Primitive.span>;\ninterface SliderRangeProps extends PrimitiveSpanProps {}\n\nconst SliderRange = React.forwardRef<SliderRangeElement, SliderRangeProps>(\n  (props: ScopedProps<SliderRangeProps>, forwardedRef) => {\n    const { __scopeSlider, ...rangeProps } = props;\n    const context = useSliderContext(RANGE_NAME, __scopeSlider);\n    const orientation = useSliderOrientationContext(RANGE_NAME, __scopeSlider);\n    const ref = React.useRef<HTMLSpanElement>(null);\n    const composedRefs = useComposedRefs(forwardedRef, ref);\n    const valuesCount = context.values.length;\n    const percentages = context.values.map((value) =>\n      convertValueToPercentage(value, context.min, context.max)\n    );\n    const offsetStart = valuesCount > 1 ? Math.min(...percentages) : 0;\n    const offsetEnd = 100 - Math.max(...percentages);\n\n    return (\n      <Primitive.span\n        data-orientation={context.orientation}\n        data-disabled={context.disabled ? '' : undefined}\n        {...rangeProps}\n        ref={composedRefs}\n        style={{\n          ...props.style,\n          [orientation.startEdge]: offsetStart + '%',\n          [orientation.endEdge]: offsetEnd + '%',\n        }}\n      />\n    );\n  }\n);\n\nSliderRange.displayName = RANGE_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SliderThumb\n * -----------------------------------------------------------------------------------------------*/\n\nconst THUMB_NAME = 'SliderThumb';\n\ntype SliderThumbElement = SliderThumbImplElement;\ninterface SliderThumbProps extends Omit<SliderThumbImplProps, 'index'> {}\n\nconst SliderThumb = React.forwardRef<SliderThumbElement, SliderThumbProps>(\n  (props: ScopedProps<SliderThumbProps>, forwardedRef) => {\n    const getItems = useCollection(props.__scopeSlider);\n    const [thumb, setThumb] = React.useState<SliderThumbImplElement | null>(null);\n    const composedRefs = useComposedRefs(forwardedRef, (node) => setThumb(node));\n    const index = React.useMemo(\n      () => (thumb ? getItems().findIndex((item) => item.ref.current === thumb) : -1),\n      [getItems, thumb]\n    );\n    return <SliderThumbImpl {...props} ref={composedRefs} index={index} />;\n  }\n);\n\ntype SliderThumbImplElement = React.ElementRef<typeof Primitive.span>;\ninterface SliderThumbImplProps extends PrimitiveSpanProps {\n  index: number;\n}\n\nconst SliderThumbImpl = React.forwardRef<SliderThumbImplElement, SliderThumbImplProps>(\n  (props: ScopedProps<SliderThumbImplProps>, forwardedRef) => {\n    const { __scopeSlider, index, ...thumbProps } = props;\n    const context = useSliderContext(THUMB_NAME, __scopeSlider);\n    const orientation = useSliderOrientationContext(THUMB_NAME, __scopeSlider);\n    const [thumb, setThumb] = React.useState<HTMLSpanElement | null>(null);\n    const composedRefs = useComposedRefs(forwardedRef, (node) => setThumb(node));\n    const size = useSize(thumb);\n    // We cast because index could be `-1` which would return undefined\n    const value = context.values[index] as number | undefined;\n    const percent =\n      value === undefined ? 0 : convertValueToPercentage(value, context.min, context.max);\n    const label = getLabel(index, context.values.length);\n    const orientationSize = size?.[orientation.size];\n    const thumbInBoundsOffset = orientationSize\n      ? getThumbInBoundsOffset(orientationSize, percent, orientation.direction)\n      : 0;\n\n    React.useEffect(() => {\n      if (thumb) {\n        context.thumbs.add(thumb);\n        return () => {\n          context.thumbs.delete(thumb);\n        };\n      }\n    }, [thumb, context.thumbs]);\n\n    return (\n      <span\n        style={{\n          transform: 'var(--radix-slider-thumb-transform)',\n          position: 'absolute',\n          [orientation.startEdge]: `calc(${percent}% + ${thumbInBoundsOffset}px)`,\n        }}\n      >\n        <Collection.ItemSlot scope={props.__scopeSlider}>\n          <Primitive.span\n            role=\"slider\"\n            aria-label={props['aria-label'] || label}\n            aria-valuemin={context.min}\n            aria-valuenow={value}\n            aria-valuemax={context.max}\n            aria-orientation={context.orientation}\n            data-orientation={context.orientation}\n            data-disabled={context.disabled ? '' : undefined}\n            tabIndex={context.disabled ? undefined : 0}\n            {...thumbProps}\n            ref={composedRefs}\n            /**\n             * There will be no value on initial render while we work out the index so we hide thumbs\n             * without a value, otherwise SSR will render them in the wrong position before they\n             * snap into the correct position during hydration which would be visually jarring for\n             * slower connections.\n             */\n            style={value === undefined ? { display: 'none' } : props.style}\n            onFocus={composeEventHandlers(props.onFocus, () => {\n              context.valueIndexToChangeRef.current = index;\n            })}\n          />\n        </Collection.ItemSlot>\n      </span>\n    );\n  }\n);\n\nSliderThumb.displayName = THUMB_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst BubbleInput = (props: Radix.ComponentPropsWithoutRef<'input'>) => {\n  const { value, ...inputProps } = props;\n  const ref = React.useRef<HTMLInputElement>(null);\n  const prevValue = usePrevious(value);\n\n  // Bubble value change to parents (e.g form change event)\n  React.useEffect(() => {\n    const input = ref.current!;\n    const inputProto = window.HTMLInputElement.prototype;\n    const descriptor = Object.getOwnPropertyDescriptor(inputProto, 'value') as PropertyDescriptor;\n    const setValue = descriptor.set;\n    if (prevValue !== value && setValue) {\n      const event = new Event('input', { bubbles: true });\n      setValue.call(input, value);\n      input.dispatchEvent(event);\n    }\n  }, [prevValue, value]);\n\n  /**\n   * We purposefully do not use `type=\"hidden\"` here otherwise forms that\n   * wrap it will not be able to access its value via the FormData API.\n   *\n   * We purposefully do not add the `value` attribute here to allow the value\n   * to be set programatically and bubble to any parent form `onChange` event.\n   * Adding the `value` will cause React to consider the programatic\n   * dispatch a duplicate and it will get swallowed.\n   */\n  return <input style={{ display: 'none' }} {...inputProps} ref={ref} defaultValue={value} />;\n};\n\nfunction getNextSortedValues(prevValues: number[] = [], nextValue: number, atIndex: number) {\n  const nextValues = [...prevValues];\n  nextValues[atIndex] = nextValue;\n  return nextValues.sort((a, b) => a - b);\n}\n\nfunction convertValueToPercentage(value: number, min: number, max: number) {\n  const maxSteps = max - min;\n  const percentPerStep = 100 / maxSteps;\n  return percentPerStep * (value - min);\n}\n\n/**\n * Returns a label for each thumb when there are two or more thumbs\n */\nfunction getLabel(index: number, totalValues: number) {\n  if (totalValues > 2) {\n    return `Value ${index + 1} of ${totalValues}`;\n  } else if (totalValues === 2) {\n    return ['Minimum', 'Maximum'][index];\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * Given a `values` array and a `nextValue`, determine which value in\n * the array is closest to `nextValue` and return its index.\n *\n * @example\n * // returns 1\n * getClosestValueIndex([10, 30], 25);\n */\nfunction getClosestValueIndex(values: number[], nextValue: number) {\n  if (values.length === 1) return 0;\n  const distances = values.map((value) => Math.abs(value - nextValue));\n  const closestDistance = Math.min(...distances);\n  return distances.indexOf(closestDistance);\n}\n\n/**\n * Offsets the thumb centre point while sliding to ensure it remains\n * within the bounds of the slider when reaching the edges\n */\nfunction getThumbInBoundsOffset(width: number, left: number, direction: number) {\n  const halfWidth = width / 2;\n  const halfPercent = 50;\n  const offset = linearScale([0, halfPercent], [0, halfWidth]);\n  return (halfWidth - offset(left) * direction) * direction;\n}\n\n/**\n * Gets an array of steps between each value.\n *\n * @example\n * // returns [1, 9]\n * getStepsBetweenValues([10, 11, 20]);\n */\nfunction getStepsBetweenValues(values: number[]) {\n  return values.slice(0, -1).map((value, index) => values[index + 1] - value);\n}\n\n/**\n * Verifies the minimum steps between all values is greater than or equal\n * to the expected minimum steps.\n *\n * @example\n * // returns false\n * hasMinStepsBetweenValues([1,2,3], 2);\n *\n * @example\n * // returns true\n * hasMinStepsBetweenValues([1,2,3], 1);\n */\nfunction hasMinStepsBetweenValues(values: number[], minStepsBetweenValues: number) {\n  if (minStepsBetweenValues > 0) {\n    const stepsBetweenValues = getStepsBetweenValues(values);\n    const actualMinStepsBetweenValues = Math.min(...stepsBetweenValues);\n    return actualMinStepsBetweenValues >= minStepsBetweenValues;\n  }\n  return true;\n}\n\n// https://github.com/tmcw-up-for-adoption/simple-linear-scale/blob/master/index.js\nfunction linearScale(input: readonly [number, number], output: readonly [number, number]) {\n  return (value: number) => {\n    if (input[0] === input[1] || output[0] === output[1]) return output[0];\n    const ratio = (output[1] - output[0]) / (input[1] - input[0]);\n    return output[0] + ratio * (value - input[0]);\n  };\n}\n\nfunction getDecimalCount(value: number) {\n  return (String(value).split('.')[1] || '').length;\n}\n\nfunction roundValue(value: number, decimalCount: number) {\n  const rounder = Math.pow(10, decimalCount);\n  return Math.round(value * rounder) / rounder;\n}\n\nconst Root = Slider;\nconst Track = SliderTrack;\nconst Range = SliderRange;\nconst Thumb = SliderThumb;\n\nexport {\n  createSliderScope,\n  //\n  Slider,\n  SliderTrack,\n  SliderRange,\n  SliderThumb,\n  //\n  Root,\n  Track,\n  Range,\n  Thumb,\n};\nexport type { SliderProps, SliderTrackProps, SliderRangeProps, SliderThumbProps };\n"]},"metadata":{},"sourceType":"module"}