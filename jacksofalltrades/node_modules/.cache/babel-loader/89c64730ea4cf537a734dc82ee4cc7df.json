{"ast":null,"code":"import { __assign, __awaiter, __generator } from \"tslib\";\nimport { normalizeProvider } from \"@aws-sdk/util-middleware\";\nimport { AdaptiveRetryStrategy } from \"./AdaptiveRetryStrategy\";\nimport { DEFAULT_MAX_ATTEMPTS, DEFAULT_RETRY_MODE, RETRY_MODES } from \"./config\";\nimport { StandardRetryStrategy } from \"./StandardRetryStrategy\";\nexport var ENV_MAX_ATTEMPTS = \"AWS_MAX_ATTEMPTS\";\nexport var CONFIG_MAX_ATTEMPTS = \"max_attempts\";\nexport var NODE_MAX_ATTEMPT_CONFIG_OPTIONS = {\n  environmentVariableSelector: function environmentVariableSelector(env) {\n    var value = env[ENV_MAX_ATTEMPTS];\n    if (!value) return undefined;\n    var maxAttempt = parseInt(value);\n\n    if (Number.isNaN(maxAttempt)) {\n      throw new Error(\"Environment variable \".concat(ENV_MAX_ATTEMPTS, \" mast be a number, got \\\"\").concat(value, \"\\\"\"));\n    }\n\n    return maxAttempt;\n  },\n  configFileSelector: function configFileSelector(profile) {\n    var value = profile[CONFIG_MAX_ATTEMPTS];\n    if (!value) return undefined;\n    var maxAttempt = parseInt(value);\n\n    if (Number.isNaN(maxAttempt)) {\n      throw new Error(\"Shared config file entry \".concat(CONFIG_MAX_ATTEMPTS, \" mast be a number, got \\\"\").concat(value, \"\\\"\"));\n    }\n\n    return maxAttempt;\n  },\n  default: DEFAULT_MAX_ATTEMPTS\n};\nexport var resolveRetryConfig = function resolveRetryConfig(input) {\n  var _a;\n\n  var maxAttempts = normalizeProvider((_a = input.maxAttempts) !== null && _a !== void 0 ? _a : DEFAULT_MAX_ATTEMPTS);\n  return __assign(__assign({}, input), {\n    maxAttempts: maxAttempts,\n    retryStrategy: function retryStrategy() {\n      return __awaiter(void 0, void 0, void 0, function () {\n        var retryMode;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              if (input.retryStrategy) {\n                return [2, input.retryStrategy];\n              }\n\n              return [4, normalizeProvider(input.retryMode)()];\n\n            case 1:\n              retryMode = _a.sent();\n\n              if (retryMode === RETRY_MODES.ADAPTIVE) {\n                return [2, new AdaptiveRetryStrategy(maxAttempts)];\n              }\n\n              return [2, new StandardRetryStrategy(maxAttempts)];\n          }\n        });\n      });\n    }\n  });\n};\nexport var ENV_RETRY_MODE = \"AWS_RETRY_MODE\";\nexport var CONFIG_RETRY_MODE = \"retry_mode\";\nexport var NODE_RETRY_MODE_CONFIG_OPTIONS = {\n  environmentVariableSelector: function environmentVariableSelector(env) {\n    return env[ENV_RETRY_MODE];\n  },\n  configFileSelector: function configFileSelector(profile) {\n    return profile[CONFIG_RETRY_MODE];\n  },\n  default: DEFAULT_RETRY_MODE\n};","map":{"version":3,"names":["__assign","__awaiter","__generator","normalizeProvider","AdaptiveRetryStrategy","DEFAULT_MAX_ATTEMPTS","DEFAULT_RETRY_MODE","RETRY_MODES","StandardRetryStrategy","ENV_MAX_ATTEMPTS","CONFIG_MAX_ATTEMPTS","NODE_MAX_ATTEMPT_CONFIG_OPTIONS","environmentVariableSelector","env","value","undefined","maxAttempt","parseInt","Number","isNaN","Error","concat","configFileSelector","profile","default","resolveRetryConfig","input","_a","maxAttempts","retryStrategy","retryMode","label","sent","ADAPTIVE","ENV_RETRY_MODE","CONFIG_RETRY_MODE","NODE_RETRY_MODE_CONFIG_OPTIONS"],"sources":["C:/Users/lmore/OneDrive/Documents/GitHub/JacksOfAllTrades/jacksofalltrades/node_modules/@aws-sdk/client-lex-runtime-v2/node_modules/@aws-sdk/middleware-retry/dist-es/configurations.js"],"sourcesContent":["import { __assign, __awaiter, __generator } from \"tslib\";\nimport { normalizeProvider } from \"@aws-sdk/util-middleware\";\nimport { AdaptiveRetryStrategy } from \"./AdaptiveRetryStrategy\";\nimport { DEFAULT_MAX_ATTEMPTS, DEFAULT_RETRY_MODE, RETRY_MODES } from \"./config\";\nimport { StandardRetryStrategy } from \"./StandardRetryStrategy\";\nexport var ENV_MAX_ATTEMPTS = \"AWS_MAX_ATTEMPTS\";\nexport var CONFIG_MAX_ATTEMPTS = \"max_attempts\";\nexport var NODE_MAX_ATTEMPT_CONFIG_OPTIONS = {\n    environmentVariableSelector: function (env) {\n        var value = env[ENV_MAX_ATTEMPTS];\n        if (!value)\n            return undefined;\n        var maxAttempt = parseInt(value);\n        if (Number.isNaN(maxAttempt)) {\n            throw new Error(\"Environment variable \".concat(ENV_MAX_ATTEMPTS, \" mast be a number, got \\\"\").concat(value, \"\\\"\"));\n        }\n        return maxAttempt;\n    },\n    configFileSelector: function (profile) {\n        var value = profile[CONFIG_MAX_ATTEMPTS];\n        if (!value)\n            return undefined;\n        var maxAttempt = parseInt(value);\n        if (Number.isNaN(maxAttempt)) {\n            throw new Error(\"Shared config file entry \".concat(CONFIG_MAX_ATTEMPTS, \" mast be a number, got \\\"\").concat(value, \"\\\"\"));\n        }\n        return maxAttempt;\n    },\n    default: DEFAULT_MAX_ATTEMPTS,\n};\nexport var resolveRetryConfig = function (input) {\n    var _a;\n    var maxAttempts = normalizeProvider((_a = input.maxAttempts) !== null && _a !== void 0 ? _a : DEFAULT_MAX_ATTEMPTS);\n    return __assign(__assign({}, input), { maxAttempts: maxAttempts, retryStrategy: function () { return __awaiter(void 0, void 0, void 0, function () {\n            var retryMode;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (input.retryStrategy) {\n                            return [2, input.retryStrategy];\n                        }\n                        return [4, normalizeProvider(input.retryMode)()];\n                    case 1:\n                        retryMode = _a.sent();\n                        if (retryMode === RETRY_MODES.ADAPTIVE) {\n                            return [2, new AdaptiveRetryStrategy(maxAttempts)];\n                        }\n                        return [2, new StandardRetryStrategy(maxAttempts)];\n                }\n            });\n        }); } });\n};\nexport var ENV_RETRY_MODE = \"AWS_RETRY_MODE\";\nexport var CONFIG_RETRY_MODE = \"retry_mode\";\nexport var NODE_RETRY_MODE_CONFIG_OPTIONS = {\n    environmentVariableSelector: function (env) { return env[ENV_RETRY_MODE]; },\n    configFileSelector: function (profile) { return profile[CONFIG_RETRY_MODE]; },\n    default: DEFAULT_RETRY_MODE,\n};\n"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,WAA9B,QAAiD,OAAjD;AACA,SAASC,iBAAT,QAAkC,0BAAlC;AACA,SAASC,qBAAT,QAAsC,yBAAtC;AACA,SAASC,oBAAT,EAA+BC,kBAA/B,EAAmDC,WAAnD,QAAsE,UAAtE;AACA,SAASC,qBAAT,QAAsC,yBAAtC;AACA,OAAO,IAAIC,gBAAgB,GAAG,kBAAvB;AACP,OAAO,IAAIC,mBAAmB,GAAG,cAA1B;AACP,OAAO,IAAIC,+BAA+B,GAAG;EACzCC,2BAA2B,EAAE,qCAAUC,GAAV,EAAe;IACxC,IAAIC,KAAK,GAAGD,GAAG,CAACJ,gBAAD,CAAf;IACA,IAAI,CAACK,KAAL,EACI,OAAOC,SAAP;IACJ,IAAIC,UAAU,GAAGC,QAAQ,CAACH,KAAD,CAAzB;;IACA,IAAII,MAAM,CAACC,KAAP,CAAaH,UAAb,CAAJ,EAA8B;MAC1B,MAAM,IAAII,KAAJ,CAAU,wBAAwBC,MAAxB,CAA+BZ,gBAA/B,EAAiD,2BAAjD,EAA8EY,MAA9E,CAAqFP,KAArF,EAA4F,IAA5F,CAAV,CAAN;IACH;;IACD,OAAOE,UAAP;EACH,CAVwC;EAWzCM,kBAAkB,EAAE,4BAAUC,OAAV,EAAmB;IACnC,IAAIT,KAAK,GAAGS,OAAO,CAACb,mBAAD,CAAnB;IACA,IAAI,CAACI,KAAL,EACI,OAAOC,SAAP;IACJ,IAAIC,UAAU,GAAGC,QAAQ,CAACH,KAAD,CAAzB;;IACA,IAAII,MAAM,CAACC,KAAP,CAAaH,UAAb,CAAJ,EAA8B;MAC1B,MAAM,IAAII,KAAJ,CAAU,4BAA4BC,MAA5B,CAAmCX,mBAAnC,EAAwD,2BAAxD,EAAqFW,MAArF,CAA4FP,KAA5F,EAAmG,IAAnG,CAAV,CAAN;IACH;;IACD,OAAOE,UAAP;EACH,CApBwC;EAqBzCQ,OAAO,EAAEnB;AArBgC,CAAtC;AAuBP,OAAO,IAAIoB,kBAAkB,GAAG,SAArBA,kBAAqB,CAAUC,KAAV,EAAiB;EAC7C,IAAIC,EAAJ;;EACA,IAAIC,WAAW,GAAGzB,iBAAiB,CAAC,CAACwB,EAAE,GAAGD,KAAK,CAACE,WAAZ,MAA6B,IAA7B,IAAqCD,EAAE,KAAK,KAAK,CAAjD,GAAqDA,EAArD,GAA0DtB,oBAA3D,CAAnC;EACA,OAAOL,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAK0B,KAAL,CAAT,EAAsB;IAAEE,WAAW,EAAEA,WAAf;IAA4BC,aAAa,EAAE,yBAAY;MAAE,OAAO5B,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;QAC3I,IAAI6B,SAAJ;QACA,OAAO5B,WAAW,CAAC,IAAD,EAAO,UAAUyB,EAAV,EAAc;UACnC,QAAQA,EAAE,CAACI,KAAX;YACI,KAAK,CAAL;cACI,IAAIL,KAAK,CAACG,aAAV,EAAyB;gBACrB,OAAO,CAAC,CAAD,EAAIH,KAAK,CAACG,aAAV,CAAP;cACH;;cACD,OAAO,CAAC,CAAD,EAAI1B,iBAAiB,CAACuB,KAAK,CAACI,SAAP,CAAjB,EAAJ,CAAP;;YACJ,KAAK,CAAL;cACIA,SAAS,GAAGH,EAAE,CAACK,IAAH,EAAZ;;cACA,IAAIF,SAAS,KAAKvB,WAAW,CAAC0B,QAA9B,EAAwC;gBACpC,OAAO,CAAC,CAAD,EAAI,IAAI7B,qBAAJ,CAA0BwB,WAA1B,CAAJ,CAAP;cACH;;cACD,OAAO,CAAC,CAAD,EAAI,IAAIpB,qBAAJ,CAA0BoB,WAA1B,CAAJ,CAAP;UAXR;QAaH,CAdiB,CAAlB;MAeH,CAjByG,CAAhB;IAiBrF;EAjB4B,CAAtB,CAAf;AAkBH,CArBM;AAsBP,OAAO,IAAIM,cAAc,GAAG,gBAArB;AACP,OAAO,IAAIC,iBAAiB,GAAG,YAAxB;AACP,OAAO,IAAIC,8BAA8B,GAAG;EACxCxB,2BAA2B,EAAE,qCAAUC,GAAV,EAAe;IAAE,OAAOA,GAAG,CAACqB,cAAD,CAAV;EAA6B,CADnC;EAExCZ,kBAAkB,EAAE,4BAAUC,OAAV,EAAmB;IAAE,OAAOA,OAAO,CAACY,iBAAD,CAAd;EAAoC,CAFrC;EAGxCX,OAAO,EAAElB;AAH+B,CAArC"},"metadata":{},"sourceType":"module"}