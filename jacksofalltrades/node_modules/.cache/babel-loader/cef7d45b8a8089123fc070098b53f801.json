{"ast":null,"code":"import { __assign, __read, __rest, __spread } from \"tslib\";\n/**\n * @internal\n */\n\nexport function cloneRequest(_a) {\n  var headers = _a.headers,\n      query = _a.query,\n      rest = __rest(_a, [\"headers\", \"query\"]);\n\n  return __assign(__assign({}, rest), {\n    headers: __assign({}, headers),\n    query: query ? cloneQuery(query) : undefined\n  });\n}\n\nfunction cloneQuery(query) {\n  return Object.keys(query).reduce(function (carry, paramName) {\n    var _a;\n\n    var param = query[paramName];\n    return __assign(__assign({}, carry), (_a = {}, _a[paramName] = Array.isArray(param) ? __spread(param) : param, _a));\n  }, {});\n}","map":{"version":3,"mappings":";AAEA;;;;AAGA,OAAM,SAAUA,YAAV,CAAuBC,EAAvB,EAA+D;EAAtC,WAAO,aAAP;EAAA,IAASC,KAAK,WAAd;EAAA,IAAmBC,IAAI,cAAzB,oBAAyB,CAAvB;;EAC7B,6BACKA,IADL,GACS;IACPC,OAAO,eAAOA,OAAP,CADA;IAEPF,KAAK,EAAEA,KAAK,GAAGG,UAAU,CAACH,KAAD,CAAb,GAAuBI;EAF5B,CADT;AAKD;;AAED,SAASD,UAAT,CAAoBH,KAApB,EAA4C;EAC1C,OAAOK,MAAM,CAACC,IAAP,CAAYN,KAAZ,EAAmBO,MAAnB,CAA0B,UAACC,KAAD,EAA2BC,SAA3B,EAA4C;;;IAC3E,IAAMC,KAAK,GAAGV,KAAK,CAACS,SAAD,CAAnB;IACA,6BACKD,KADL,IACUT,YACPU,SADO,IACKE,KAAK,CAACC,OAAN,CAAcF,KAAd,IAAsBG,SAAKH,KAAL,CAAtB,GAAoCA,KADzC,EAC8CX,EAFxD;EAID,CANM,EAMJ,EANI,CAAP;AAOD","names":["cloneRequest","_a","query","rest","headers","cloneQuery","undefined","Object","keys","reduce","carry","paramName","param","Array","isArray","__spread"],"sources":["C:\\Users\\lmore\\OneDrive\\Documents\\GitHub\\JacksOfAllTrades\\jacksofalltrades\\node_modules\\@aws-sdk\\signature-v4\\src\\cloneRequest.ts"],"sourcesContent":["import { HttpRequest, QueryParameterBag } from \"@aws-sdk/types\";\n\n/**\n * @internal\n */\nexport function cloneRequest({ headers, query, ...rest }: HttpRequest): HttpRequest {\n  return {\n    ...rest,\n    headers: { ...headers },\n    query: query ? cloneQuery(query) : undefined,\n  };\n}\n\nfunction cloneQuery(query: QueryParameterBag): QueryParameterBag {\n  return Object.keys(query).reduce((carry: QueryParameterBag, paramName: string) => {\n    const param = query[paramName];\n    return {\n      ...carry,\n      [paramName]: Array.isArray(param) ? [...param] : param,\n    };\n  }, {});\n}\n"]},"metadata":{},"sourceType":"module"}