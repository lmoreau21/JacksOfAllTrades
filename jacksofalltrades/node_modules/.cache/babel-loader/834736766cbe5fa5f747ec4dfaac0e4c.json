{"ast":null,"code":"import { __assign, __awaiter, __generator, __read, __spread } from \"tslib\";\nimport { HttpRequest } from \"@aws-sdk/protocol-http\";\nimport { SPACE, UA_ESCAPE_REGEX, USER_AGENT, X_AMZ_USER_AGENT } from \"./constants\";\n/**\n * Build user agent header sections from:\n * 1. runtime-specific default user agent provider;\n * 2. custom user agent from `customUserAgent` client config;\n * 3. handler execution context set by internal SDK components;\n * The built user agent will be set to `x-amz-user-agent` header for ALL the\n * runtimes.\n * Please note that any override to the `user-agent` or `x-amz-user-agent` header\n * in the HTTP request is discouraged. Please use `customUserAgent` client\n * config or middleware setting the `userAgent` context to generate desired user\n * agent.\n */\n\nexport var userAgentMiddleware = function (options) {\n  return function (next, context) {\n    return function (args) {\n      return __awaiter(void 0, void 0, void 0, function () {\n        var request, headers, userAgent, defaultUserAgent, customUserAgent, normalUAValue;\n\n        var _a, _b;\n\n        return __generator(this, function (_c) {\n          switch (_c.label) {\n            case 0:\n              request = args.request;\n              if (!HttpRequest.isInstance(request)) return [2\n              /*return*/\n              , next(args)];\n              headers = request.headers;\n              userAgent = ((_a = context === null || context === void 0 ? void 0 : context.userAgent) === null || _a === void 0 ? void 0 : _a.map(escapeUserAgent)) || [];\n              return [4\n              /*yield*/\n              , options.defaultUserAgentProvider()];\n\n            case 1:\n              defaultUserAgent = _c.sent().map(escapeUserAgent);\n              customUserAgent = ((_b = options === null || options === void 0 ? void 0 : options.customUserAgent) === null || _b === void 0 ? void 0 : _b.map(escapeUserAgent)) || []; // Set value to AWS-specific user agent header\n\n              headers[X_AMZ_USER_AGENT] = __spread(defaultUserAgent, userAgent, customUserAgent).join(SPACE);\n              normalUAValue = __spread(defaultUserAgent.filter(function (section) {\n                return section.startsWith(\"aws-sdk-\");\n              }), customUserAgent).join(SPACE);\n\n              if (options.runtime !== \"browser\" && normalUAValue) {\n                headers[USER_AGENT] = headers[USER_AGENT] ? headers[USER_AGENT] + \" \" + normalUAValue : normalUAValue;\n              }\n\n              return [2\n              /*return*/\n              , next(__assign(__assign({}, args), {\n                request: request\n              }))];\n          }\n        });\n      });\n    };\n  };\n};\n/**\n * Escape the each pair according to https://tools.ietf.org/html/rfc5234 and join the pair with pattern `name/version`.\n * User agent name may include prefix like `md/`, `api/`, `os/` etc., we should not escape the `/` after the prefix.\n * @private\n */\n\nvar escapeUserAgent = function (_a) {\n  var _b = __read(_a, 2),\n      name = _b[0],\n      version = _b[1];\n\n  var prefixSeparatorIndex = name.indexOf(\"/\");\n  var prefix = name.substring(0, prefixSeparatorIndex); // If no prefix, prefix is just \"\"\n\n  var uaName = name.substring(prefixSeparatorIndex + 1);\n\n  if (prefix === \"api\") {\n    uaName = uaName.toLowerCase();\n  }\n\n  return [prefix, uaName, version].filter(function (item) {\n    return item && item.length > 0;\n  }).map(function (item) {\n    return item === null || item === void 0 ? void 0 : item.replace(UA_ESCAPE_REGEX, \"_\");\n  }).join(\"/\");\n};\n\nexport var getUserAgentMiddlewareOptions = {\n  name: \"getUserAgentMiddleware\",\n  step: \"build\",\n  priority: \"low\",\n  tags: [\"SET_USER_AGENT\", \"USER_AGENT\"],\n  override: true\n};\nexport var getUserAgentPlugin = function (config) {\n  return {\n    applyToStack: function (clientStack) {\n      clientStack.add(userAgentMiddleware(config), getUserAgentMiddlewareOptions);\n    }\n  };\n};","map":{"version":3,"mappings":"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","names":["HttpRequest","SPACE","UA_ESCAPE_REGEX","USER_AGENT","X_AMZ_USER_AGENT","userAgentMiddleware","options","next","context","args","request","isInstance","headers","userAgent","_a","map","escapeUserAgent","defaultUserAgentProvider","defaultUserAgent","_c","customUserAgent","_b","__spread","join","normalUAValue","filter","section","startsWith","runtime","name","version","prefixSeparatorIndex","indexOf","prefix","substring","uaName","toLowerCase","item","length","replace","getUserAgentMiddlewareOptions","step","priority","tags","override","getUserAgentPlugin","config","applyToStack","clientStack","add"],"sources":["C:\\Users\\lmore\\OneDrive\\Documents\\GitHub\\JacksOfAllTrades\\jacksofalltrades\\node_modules\\@aws-sdk\\middleware-user-agent\\src\\user-agent-middleware.ts"],"sourcesContent":["import { HttpRequest } from \"@aws-sdk/protocol-http\";\nimport {\n  AbsoluteLocation,\n  BuildHandler,\n  BuildHandlerArguments,\n  BuildHandlerOptions,\n  BuildHandlerOutput,\n  HandlerExecutionContext,\n  MetadataBearer,\n  Pluggable,\n  UserAgentPair,\n} from \"@aws-sdk/types\";\n\nimport { UserAgentResolvedConfig } from \"./configurations\";\nimport { SPACE, UA_ESCAPE_REGEX, USER_AGENT, X_AMZ_USER_AGENT } from \"./constants\";\n\n/**\n * Build user agent header sections from:\n * 1. runtime-specific default user agent provider;\n * 2. custom user agent from `customUserAgent` client config;\n * 3. handler execution context set by internal SDK components;\n * The built user agent will be set to `x-amz-user-agent` header for ALL the\n * runtimes.\n * Please note that any override to the `user-agent` or `x-amz-user-agent` header\n * in the HTTP request is discouraged. Please use `customUserAgent` client\n * config or middleware setting the `userAgent` context to generate desired user\n * agent.\n */\nexport const userAgentMiddleware = (options: UserAgentResolvedConfig) => <Output extends MetadataBearer>(\n  next: BuildHandler<any, any>,\n  context: HandlerExecutionContext\n): BuildHandler<any, any> => async (args: BuildHandlerArguments<any>): Promise<BuildHandlerOutput<Output>> => {\n  const { request } = args;\n  if (!HttpRequest.isInstance(request)) return next(args);\n  const { headers } = request;\n  const userAgent = context?.userAgent?.map(escapeUserAgent) || [];\n  const defaultUserAgent = (await options.defaultUserAgentProvider()).map(escapeUserAgent);\n  const customUserAgent = options?.customUserAgent?.map(escapeUserAgent) || [];\n  // Set value to AWS-specific user agent header\n  headers[X_AMZ_USER_AGENT] = [...defaultUserAgent, ...userAgent, ...customUserAgent].join(SPACE);\n  // Get value to be sent with non-AWS-specific user agent header.\n  const normalUAValue = [\n    ...defaultUserAgent.filter((section) => section.startsWith(\"aws-sdk-\")),\n    ...customUserAgent,\n  ].join(SPACE);\n  if (options.runtime !== \"browser\" && normalUAValue) {\n    headers[USER_AGENT] = headers[USER_AGENT] ? `${headers[USER_AGENT]} ${normalUAValue}` : normalUAValue;\n  }\n\n  return next({\n    ...args,\n    request,\n  });\n};\n\n/**\n * Escape the each pair according to https://tools.ietf.org/html/rfc5234 and join the pair with pattern `name/version`.\n * User agent name may include prefix like `md/`, `api/`, `os/` etc., we should not escape the `/` after the prefix.\n * @private\n */\nconst escapeUserAgent = ([name, version]: UserAgentPair): string => {\n  const prefixSeparatorIndex = name.indexOf(\"/\");\n  const prefix = name.substring(0, prefixSeparatorIndex); // If no prefix, prefix is just \"\"\n  let uaName = name.substring(prefixSeparatorIndex + 1);\n  if (prefix === \"api\") {\n    uaName = uaName.toLowerCase();\n  }\n  return [prefix, uaName, version]\n    .filter((item) => item && item.length > 0)\n    .map((item) => item?.replace(UA_ESCAPE_REGEX, \"_\"))\n    .join(\"/\");\n};\n\nexport const getUserAgentMiddlewareOptions: BuildHandlerOptions & AbsoluteLocation = {\n  name: \"getUserAgentMiddleware\",\n  step: \"build\",\n  priority: \"low\",\n  tags: [\"SET_USER_AGENT\", \"USER_AGENT\"],\n  override: true,\n};\n\nexport const getUserAgentPlugin = (config: UserAgentResolvedConfig): Pluggable<any, any> => ({\n  applyToStack: (clientStack) => {\n    clientStack.add(userAgentMiddleware(config), getUserAgentMiddlewareOptions);\n  },\n});\n"]},"metadata":{},"sourceType":"module"}