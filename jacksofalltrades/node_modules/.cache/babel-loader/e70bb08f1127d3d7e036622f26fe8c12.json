{"ast":null,"code":"import _defineProperty from \"C:/Users/lmore/OneDrive/Documents/GitHub/JacksOfAllTrades/jacksofalltrades/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"C:/Users/lmore/OneDrive/Documents/GitHub/JacksOfAllTrades/jacksofalltrades/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"C:/Users/lmore/OneDrive/Documents/GitHub/JacksOfAllTrades/jacksofalltrades/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport * as React from 'react';\nimport { useState, useCallback, useMemo, useContext } from 'react';\nimport { MapContext } from './map';\nexport var MountedMapsContext = React.createContext(null);\nexport var MapProvider = function MapProvider(props) {\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      maps = _useState2[0],\n      setMaps = _useState2[1];\n\n  var onMapMount = useCallback(function (map) {\n    var id = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'default';\n    setMaps(function (currMaps) {\n      if (id === 'current') {\n        throw new Error(\"'current' cannot be used as map id\");\n      }\n\n      if (currMaps[id]) {\n        throw new Error(\"Multiple maps with the same id: \".concat(id));\n      }\n\n      return _objectSpread(_objectSpread({}, currMaps), {}, _defineProperty({}, id, map));\n    });\n  }, []);\n  var onMapUnmount = useCallback(function () {\n    var id = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'default';\n    setMaps(function (currMaps) {\n      if (currMaps[id]) {\n        var nextMaps = _objectSpread({}, currMaps);\n\n        delete nextMaps[id];\n        return nextMaps;\n      }\n\n      return currMaps;\n    });\n  }, []);\n  return React.createElement(MountedMapsContext.Provider, {\n    value: {\n      maps: maps,\n      onMapMount: onMapMount,\n      onMapUnmount: onMapUnmount\n    }\n  }, props.children);\n};\nexport function useMap() {\n  var _a;\n\n  var maps = (_a = useContext(MountedMapsContext)) === null || _a === void 0 ? void 0 : _a.maps;\n  var currentMap = useContext(MapContext);\n  var mapsWithCurrent = useMemo(function () {\n    return _objectSpread(_objectSpread({}, maps), {}, {\n      current: currentMap === null || currentMap === void 0 ? void 0 : currentMap.map\n    });\n  }, [maps, currentMap]);\n  return mapsWithCurrent;\n}","map":{"version":3,"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAAQC,QAAR,EAAkBC,WAAlB,EAA+BC,OAA/B,EAAwCC,UAAxC,QAAyD,OAAzD;AAGA,SAAQC,UAAR,QAAyB,OAAzB;AAQA,OAAO,IAAMC,kBAAkB,GAAGN,KAAK,CAACO,aAAN,CAA6C,IAA7C,CAA3B;AAEP,OAAO,IAAMC,WAAW,GAA2C,SAAtDA,WAAsD,MAAK,EAAG;EACzE,gBAAwBP,QAAQ,CAAyB,EAAzB,CAAhC;EAAA;EAAA,IAAOQ,IAAP;EAAA,IAAaC,OAAb;;EAEA,IAAMC,UAAU,GAAGT,WAAW,CAAC,UAACU,GAAD,EAAwC;IAAA,IAA1BC,EAA0B,uEAAb,SAAa;IACrEH,OAAO,CAAC,kBAAQ,EAAG;MACjB,IAAIG,EAAE,KAAK,SAAX,EAAsB;QACpB,MAAM,IAAIC,KAAJ,CAAU,oCAAV,CAAN;MACD;;MACD,IAAIC,QAAQ,CAACF,EAAD,CAAZ,EAAkB;QAChB,MAAM,IAAIC,KAAJ,2CAA6CD,EAA7C,EAAN;MACD;;MACD,uCAAWE,QAAX,2BAAsBF,EAAtB,EAA2BD,GAA3B;IACD,CARM,CAAP;EASD,CAV6B,EAU3B,EAV2B,CAA9B;EAYA,IAAMI,YAAY,GAAGd,WAAW,CAAC,YAA2B;IAAA,IAA1BW,EAA0B,uEAAb,SAAa;IAC1DH,OAAO,CAAC,kBAAQ,EAAG;MACjB,IAAIK,QAAQ,CAACF,EAAD,CAAZ,EAAkB;QAChB,IAAMI,QAAQ,qBAAOF,QAAP,CAAd;;QACA,OAAOE,QAAQ,CAACJ,EAAD,CAAf;QACA,OAAOI,QAAP;MACD;;MACD,OAAOF,QAAP;IACD,CAPM,CAAP;EAQD,CAT+B,EAS7B,EAT6B,CAAhC;EAWA,OACEf,oBAACM,kBAAkB,CAACY,QAApB,EAA4B;IAC1BC,KAAK,EAAE;MACLV,IAAI,EAAJA,IADK;MAELE,UAAU,EAAVA,UAFK;MAGLK,YAAY,EAAZA;IAHK;EADmB,CAA5B,EAOGI,KAAK,CAACC,QAPT,CADF;AAWD,CArCM;AAuCP,OAAM,SAAUC,MAAV,GAAgB;;;EACpB,IAAMb,IAAI,GAAG,gBAAU,CAACH,kBAAD,CAAV,MAA8B,IAA9B,IAA8BiB,aAA9B,GAA8B,MAA9B,GAA8BA,GAAEd,IAA7C;EACA,IAAMe,UAAU,GAAGpB,UAAU,CAACC,UAAD,CAA7B;EAEA,IAAMoB,eAAe,GAAGtB,OAAO,CAAC,YAAK;IACnC,uCAAWM,IAAX;MAAiBiB,OAAO,EAAEF,UAAU,SAAV,cAAU,WAAV,GAAU,MAAV,aAAU,CAAEZ;IAAtC;EACD,CAF8B,EAE5B,CAACH,IAAD,EAAOe,UAAP,CAF4B,CAA/B;EAIA,OAAOC,eAAP;AACD","names":["React","useState","useCallback","useMemo","useContext","MapContext","MountedMapsContext","createContext","MapProvider","maps","setMaps","onMapMount","map","id","Error","currMaps","onMapUnmount","nextMaps","Provider","value","props","children","useMap","_a","currentMap","mapsWithCurrent","current"],"sources":["C:\\Users\\lmore\\OneDrive\\Documents\\GitHub\\JacksOfAllTrades\\jacksofalltrades\\node_modules\\react-map-gl\\src\\components\\use-map.tsx"],"sourcesContent":["import * as React from 'react';\nimport {useState, useCallback, useMemo, useContext} from 'react';\n\nimport {MapRef} from '../mapbox/create-ref';\nimport {MapContext} from './map';\n\ntype MountedMapsContextValue = {\n  maps: {[id: string]: MapRef};\n  onMapMount: (map: MapRef, id: string) => void;\n  onMapUnmount: (id: string) => void;\n};\n\nexport const MountedMapsContext = React.createContext<MountedMapsContextValue>(null);\n\nexport const MapProvider: React.FC<{children?: React.ReactNode}> = props => {\n  const [maps, setMaps] = useState<{[id: string]: MapRef}>({});\n\n  const onMapMount = useCallback((map: MapRef, id: string = 'default') => {\n    setMaps(currMaps => {\n      if (id === 'current') {\n        throw new Error(\"'current' cannot be used as map id\");\n      }\n      if (currMaps[id]) {\n        throw new Error(`Multiple maps with the same id: ${id}`);\n      }\n      return {...currMaps, [id]: map};\n    });\n  }, []);\n\n  const onMapUnmount = useCallback((id: string = 'default') => {\n    setMaps(currMaps => {\n      if (currMaps[id]) {\n        const nextMaps = {...currMaps};\n        delete nextMaps[id];\n        return nextMaps;\n      }\n      return currMaps;\n    });\n  }, []);\n\n  return (\n    <MountedMapsContext.Provider\n      value={{\n        maps,\n        onMapMount,\n        onMapUnmount\n      }}\n    >\n      {props.children}\n    </MountedMapsContext.Provider>\n  );\n};\n\nexport function useMap(): {current?: MapRef; [id: string]: MapRef | undefined} {\n  const maps = useContext(MountedMapsContext)?.maps;\n  const currentMap = useContext(MapContext);\n\n  const mapsWithCurrent = useMemo(() => {\n    return {...maps, current: currentMap?.map};\n  }, [maps, currentMap]);\n\n  return mapsWithCurrent;\n}\n"]},"metadata":{},"sourceType":"module"}