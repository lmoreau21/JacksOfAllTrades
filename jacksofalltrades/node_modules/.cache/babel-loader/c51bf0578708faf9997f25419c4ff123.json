{"ast":null,"code":"import { useCallback } from 'react';\nimport { useSyncExternalStoreWithSelector } from 'use-sync-external-store/shim/with-selector';\nimport { isActorWithState } from './useActor';\nimport { getServiceSnapshot } from './utils';\n\nfunction isService(actor) {\n  return 'state' in actor && 'machine' in actor;\n}\n\nvar defaultCompare = function defaultCompare(a, b) {\n  return a === b;\n};\n\nvar defaultGetSnapshot = function defaultGetSnapshot(a) {\n  return isService(a) ? getServiceSnapshot(a) : isActorWithState(a) ? a.state : undefined;\n};\n\nexport function useSelector(actor, selector, compare, getSnapshot) {\n  if (compare === void 0) {\n    compare = defaultCompare;\n  }\n\n  if (getSnapshot === void 0) {\n    getSnapshot = defaultGetSnapshot;\n  }\n\n  var subscribe = useCallback(function (handleStoreChange) {\n    var unsubscribe = actor.subscribe(handleStoreChange).unsubscribe;\n    return unsubscribe;\n  }, [actor]);\n  var boundGetSnapshot = useCallback(function () {\n    return getSnapshot(actor);\n  }, [actor, getSnapshot]);\n  var selectedSnapshot = useSyncExternalStoreWithSelector(subscribe, boundGetSnapshot, boundGetSnapshot, selector, compare);\n  return selectedSnapshot;\n}","map":{"version":3,"names":["useCallback","useSyncExternalStoreWithSelector","isActorWithState","getServiceSnapshot","isService","actor","defaultCompare","a","b","defaultGetSnapshot","state","undefined","useSelector","selector","compare","getSnapshot","subscribe","handleStoreChange","unsubscribe","boundGetSnapshot","selectedSnapshot"],"sources":["C:/Users/lmore/OneDrive/Documents/GitHub/JacksOfAllTrades/jacksofalltrades/node_modules/@xstate/react/es/useSelector.js"],"sourcesContent":["import { useCallback } from 'react';\nimport { useSyncExternalStoreWithSelector } from 'use-sync-external-store/shim/with-selector';\nimport { isActorWithState } from './useActor';\nimport { getServiceSnapshot } from './utils';\nfunction isService(actor) {\n    return 'state' in actor && 'machine' in actor;\n}\nvar defaultCompare = function (a, b) { return a === b; };\nvar defaultGetSnapshot = function (a) {\n    return isService(a)\n        ? getServiceSnapshot(a)\n        : isActorWithState(a)\n            ? a.state\n            : undefined;\n};\nexport function useSelector(actor, selector, compare, getSnapshot) {\n    if (compare === void 0) { compare = defaultCompare; }\n    if (getSnapshot === void 0) { getSnapshot = defaultGetSnapshot; }\n    var subscribe = useCallback(function (handleStoreChange) {\n        var unsubscribe = actor.subscribe(handleStoreChange).unsubscribe;\n        return unsubscribe;\n    }, [actor]);\n    var boundGetSnapshot = useCallback(function () { return getSnapshot(actor); }, [\n        actor,\n        getSnapshot\n    ]);\n    var selectedSnapshot = useSyncExternalStoreWithSelector(subscribe, boundGetSnapshot, boundGetSnapshot, selector, compare);\n    return selectedSnapshot;\n}\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,SAASC,gCAAT,QAAiD,4CAAjD;AACA,SAASC,gBAAT,QAAiC,YAAjC;AACA,SAASC,kBAAT,QAAmC,SAAnC;;AACA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;EACtB,OAAO,WAAWA,KAAX,IAAoB,aAAaA,KAAxC;AACH;;AACD,IAAIC,cAAc,GAAG,SAAjBA,cAAiB,CAAUC,CAAV,EAAaC,CAAb,EAAgB;EAAE,OAAOD,CAAC,KAAKC,CAAb;AAAiB,CAAxD;;AACA,IAAIC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAUF,CAAV,EAAa;EAClC,OAAOH,SAAS,CAACG,CAAD,CAAT,GACDJ,kBAAkB,CAACI,CAAD,CADjB,GAEDL,gBAAgB,CAACK,CAAD,CAAhB,GACIA,CAAC,CAACG,KADN,GAEIC,SAJV;AAKH,CAND;;AAOA,OAAO,SAASC,WAAT,CAAqBP,KAArB,EAA4BQ,QAA5B,EAAsCC,OAAtC,EAA+CC,WAA/C,EAA4D;EAC/D,IAAID,OAAO,KAAK,KAAK,CAArB,EAAwB;IAAEA,OAAO,GAAGR,cAAV;EAA2B;;EACrD,IAAIS,WAAW,KAAK,KAAK,CAAzB,EAA4B;IAAEA,WAAW,GAAGN,kBAAd;EAAmC;;EACjE,IAAIO,SAAS,GAAGhB,WAAW,CAAC,UAAUiB,iBAAV,EAA6B;IACrD,IAAIC,WAAW,GAAGb,KAAK,CAACW,SAAN,CAAgBC,iBAAhB,EAAmCC,WAArD;IACA,OAAOA,WAAP;EACH,CAH0B,EAGxB,CAACb,KAAD,CAHwB,CAA3B;EAIA,IAAIc,gBAAgB,GAAGnB,WAAW,CAAC,YAAY;IAAE,OAAOe,WAAW,CAACV,KAAD,CAAlB;EAA4B,CAA3C,EAA6C,CAC3EA,KAD2E,EAE3EU,WAF2E,CAA7C,CAAlC;EAIA,IAAIK,gBAAgB,GAAGnB,gCAAgC,CAACe,SAAD,EAAYG,gBAAZ,EAA8BA,gBAA9B,EAAgDN,QAAhD,EAA0DC,OAA1D,CAAvD;EACA,OAAOM,gBAAP;AACH"},"metadata":{},"sourceType":"module"}