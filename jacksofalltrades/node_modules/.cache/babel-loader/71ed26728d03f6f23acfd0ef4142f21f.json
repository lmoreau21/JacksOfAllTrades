{"ast":null,"code":"import { Crc32 } from \"@aws-crypto/crc32\";\nimport { HeaderMarshaller } from \"./HeaderMarshaller\";\nimport { splitMessage } from \"./splitMessage\";\n\nvar EventStreamCodec = function () {\n  function EventStreamCodec(toUtf8, fromUtf8) {\n    this.headerMarshaller = new HeaderMarshaller(toUtf8, fromUtf8);\n  }\n\n  EventStreamCodec.prototype.encode = function (_a) {\n    var rawHeaders = _a.headers,\n        body = _a.body;\n    var headers = this.headerMarshaller.format(rawHeaders);\n    var length = headers.byteLength + body.byteLength + 16;\n    var out = new Uint8Array(length);\n    var view = new DataView(out.buffer, out.byteOffset, out.byteLength);\n    var checksum = new Crc32();\n    view.setUint32(0, length, false);\n    view.setUint32(4, headers.byteLength, false);\n    view.setUint32(8, checksum.update(out.subarray(0, 8)).digest(), false);\n    out.set(headers, 12);\n    out.set(body, headers.byteLength + 12);\n    view.setUint32(length - 4, checksum.update(out.subarray(8, length - 4)).digest(), false);\n    return out;\n  };\n\n  EventStreamCodec.prototype.decode = function (message) {\n    var _a = splitMessage(message),\n        headers = _a.headers,\n        body = _a.body;\n\n    return {\n      headers: this.headerMarshaller.parse(headers),\n      body: body\n    };\n  };\n\n  EventStreamCodec.prototype.formatHeaders = function (rawHeaders) {\n    return this.headerMarshaller.format(rawHeaders);\n  };\n\n  return EventStreamCodec;\n}();\n\nexport { EventStreamCodec };","map":{"version":3,"names":["Crc32","HeaderMarshaller","splitMessage","EventStreamCodec","toUtf8","fromUtf8","headerMarshaller","prototype","encode","_a","rawHeaders","headers","body","format","length","byteLength","out","Uint8Array","view","DataView","buffer","byteOffset","checksum","setUint32","update","subarray","digest","set","decode","message","parse","formatHeaders"],"sources":["C:/Users/lmore/OneDrive/Documents/GitHub/JacksOfAllTrades/jacksofalltrades/node_modules/@aws-sdk/eventstream-codec/dist-es/EventStreamCodec.js"],"sourcesContent":["import { Crc32 } from \"@aws-crypto/crc32\";\nimport { HeaderMarshaller } from \"./HeaderMarshaller\";\nimport { splitMessage } from \"./splitMessage\";\nvar EventStreamCodec = (function () {\n    function EventStreamCodec(toUtf8, fromUtf8) {\n        this.headerMarshaller = new HeaderMarshaller(toUtf8, fromUtf8);\n    }\n    EventStreamCodec.prototype.encode = function (_a) {\n        var rawHeaders = _a.headers, body = _a.body;\n        var headers = this.headerMarshaller.format(rawHeaders);\n        var length = headers.byteLength + body.byteLength + 16;\n        var out = new Uint8Array(length);\n        var view = new DataView(out.buffer, out.byteOffset, out.byteLength);\n        var checksum = new Crc32();\n        view.setUint32(0, length, false);\n        view.setUint32(4, headers.byteLength, false);\n        view.setUint32(8, checksum.update(out.subarray(0, 8)).digest(), false);\n        out.set(headers, 12);\n        out.set(body, headers.byteLength + 12);\n        view.setUint32(length - 4, checksum.update(out.subarray(8, length - 4)).digest(), false);\n        return out;\n    };\n    EventStreamCodec.prototype.decode = function (message) {\n        var _a = splitMessage(message), headers = _a.headers, body = _a.body;\n        return { headers: this.headerMarshaller.parse(headers), body: body };\n    };\n    EventStreamCodec.prototype.formatHeaders = function (rawHeaders) {\n        return this.headerMarshaller.format(rawHeaders);\n    };\n    return EventStreamCodec;\n}());\nexport { EventStreamCodec };\n"],"mappings":"AAAA,SAASA,KAAT,QAAsB,mBAAtB;AACA,SAASC,gBAAT,QAAiC,oBAAjC;AACA,SAASC,YAAT,QAA6B,gBAA7B;;AACA,IAAIC,gBAAgB,GAAI,YAAY;EAChC,SAASA,gBAAT,CAA0BC,MAA1B,EAAkCC,QAAlC,EAA4C;IACxC,KAAKC,gBAAL,GAAwB,IAAIL,gBAAJ,CAAqBG,MAArB,EAA6BC,QAA7B,CAAxB;EACH;;EACDF,gBAAgB,CAACI,SAAjB,CAA2BC,MAA3B,GAAoC,UAAUC,EAAV,EAAc;IAC9C,IAAIC,UAAU,GAAGD,EAAE,CAACE,OAApB;IAAA,IAA6BC,IAAI,GAAGH,EAAE,CAACG,IAAvC;IACA,IAAID,OAAO,GAAG,KAAKL,gBAAL,CAAsBO,MAAtB,CAA6BH,UAA7B,CAAd;IACA,IAAII,MAAM,GAAGH,OAAO,CAACI,UAAR,GAAqBH,IAAI,CAACG,UAA1B,GAAuC,EAApD;IACA,IAAIC,GAAG,GAAG,IAAIC,UAAJ,CAAeH,MAAf,CAAV;IACA,IAAII,IAAI,GAAG,IAAIC,QAAJ,CAAaH,GAAG,CAACI,MAAjB,EAAyBJ,GAAG,CAACK,UAA7B,EAAyCL,GAAG,CAACD,UAA7C,CAAX;IACA,IAAIO,QAAQ,GAAG,IAAItB,KAAJ,EAAf;IACAkB,IAAI,CAACK,SAAL,CAAe,CAAf,EAAkBT,MAAlB,EAA0B,KAA1B;IACAI,IAAI,CAACK,SAAL,CAAe,CAAf,EAAkBZ,OAAO,CAACI,UAA1B,EAAsC,KAAtC;IACAG,IAAI,CAACK,SAAL,CAAe,CAAf,EAAkBD,QAAQ,CAACE,MAAT,CAAgBR,GAAG,CAACS,QAAJ,CAAa,CAAb,EAAgB,CAAhB,CAAhB,EAAoCC,MAApC,EAAlB,EAAgE,KAAhE;IACAV,GAAG,CAACW,GAAJ,CAAQhB,OAAR,EAAiB,EAAjB;IACAK,GAAG,CAACW,GAAJ,CAAQf,IAAR,EAAcD,OAAO,CAACI,UAAR,GAAqB,EAAnC;IACAG,IAAI,CAACK,SAAL,CAAeT,MAAM,GAAG,CAAxB,EAA2BQ,QAAQ,CAACE,MAAT,CAAgBR,GAAG,CAACS,QAAJ,CAAa,CAAb,EAAgBX,MAAM,GAAG,CAAzB,CAAhB,EAA6CY,MAA7C,EAA3B,EAAkF,KAAlF;IACA,OAAOV,GAAP;EACH,CAdD;;EAeAb,gBAAgB,CAACI,SAAjB,CAA2BqB,MAA3B,GAAoC,UAAUC,OAAV,EAAmB;IACnD,IAAIpB,EAAE,GAAGP,YAAY,CAAC2B,OAAD,CAArB;IAAA,IAAgClB,OAAO,GAAGF,EAAE,CAACE,OAA7C;IAAA,IAAsDC,IAAI,GAAGH,EAAE,CAACG,IAAhE;;IACA,OAAO;MAAED,OAAO,EAAE,KAAKL,gBAAL,CAAsBwB,KAAtB,CAA4BnB,OAA5B,CAAX;MAAiDC,IAAI,EAAEA;IAAvD,CAAP;EACH,CAHD;;EAIAT,gBAAgB,CAACI,SAAjB,CAA2BwB,aAA3B,GAA2C,UAAUrB,UAAV,EAAsB;IAC7D,OAAO,KAAKJ,gBAAL,CAAsBO,MAAtB,CAA6BH,UAA7B,CAAP;EACH,CAFD;;EAGA,OAAOP,gBAAP;AACH,CA3BuB,EAAxB;;AA4BA,SAASA,gBAAT"},"metadata":{},"sourceType":"module"}