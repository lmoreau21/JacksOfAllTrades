{"ast":null,"code":"const MapboxDraw = require('@mapbox/mapbox-gl-draw');\n\nconst Constants = require(\"../../lib/utils/constants\");\n\nconst doubleClickZoom = require(\"../../lib/utils/double_click_zoom\");\n\nconst circle = require('@turf/circle').default;\n\nconst CircleMode = { ...MapboxDraw.modes.draw_polygon\n};\nconst DEFAULT_RADIUS_IN_KM = 2;\n\nCircleMode.onSetup = function (opts) {\n  const polygon = this.newFeature({\n    type: Constants.geojsonTypes.FEATURE,\n    properties: {\n      isCircle: true,\n      center: []\n    },\n    geometry: {\n      type: Constants.geojsonTypes.POLYGON,\n      coordinates: [[]]\n    }\n  });\n  this.addFeature(polygon);\n  this.clearSelectedFeatures();\n  doubleClickZoom.disable(this);\n  this.updateUIClasses({\n    mouse: Constants.cursors.ADD\n  });\n  this.activateUIButton(Constants.types.POLYGON);\n  this.setActionableState({\n    trash: true\n  });\n  return {\n    initialRadiusInKm: opts.initialRadiusInKm || DEFAULT_RADIUS_IN_KM,\n    polygon,\n    currentVertexPosition: 0\n  };\n};\n\nCircleMode.clickAnywhere = function (state, e) {\n  if (state.currentVertexPosition === 0) {\n    state.currentVertexPosition++;\n    const center = [e.lngLat.lng, e.lngLat.lat];\n    const circleFeature = circle(center, state.initialRadiusInKm);\n    state.polygon.incomingCoords(circleFeature.geometry.coordinates);\n    state.polygon.properties.center = center;\n    state.polygon.properties.radiusInKm = state.initialRadiusInKm;\n  }\n\n  return this.changeMode(Constants.modes.SIMPLE_SELECT, {\n    featureIds: [state.polygon.id]\n  });\n};\n\nmodule.exports = CircleMode;","map":{"version":3,"names":["MapboxDraw","require","Constants","doubleClickZoom","circle","default","CircleMode","modes","draw_polygon","DEFAULT_RADIUS_IN_KM","onSetup","opts","polygon","newFeature","type","geojsonTypes","FEATURE","properties","isCircle","center","geometry","POLYGON","coordinates","addFeature","clearSelectedFeatures","disable","updateUIClasses","mouse","cursors","ADD","activateUIButton","types","setActionableState","trash","initialRadiusInKm","currentVertexPosition","clickAnywhere","state","e","lngLat","lng","lat","circleFeature","incomingCoords","radiusInKm","changeMode","SIMPLE_SELECT","featureIds","id","module","exports"],"sources":["C:/Users/lmore/OneDrive/Documents/GitHub/JacksOfAllTrades/jacksofalltrades/node_modules/maplibre-gl-draw-circle/lib/modes/CircleMode.js"],"sourcesContent":["const MapboxDraw = require('@mapbox/mapbox-gl-draw');\nconst Constants = require(\"../../lib/utils/constants\");\nconst doubleClickZoom = require(\"../../lib/utils/double_click_zoom\");\nconst circle = require('@turf/circle').default;\n\nconst CircleMode = {...MapboxDraw.modes.draw_polygon};\nconst DEFAULT_RADIUS_IN_KM = 2;\n\nCircleMode.onSetup = function(opts) {\n  const polygon = this.newFeature({\n    type: Constants.geojsonTypes.FEATURE,\n    properties: {\n      isCircle: true,\n      center: []\n    },\n    geometry: {\n      type: Constants.geojsonTypes.POLYGON,\n      coordinates: [[]]\n    }\n  });\n\n  this.addFeature(polygon);\n\n  this.clearSelectedFeatures();\n  doubleClickZoom.disable(this);\n  this.updateUIClasses({ mouse: Constants.cursors.ADD });\n  this.activateUIButton(Constants.types.POLYGON);\n  this.setActionableState({\n    trash: true\n  });\n\n  return {\n    initialRadiusInKm: opts.initialRadiusInKm || DEFAULT_RADIUS_IN_KM,\n    polygon,\n    currentVertexPosition: 0\n  };\n};\n\nCircleMode.clickAnywhere = function(state, e) {\n  if (state.currentVertexPosition === 0) {\n    state.currentVertexPosition++;\n    const center = [e.lngLat.lng, e.lngLat.lat];\n    const circleFeature = circle(center, state.initialRadiusInKm);\n    state.polygon.incomingCoords(circleFeature.geometry.coordinates);\n    state.polygon.properties.center = center;\n    state.polygon.properties.radiusInKm = state.initialRadiusInKm;\n  }\n  return this.changeMode(Constants.modes.SIMPLE_SELECT, { featureIds: [state.polygon.id] });\n};\n\nmodule.exports = CircleMode;"],"mappings":"AAAA,MAAMA,UAAU,GAAGC,OAAO,CAAC,wBAAD,CAA1B;;AACA,MAAMC,SAAS,GAAGD,OAAO,CAAC,2BAAD,CAAzB;;AACA,MAAME,eAAe,GAAGF,OAAO,CAAC,mCAAD,CAA/B;;AACA,MAAMG,MAAM,GAAGH,OAAO,CAAC,cAAD,CAAP,CAAwBI,OAAvC;;AAEA,MAAMC,UAAU,GAAG,EAAC,GAAGN,UAAU,CAACO,KAAX,CAAiBC;AAArB,CAAnB;AACA,MAAMC,oBAAoB,GAAG,CAA7B;;AAEAH,UAAU,CAACI,OAAX,GAAqB,UAASC,IAAT,EAAe;EAClC,MAAMC,OAAO,GAAG,KAAKC,UAAL,CAAgB;IAC9BC,IAAI,EAAEZ,SAAS,CAACa,YAAV,CAAuBC,OADC;IAE9BC,UAAU,EAAE;MACVC,QAAQ,EAAE,IADA;MAEVC,MAAM,EAAE;IAFE,CAFkB;IAM9BC,QAAQ,EAAE;MACRN,IAAI,EAAEZ,SAAS,CAACa,YAAV,CAAuBM,OADrB;MAERC,WAAW,EAAE,CAAC,EAAD;IAFL;EANoB,CAAhB,CAAhB;EAYA,KAAKC,UAAL,CAAgBX,OAAhB;EAEA,KAAKY,qBAAL;EACArB,eAAe,CAACsB,OAAhB,CAAwB,IAAxB;EACA,KAAKC,eAAL,CAAqB;IAAEC,KAAK,EAAEzB,SAAS,CAAC0B,OAAV,CAAkBC;EAA3B,CAArB;EACA,KAAKC,gBAAL,CAAsB5B,SAAS,CAAC6B,KAAV,CAAgBV,OAAtC;EACA,KAAKW,kBAAL,CAAwB;IACtBC,KAAK,EAAE;EADe,CAAxB;EAIA,OAAO;IACLC,iBAAiB,EAAEvB,IAAI,CAACuB,iBAAL,IAA0BzB,oBADxC;IAELG,OAFK;IAGLuB,qBAAqB,EAAE;EAHlB,CAAP;AAKD,CA5BD;;AA8BA7B,UAAU,CAAC8B,aAAX,GAA2B,UAASC,KAAT,EAAgBC,CAAhB,EAAmB;EAC5C,IAAID,KAAK,CAACF,qBAAN,KAAgC,CAApC,EAAuC;IACrCE,KAAK,CAACF,qBAAN;IACA,MAAMhB,MAAM,GAAG,CAACmB,CAAC,CAACC,MAAF,CAASC,GAAV,EAAeF,CAAC,CAACC,MAAF,CAASE,GAAxB,CAAf;IACA,MAAMC,aAAa,GAAGtC,MAAM,CAACe,MAAD,EAASkB,KAAK,CAACH,iBAAf,CAA5B;IACAG,KAAK,CAACzB,OAAN,CAAc+B,cAAd,CAA6BD,aAAa,CAACtB,QAAd,CAAuBE,WAApD;IACAe,KAAK,CAACzB,OAAN,CAAcK,UAAd,CAAyBE,MAAzB,GAAkCA,MAAlC;IACAkB,KAAK,CAACzB,OAAN,CAAcK,UAAd,CAAyB2B,UAAzB,GAAsCP,KAAK,CAACH,iBAA5C;EACD;;EACD,OAAO,KAAKW,UAAL,CAAgB3C,SAAS,CAACK,KAAV,CAAgBuC,aAAhC,EAA+C;IAAEC,UAAU,EAAE,CAACV,KAAK,CAACzB,OAAN,CAAcoC,EAAf;EAAd,CAA/C,CAAP;AACD,CAVD;;AAYAC,MAAM,CAACC,OAAP,GAAiB5C,UAAjB"},"metadata":{},"sourceType":"script"}