{"ast":null,"code":"import _classCallCheck from \"C:/Users/lmore/OneDrive/Documents/GitHub/JacksOfAllTrades/jacksofalltrades/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/lmore/OneDrive/Documents/GitHub/JacksOfAllTrades/jacksofalltrades/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport MapboxDraw from \"@mapbox/mapbox-gl-draw\";\nimport { CircleMode, SimpleSelectMode, DirectMode } from \"maplibre-gl-draw-circle\";\nimport { getPolygonFeatureFromBounds, getCircleFeatureFromCoords } from \"../geofenceUtils\";\nimport { GEOFENCE_BORDER_COLOR, GEOFENCE_COLOR, GEOFENCE_VERTEX_COLOR } from \"../constants\";\nexport var AmplifyMapDraw = /*#__PURE__*/function () {\n  function AmplifyMapDraw(map, ui) {\n    _classCallCheck(this, AmplifyMapDraw);\n\n    this._mapBoxDraw = new MapboxDraw({\n      displayControlsDefault: false,\n      defaultMode: \"simple_select\",\n      userProperties: true,\n      controls: {\n        trash: true\n      },\n      modes: Object.assign(Object.assign({}, MapboxDraw.modes), {\n        draw_circle: CircleMode,\n        direct_select: DirectMode,\n        simple_select: SimpleSelectMode\n      }),\n      styles: [// ACTIVE (being drawn)\n      // polygon fill\n      {\n        id: \"gl-draw-polygon-fill\",\n        type: \"fill\",\n        filter: [\"all\", [\"==\", \"$type\", \"Polygon\"], [\"!=\", \"mode\", \"static\"]],\n        paint: {\n          \"fill-color\": GEOFENCE_COLOR,\n          \"fill-outline-color\": GEOFENCE_COLOR,\n          \"fill-opacity\": 0.3\n        }\n      }, // polygon mid points\n      {\n        id: \"gl-draw-polygon-midpoint\",\n        type: \"circle\",\n        filter: [\"all\", [\"==\", \"$type\", \"Point\"], [\"==\", \"meta\", \"midpoint\"]],\n        paint: {\n          \"circle-radius\": 5,\n          \"circle-color\": GEOFENCE_VERTEX_COLOR\n        }\n      }, // polygon border\n      {\n        id: \"gl-draw-polygon-stroke-active\",\n        type: \"line\",\n        filter: [\"all\", [\"==\", \"$type\", \"Polygon\"], [\"!=\", \"mode\", \"static\"]],\n        layout: {\n          \"line-cap\": \"round\",\n          \"line-join\": \"round\"\n        },\n        paint: {\n          \"line-color\": GEOFENCE_BORDER_COLOR,\n          \"line-width\": 4\n        }\n      }, // vertex circle\n      {\n        id: \"gl-draw-polygon-and-line-vertex-active\",\n        type: \"circle\",\n        filter: [\"all\", [\"==\", \"meta\", \"vertex\"], [\"==\", \"$type\", \"Point\"], [\"!=\", \"mode\", \"static\"]],\n        paint: {\n          \"circle-radius\": 8,\n          \"circle-color\": GEOFENCE_VERTEX_COLOR,\n          \"circle-stroke-color\": GEOFENCE_BORDER_COLOR,\n          \"circle-stroke-width\": 1\n        }\n      }]\n    });\n    this._map = map;\n    this._ui = ui;\n    this.enable = this.enable.bind(this);\n    this.disable = this.disable.bind(this);\n    this.drawPolygonGeofence = this.drawPolygonGeofence.bind(this);\n  }\n\n  _createClass(AmplifyMapDraw, [{\n    key: \"get\",\n    value: function get(id) {\n      return this._mapBoxDraw.get(id);\n    }\n  }, {\n    key: \"add\",\n    value: function add(data) {\n      var isCircle = data.properties.isCircle;\n      this.enable(isCircle);\n\n      this._mapBoxDraw.add(data);\n\n      this._mapBoxDraw.changeMode(\"direct_select\", {\n        featureId: data.id\n      });\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(id) {\n      this._mapBoxDraw.delete(id);\n    }\n  }, {\n    key: \"disable\",\n    value: function disable() {\n      if (this._map.hasControl(this._mapBoxDraw)) {\n        this._map.removeControl(this._mapBoxDraw);\n      }\n\n      this._ui.removeGeofenceCreateContainer();\n    }\n  }, {\n    key: \"enable\",\n    value: function enable(isCircle) {\n      if (this._map.hasControl(this._mapBoxDraw)) {\n        return;\n      }\n\n      this._map.addControl(this._mapBoxDraw, \"bottom-right\");\n\n      this._ui.createGeofenceCreateContainer(isCircle);\n    }\n    /**\n     * Draws a polygonal geofence around the center of the current map view. The polygon defaults to 3/4 the size of the current map bounds\n     * @param id the geofence geojson id\n     */\n\n  }, {\n    key: \"drawPolygonGeofence\",\n    value: function drawPolygonGeofence(id) {\n      var mapBounds = this._map.getBounds();\n\n      var feature = getPolygonFeatureFromBounds(id, mapBounds);\n      this.add(feature);\n    }\n    /**\n     * Draws a cicular geofence around the center of the current map view\n     * @param id the geofence geojson id\n     * @param radius optional parameter for setting the radius of the cicular geofence, default to 1/8th of the current map bounds length\n     */\n\n  }, {\n    key: \"drawCircularGeofence\",\n    value: function drawCircularGeofence(id, radius) {\n      var mapBounds = this._map.getBounds();\n\n      var circleFeature = getCircleFeatureFromCoords(id, this._map.getCenter().toArray(), {\n        bounds: mapBounds,\n        radius: radius\n      });\n      this.add(circleFeature);\n\n      this._ui.updateGeofenceRadius(radius || circleFeature.properties.radius.toFixed(2));\n    }\n  }]);\n\n  return AmplifyMapDraw;\n}();","map":{"version":3,"names":["MapboxDraw","CircleMode","SimpleSelectMode","DirectMode","getPolygonFeatureFromBounds","getCircleFeatureFromCoords","GEOFENCE_BORDER_COLOR","GEOFENCE_COLOR","GEOFENCE_VERTEX_COLOR","AmplifyMapDraw","map","ui","_mapBoxDraw","displayControlsDefault","defaultMode","userProperties","controls","trash","modes","Object","assign","draw_circle","direct_select","simple_select","styles","id","type","filter","paint","layout","_map","_ui","enable","bind","disable","drawPolygonGeofence","get","data","isCircle","properties","add","changeMode","featureId","delete","hasControl","removeControl","removeGeofenceCreateContainer","addControl","createGeofenceCreateContainer","mapBounds","getBounds","feature","radius","circleFeature","getCenter","toArray","bounds","updateGeofenceRadius","toFixed"],"sources":["C:/Users/lmore/OneDrive/Documents/GitHub/JacksOfAllTrades/jacksofalltrades/node_modules/maplibre-gl-js-amplify/lib/esm/AmplifyGeofenceControl/AmplifyMapDraw.js"],"sourcesContent":["import MapboxDraw from \"@mapbox/mapbox-gl-draw\";\nimport { CircleMode, SimpleSelectMode, DirectMode, } from \"maplibre-gl-draw-circle\";\nimport { getPolygonFeatureFromBounds, getCircleFeatureFromCoords, } from \"../geofenceUtils\";\nimport { GEOFENCE_BORDER_COLOR, GEOFENCE_COLOR, GEOFENCE_VERTEX_COLOR, } from \"../constants\";\nexport class AmplifyMapDraw {\n    constructor(map, ui) {\n        this._mapBoxDraw = new MapboxDraw({\n            displayControlsDefault: false,\n            defaultMode: \"simple_select\",\n            userProperties: true,\n            controls: {\n                trash: true,\n            },\n            modes: Object.assign(Object.assign({}, MapboxDraw.modes), { draw_circle: CircleMode, direct_select: DirectMode, simple_select: SimpleSelectMode }),\n            styles: [\n                // ACTIVE (being drawn)\n                // polygon fill\n                {\n                    id: \"gl-draw-polygon-fill\",\n                    type: \"fill\",\n                    filter: [\"all\", [\"==\", \"$type\", \"Polygon\"], [\"!=\", \"mode\", \"static\"]],\n                    paint: {\n                        \"fill-color\": GEOFENCE_COLOR,\n                        \"fill-outline-color\": GEOFENCE_COLOR,\n                        \"fill-opacity\": 0.3,\n                    },\n                },\n                // polygon mid points\n                {\n                    id: \"gl-draw-polygon-midpoint\",\n                    type: \"circle\",\n                    filter: [\"all\", [\"==\", \"$type\", \"Point\"], [\"==\", \"meta\", \"midpoint\"]],\n                    paint: {\n                        \"circle-radius\": 5,\n                        \"circle-color\": GEOFENCE_VERTEX_COLOR,\n                    },\n                },\n                // polygon border\n                {\n                    id: \"gl-draw-polygon-stroke-active\",\n                    type: \"line\",\n                    filter: [\"all\", [\"==\", \"$type\", \"Polygon\"], [\"!=\", \"mode\", \"static\"]],\n                    layout: {\n                        \"line-cap\": \"round\",\n                        \"line-join\": \"round\",\n                    },\n                    paint: {\n                        \"line-color\": GEOFENCE_BORDER_COLOR,\n                        \"line-width\": 4,\n                    },\n                },\n                // vertex circle\n                {\n                    id: \"gl-draw-polygon-and-line-vertex-active\",\n                    type: \"circle\",\n                    filter: [\n                        \"all\",\n                        [\"==\", \"meta\", \"vertex\"],\n                        [\"==\", \"$type\", \"Point\"],\n                        [\"!=\", \"mode\", \"static\"],\n                    ],\n                    paint: {\n                        \"circle-radius\": 8,\n                        \"circle-color\": GEOFENCE_VERTEX_COLOR,\n                        \"circle-stroke-color\": GEOFENCE_BORDER_COLOR,\n                        \"circle-stroke-width\": 1,\n                    },\n                },\n            ],\n        });\n        this._map = map;\n        this._ui = ui;\n        this.enable = this.enable.bind(this);\n        this.disable = this.disable.bind(this);\n        this.drawPolygonGeofence = this.drawPolygonGeofence.bind(this);\n    }\n    get(id) {\n        return this._mapBoxDraw.get(id);\n    }\n    add(data) {\n        const isCircle = data.properties.isCircle;\n        this.enable(isCircle);\n        this._mapBoxDraw.add(data);\n        this._mapBoxDraw.changeMode(\"direct_select\", {\n            featureId: data.id,\n        });\n    }\n    delete(id) {\n        this._mapBoxDraw.delete(id);\n    }\n    disable() {\n        if (this._map.hasControl(this._mapBoxDraw)) {\n            this._map.removeControl(this._mapBoxDraw);\n        }\n        this._ui.removeGeofenceCreateContainer();\n    }\n    enable(isCircle) {\n        if (this._map.hasControl(this._mapBoxDraw)) {\n            return;\n        }\n        this._map.addControl(this._mapBoxDraw, \"bottom-right\");\n        this._ui.createGeofenceCreateContainer(isCircle);\n    }\n    /**\n     * Draws a polygonal geofence around the center of the current map view. The polygon defaults to 3/4 the size of the current map bounds\n     * @param id the geofence geojson id\n     */\n    drawPolygonGeofence(id) {\n        const mapBounds = this._map.getBounds();\n        const feature = getPolygonFeatureFromBounds(id, mapBounds);\n        this.add(feature);\n    }\n    /**\n     * Draws a cicular geofence around the center of the current map view\n     * @param id the geofence geojson id\n     * @param radius optional parameter for setting the radius of the cicular geofence, default to 1/8th of the current map bounds length\n     */\n    drawCircularGeofence(id, radius) {\n        const mapBounds = this._map.getBounds();\n        const circleFeature = getCircleFeatureFromCoords(id, this._map.getCenter().toArray(), { bounds: mapBounds, radius });\n        this.add(circleFeature);\n        this._ui.updateGeofenceRadius(radius || circleFeature.properties.radius.toFixed(2));\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}