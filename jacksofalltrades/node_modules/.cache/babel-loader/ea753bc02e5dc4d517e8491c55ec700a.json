{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport { Popup } from 'maplibre-gl';\nimport { ACTIVE_MARKER_COLOR, COLOR_WHITE, MARKER_COLOR } from \"./constants\";\nimport { createMarker } from \"./createMarker\";\nimport { getPopupRenderFunction } from \"./popupRender\";\nimport { isCoordinates } from \"./utils\";\nvar HIDE_TIP = \"amplify-tip\";\nexport function drawUnclusteredLayer(sourceName, map, _a) {\n  var _a$showMarkerPopup = _a.showMarkerPopup,\n      showMarkerPopup = _a$showMarkerPopup === void 0 ? false : _a$showMarkerPopup,\n      options = __rest(_a, [\"showMarkerPopup\"]);\n\n  var unclusteredLayerId = \"\".concat(sourceName, \"-layer-unclustered-point\");\n  var selectedId = null;\n\n  function deselectPoint() {\n    if (selectedId !== null) {\n      map.setLayoutProperty(unclusteredLayerId, \"icon-image\", \"inactive-marker\");\n      selectedId = null;\n    }\n  }\n\n  var popupRender = options.popupRender ? options.popupRender : getPopupRenderFunction(unclusteredLayerId, options);\n  addUnclusteredMarkerImages(map, options);\n  var defaultUnclusteredPoint = {\n    id: unclusteredLayerId,\n    type: \"symbol\",\n    source: sourceName,\n    filter: [\"!\", [\"has\", \"point_count\"]],\n    layout: {\n      \"icon-image\": \"inactive-marker\"\n    }\n  };\n  map.addLayer(Object.assign({}, defaultUnclusteredPoint));\n  /*\n   * Add css to header to hide default popup tip\n   */\n\n  if (showMarkerPopup) {\n    var element = document.getElementById(HIDE_TIP);\n\n    if (!element) {\n      var style = document.createElement(\"style\");\n      style.setAttribute(\"id\", HIDE_TIP);\n      document.head.append(style);\n      style.textContent = \".mapboxgl-popup-tip { display: none; }\";\n    }\n  }\n\n  map.on(\"click\", function () {\n    deselectPoint();\n  });\n  /*\n   * Set active state on markers when clicked\n   */\n\n  map.on(\"click\", unclusteredLayerId, function (e) {\n    if (typeof options.onClick === \"function\") options.onClick(e);\n    selectedId = e.features[0].id;\n    map.setLayoutProperty(unclusteredLayerId, \"icon-image\", [\"match\", [\"id\"], selectedId, \"active-marker\", \"inactive-marker\" // default\n    ]); // If popup option is set show a popup on click\n\n    if (showMarkerPopup) {\n      var selectedFeature = e.features[0];\n      var coordinates = selectedFeature.geometry.coordinates;\n\n      if (isCoordinates(coordinates)) {\n        var popup = new Popup().setLngLat(coordinates).setHTML(popupRender(selectedFeature)).setOffset(15).addTo(map);\n        popup.on(\"close\", function () {\n          if (selectedId === selectedFeature.id) deselectPoint();\n        });\n      }\n    }\n  });\n  /*\n   * Set cursor style to pointer when mousing over point layer\n   */\n\n  map.on(\"mouseover\", unclusteredLayerId, function () {\n    map.getCanvas().style.cursor = \"pointer\";\n  });\n  /*\n   * Reset cursor style when the point layer\n   */\n\n  map.on(\"mouseleave\", unclusteredLayerId, function () {\n    map.getCanvas().style.cursor = \"\";\n  });\n  return {\n    unclusteredLayerId: unclusteredLayerId\n  };\n}\n/*\n * Adds marker images to the maplibre canvas to be used for rendering unclustered points\n */\n\nfunction addUnclusteredMarkerImages(map, _ref) {\n  var _ref$selectedColor = _ref.selectedColor,\n      selectedColor = _ref$selectedColor === void 0 ? ACTIVE_MARKER_COLOR : _ref$selectedColor,\n      _ref$selectedBorderCo = _ref.selectedBorderColor,\n      selectedBorderColor = _ref$selectedBorderCo === void 0 ? COLOR_WHITE : _ref$selectedBorderCo,\n      _ref$selectedBorderWi = _ref.selectedBorderWidth,\n      selectedBorderWidth = _ref$selectedBorderWi === void 0 ? 4 : _ref$selectedBorderWi,\n      _ref$defaultBorderCol = _ref.defaultBorderColor,\n      defaultBorderColor = _ref$defaultBorderCol === void 0 ? COLOR_WHITE : _ref$defaultBorderCol,\n      _ref$defaultBorderWid = _ref.defaultBorderWidth,\n      defaultBorderWidth = _ref$defaultBorderWid === void 0 ? 4 : _ref$defaultBorderWid,\n      _ref$defaultColor = _ref.defaultColor,\n      fillColor = _ref$defaultColor === void 0 ? MARKER_COLOR : _ref$defaultColor,\n      markerImageElement = _ref.markerImageElement,\n      activeMarkerImageElement = _ref.activeMarkerImageElement;\n  var inactiveMarker = markerImageElement || createMarker({\n    fillColor: fillColor,\n    strokeColor: defaultBorderColor,\n    lineWidth: defaultBorderWidth\n  });\n  var activeMarker = activeMarkerImageElement || markerImageElement || createMarker({\n    fillColor: selectedColor,\n    strokeColor: selectedBorderColor,\n    lineWidth: selectedBorderWidth\n  });\n  map.addImage(\"inactive-marker\", inactiveMarker, {\n    pixelRatio: 2\n  });\n  map.addImage(\"active-marker\", activeMarker, {\n    pixelRatio: 2\n  });\n}","map":{"version":3,"names":["__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","Popup","ACTIVE_MARKER_COLOR","COLOR_WHITE","MARKER_COLOR","createMarker","getPopupRenderFunction","isCoordinates","HIDE_TIP","drawUnclusteredLayer","sourceName","map","_a","showMarkerPopup","options","unclusteredLayerId","selectedId","deselectPoint","setLayoutProperty","popupRender","addUnclusteredMarkerImages","defaultUnclusteredPoint","id","type","source","filter","layout","addLayer","assign","element","document","getElementById","style","createElement","setAttribute","head","append","textContent","on","onClick","features","selectedFeature","coordinates","geometry","popup","setLngLat","setHTML","setOffset","addTo","getCanvas","cursor","selectedColor","selectedBorderColor","selectedBorderWidth","defaultBorderColor","defaultBorderWidth","defaultColor","fillColor","markerImageElement","activeMarkerImageElement","inactiveMarker","strokeColor","lineWidth","activeMarker","addImage","pixelRatio"],"sources":["C:/Users/lmore/OneDrive/Documents/GitHub/JacksOfAllTrades/jacksofalltrades/node_modules/maplibre-gl-js-amplify/lib/esm/drawUnclusteredLayer.js"],"sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { Popup } from 'maplibre-gl';\nimport { ACTIVE_MARKER_COLOR, COLOR_WHITE, MARKER_COLOR } from \"./constants\";\nimport { createMarker } from \"./createMarker\";\nimport { getPopupRenderFunction } from \"./popupRender\";\nimport { isCoordinates } from \"./utils\";\nconst HIDE_TIP = \"amplify-tip\";\nexport function drawUnclusteredLayer(sourceName, map, _a) {\n    var { showMarkerPopup = false } = _a, options = __rest(_a, [\"showMarkerPopup\"]);\n    const unclusteredLayerId = `${sourceName}-layer-unclustered-point`;\n    let selectedId = null;\n    function deselectPoint() {\n        if (selectedId !== null) {\n            map.setLayoutProperty(unclusteredLayerId, \"icon-image\", \"inactive-marker\");\n            selectedId = null;\n        }\n    }\n    const popupRender = options.popupRender\n        ? options.popupRender\n        : getPopupRenderFunction(unclusteredLayerId, options);\n    addUnclusteredMarkerImages(map, options);\n    const defaultUnclusteredPoint = {\n        id: unclusteredLayerId,\n        type: \"symbol\",\n        source: sourceName,\n        filter: [\"!\", [\"has\", \"point_count\"]],\n        layout: {\n            \"icon-image\": \"inactive-marker\",\n        },\n    };\n    map.addLayer(Object.assign({}, defaultUnclusteredPoint));\n    /*\n     * Add css to header to hide default popup tip\n     */\n    if (showMarkerPopup) {\n        const element = document.getElementById(HIDE_TIP);\n        if (!element) {\n            const style = document.createElement(\"style\");\n            style.setAttribute(\"id\", HIDE_TIP);\n            document.head.append(style);\n            style.textContent = \".mapboxgl-popup-tip { display: none; }\";\n        }\n    }\n    map.on(\"click\", function () {\n        deselectPoint();\n    });\n    /*\n     * Set active state on markers when clicked\n     */\n    map.on(\"click\", unclusteredLayerId, function (e) {\n        if (typeof options.onClick === \"function\")\n            options.onClick(e);\n        selectedId = e.features[0].id;\n        map.setLayoutProperty(unclusteredLayerId, \"icon-image\", [\n            \"match\",\n            [\"id\"],\n            selectedId,\n            \"active-marker\",\n            \"inactive-marker\", // default\n        ]);\n        // If popup option is set show a popup on click\n        if (showMarkerPopup) {\n            const selectedFeature = e.features[0];\n            const coordinates = selectedFeature.geometry.coordinates;\n            if (isCoordinates(coordinates)) {\n                const popup = new Popup()\n                    .setLngLat(coordinates)\n                    .setHTML(popupRender(selectedFeature))\n                    .setOffset(15)\n                    .addTo(map);\n                popup.on(\"close\", function () {\n                    if (selectedId === selectedFeature.id)\n                        deselectPoint();\n                });\n            }\n        }\n    });\n    /*\n     * Set cursor style to pointer when mousing over point layer\n     */\n    map.on(\"mouseover\", unclusteredLayerId, function () {\n        map.getCanvas().style.cursor = \"pointer\";\n    });\n    /*\n     * Reset cursor style when the point layer\n     */\n    map.on(\"mouseleave\", unclusteredLayerId, () => {\n        map.getCanvas().style.cursor = \"\";\n    });\n    return { unclusteredLayerId };\n}\n/*\n * Adds marker images to the maplibre canvas to be used for rendering unclustered points\n */\nfunction addUnclusteredMarkerImages(map, { selectedColor = ACTIVE_MARKER_COLOR, selectedBorderColor = COLOR_WHITE, selectedBorderWidth = 4, defaultBorderColor = COLOR_WHITE, defaultBorderWidth = 4, defaultColor: fillColor = MARKER_COLOR, markerImageElement, activeMarkerImageElement, }) {\n    const inactiveMarker = markerImageElement ||\n        createMarker({\n            fillColor: fillColor,\n            strokeColor: defaultBorderColor,\n            lineWidth: defaultBorderWidth,\n        });\n    const activeMarker = activeMarkerImageElement ||\n        markerImageElement ||\n        createMarker({\n            fillColor: selectedColor,\n            strokeColor: selectedBorderColor,\n            lineWidth: selectedBorderWidth,\n        });\n    map.addImage(\"inactive-marker\", inactiveMarker, { pixelRatio: 2 });\n    map.addImage(\"active-marker\", activeMarker, { pixelRatio: 2 });\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}