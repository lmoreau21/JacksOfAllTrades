{"ast":null,"code":"import { useId as e } from \"@radix-ui/react-id\";\nimport * as t from \"@radix-ui/react-roving-focus\";\nimport { createRovingFocusGroupScope as o } from \"@radix-ui/react-roving-focus\";\nimport { Primitive as a } from \"@radix-ui/react-primitive\";\nimport { useControllableState as r } from \"@radix-ui/react-use-controllable-state\";\nimport { createContextScope as n } from \"@radix-ui/react-context\";\nimport { composeEventHandlers as i } from \"@radix-ui/primitive\";\nimport * as s from \"react\";\nimport c from \"@babel/runtime/helpers/esm/extends\";\nconst [d, l] = n(\"Tabs\", [o]);\nexport { l as createTabsScope };\nconst u = o(),\n      [b, p] = d(\"Tabs\");\nexport const Tabs = /*#__PURE__*/s.forwardRef((t, o) => {\n  const {\n    __scopeTabs: n,\n    value: i,\n    onValueChange: d,\n    defaultValue: l,\n    orientation: u = \"horizontal\",\n    dir: p = \"ltr\",\n    activationMode: m = \"automatic\",\n    ...f\n  } = t,\n        [v, T] = r({\n    prop: i,\n    onChange: d,\n    defaultProp: l\n  });\n  /*#__PURE__*/\n\n  return s.createElement(b, {\n    scope: n,\n    baseId: e(),\n    value: v,\n    onValueChange: T,\n    orientation: u,\n    dir: p,\n    activationMode: m\n  }, /*#__PURE__*/s.createElement(a.div, c({\n    \"data-orientation\": u\n  }, f, {\n    ref: o\n  })));\n});\n/*#__PURE__*/\n\nexport const TabsList = /*#__PURE__*/s.forwardRef((e, o) => {\n  const {\n    __scopeTabs: r,\n    loop: n = !0,\n    ...i\n  } = e,\n        d = p(\"TabsList\", r),\n        l = u(r);\n  /*#__PURE__*/\n\n  return s.createElement(t.Root, c({\n    asChild: !0\n  }, l, {\n    orientation: d.orientation,\n    dir: d.dir,\n    loop: n\n  }), /*#__PURE__*/s.createElement(a.div, c({\n    role: \"tablist\",\n    \"aria-orientation\": d.orientation,\n    dir: d.dir\n  }, i, {\n    ref: o\n  })));\n});\n/*#__PURE__*/\n\nexport const TabsTrigger = /*#__PURE__*/s.forwardRef((e, o) => {\n  const {\n    __scopeTabs: r,\n    value: n,\n    disabled: d = !1,\n    ...l\n  } = e,\n        b = p(\"TabsTrigger\", r),\n        v = u(r),\n        T = m(b.baseId, n),\n        x = f(b.baseId, n),\n        g = n === b.value;\n  /*#__PURE__*/\n\n  return s.createElement(t.Item, c({\n    asChild: !0\n  }, v, {\n    focusable: !d,\n    active: g\n  }), /*#__PURE__*/s.createElement(a.button, c({\n    type: \"button\",\n    role: \"tab\",\n    \"aria-selected\": g,\n    \"aria-controls\": x,\n    \"data-state\": g ? \"active\" : \"inactive\",\n    \"data-disabled\": d ? \"\" : void 0,\n    disabled: d,\n    id: T\n  }, l, {\n    ref: o,\n    onMouseDown: i(e.onMouseDown, e => {\n      d || 0 !== e.button || !1 !== e.ctrlKey ? e.preventDefault() : b.onValueChange(n);\n    }),\n    onKeyDown: i(e.onKeyDown, e => {\n      [\" \", \"Enter\"].includes(e.key) && b.onValueChange(n);\n    }),\n    onFocus: i(e.onFocus, () => {\n      const e = \"manual\" !== b.activationMode;\n      g || d || !e || b.onValueChange(n);\n    })\n  })));\n});\n/*#__PURE__*/\n\nexport const TabsContent = /*#__PURE__*/s.forwardRef((e, t) => {\n  const {\n    __scopeTabs: o,\n    value: r,\n    children: n,\n    ...i\n  } = e,\n        d = p(\"TabsContent\", o),\n        l = m(d.baseId, r),\n        u = f(d.baseId, r),\n        b = r === d.value;\n  /*#__PURE__*/\n\n  return s.createElement(a.div, c({\n    \"data-state\": b ? \"active\" : \"inactive\",\n    \"data-orientation\": d.orientation,\n    role: \"tabpanel\",\n    \"aria-labelledby\": l,\n    hidden: !b,\n    id: u,\n    tabIndex: 0\n  }, i, {\n    ref: t\n  }), b && n);\n});\n/*#__PURE__*/\n\nfunction m(e, t) {\n  return `${e}-trigger-${t}`;\n}\n\nfunction f(e, t) {\n  return `${e}-content-${t}`;\n}\n\nexport const Root = Tabs;\nexport const List = TabsList;\nexport const Trigger = TabsTrigger;\nexport const Content = TabsContent;","map":{"version":3,"mappings":"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","names":["createTabsContext","createTabsScope","createContextScope","createRovingFocusGroupScope","useRovingFocusGroupScope","TabsProvider","useTabsContext","Tabs","React","forwardRef","props","forwardedRef","__scopeTabs","value","valueProp","onValueChange","defaultValue","orientation","dir","activationMode","tabsProps","setValue","useControllableState","prop","onChange","defaultProp","_react","$b40a02b2d3d1d21ebd9ba3d555116441$var$TabsProvider","scope","baseId","useId","Primitive","div","_babelRuntimeHelpersEsmExtends","ref","TabsList","loop","listProps","context","rovingFocusGroupScope","_radixUiReactRovingFocus","Root","asChild","role","TabsTrigger","disabled","triggerProps","triggerId","makeTriggerId","contentId","makeContentId","isSelected","Item","focusable","active","button","type","undefined","id","onMouseDown","composeEventHandlers","event","ctrlKey","preventDefault","onKeyDown","includes","key","onFocus","isAutomaticActivation","TabsContent","children","contentProps","hidden","tabIndex","List","Trigger","Content"],"sources":["C:\\Users\\lmore\\OneDrive\\Documents\\GitHub\\JacksOfAllTrades\\jacksofalltrades\\node_modules\\@aws-amplify\\ui-react\\node_modules\\@radix-ui\\react-tabs\\dist\\packages\\react\\tabs\\src\\Tabs.tsx"],"sourcesContent":["import * as React from 'react';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { useControllableState } from '@radix-ui/react-use-controllable-state';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport * as RovingFocusGroup from '@radix-ui/react-roving-focus';\nimport { createRovingFocusGroupScope } from '@radix-ui/react-roving-focus';\nimport { useId } from '@radix-ui/react-id';\n\nimport type * as Radix from '@radix-ui/react-primitive';\nimport type { Scope } from '@radix-ui/react-context';\n\n/* -------------------------------------------------------------------------------------------------\n * Tabs\n * -----------------------------------------------------------------------------------------------*/\n\nconst TABS_NAME = 'Tabs';\n\ntype ScopedProps<P> = P & { __scopeTabs?: Scope };\nconst [createTabsContext, createTabsScope] = createContextScope(TABS_NAME, [\n  createRovingFocusGroupScope,\n]);\nconst useRovingFocusGroupScope = createRovingFocusGroupScope();\n\ntype TabsContextValue = {\n  baseId: string;\n  value?: string;\n  onValueChange: (value: string) => void;\n  orientation?: TabsProps['orientation'];\n  dir?: TabsProps['dir'];\n  activationMode?: TabsProps['activationMode'];\n};\n\nconst [TabsProvider, useTabsContext] = createTabsContext<TabsContextValue>(TABS_NAME);\n\ntype TabsElement = React.ElementRef<typeof Primitive.div>;\ntype RovingFocusGroupProps = Radix.ComponentPropsWithoutRef<typeof RovingFocusGroup.Root>;\ntype PrimitiveDivProps = Radix.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface TabsProps extends PrimitiveDivProps {\n  /** The value for the selected tab, if controlled */\n  value?: string;\n  /** The value of the tab to select by default, if uncontrolled */\n  defaultValue?: string;\n  /** A function called when a new tab is selected */\n  onValueChange?: (value: string) => void;\n  /**\n   * The orientation the tabs are layed out.\n   * Mainly so arrow navigation is done accordingly (left & right vs. up & down)\n   * @defaultValue horizontal\n   */\n  orientation?: RovingFocusGroupProps['orientation'];\n  /**\n   * The direction of navigation between toolbar items.\n   * @defaultValue ltr\n   */\n  dir?: RovingFocusGroupProps['dir'];\n  /**\n   * Whether a tab is activated automatically or manually.\n   * @defaultValue automatic\n   * */\n  activationMode?: 'automatic' | 'manual';\n}\n\nconst Tabs = React.forwardRef<TabsElement, TabsProps>(\n  (props: ScopedProps<TabsProps>, forwardedRef) => {\n    const {\n      __scopeTabs,\n      value: valueProp,\n      onValueChange,\n      defaultValue,\n      orientation = 'horizontal',\n      dir = 'ltr',\n      activationMode = 'automatic',\n      ...tabsProps\n    } = props;\n\n    const [value, setValue] = useControllableState({\n      prop: valueProp,\n      onChange: onValueChange,\n      defaultProp: defaultValue,\n    });\n\n    return (\n      <TabsProvider\n        scope={__scopeTabs}\n        baseId={useId()}\n        value={value}\n        onValueChange={setValue}\n        orientation={orientation}\n        dir={dir}\n        activationMode={activationMode}\n      >\n        <Primitive.div data-orientation={orientation} {...tabsProps} ref={forwardedRef} />\n      </TabsProvider>\n    );\n  }\n);\n\nTabs.displayName = TABS_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * TabsList\n * -----------------------------------------------------------------------------------------------*/\n\nconst TAB_LIST_NAME = 'TabsList';\n\ntype TabsListElement = React.ElementRef<typeof Primitive.div>;\ninterface TabsListProps extends PrimitiveDivProps {\n  loop?: RovingFocusGroupProps['loop'];\n}\n\nconst TabsList = React.forwardRef<TabsListElement, TabsListProps>(\n  (props: ScopedProps<TabsListProps>, forwardedRef) => {\n    const { __scopeTabs, loop = true, ...listProps } = props;\n    const context = useTabsContext(TAB_LIST_NAME, __scopeTabs);\n    const rovingFocusGroupScope = useRovingFocusGroupScope(__scopeTabs);\n    return (\n      <RovingFocusGroup.Root\n        asChild\n        {...rovingFocusGroupScope}\n        orientation={context.orientation}\n        dir={context.dir}\n        loop={loop}\n      >\n        <Primitive.div\n          role=\"tablist\"\n          aria-orientation={context.orientation}\n          dir={context.dir}\n          {...listProps}\n          ref={forwardedRef}\n        />\n      </RovingFocusGroup.Root>\n    );\n  }\n);\n\nTabsList.displayName = TAB_LIST_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * TabsTrigger\n * -----------------------------------------------------------------------------------------------*/\n\nconst TRIGGER_NAME = 'TabsTrigger';\n\ntype TabsTriggerElement = React.ElementRef<typeof Primitive.button>;\ntype PrimitiveButtonProps = Radix.ComponentPropsWithoutRef<typeof Primitive.button>;\ninterface TabsTriggerProps extends PrimitiveButtonProps {\n  value: string;\n}\n\nconst TabsTrigger = React.forwardRef<TabsTriggerElement, TabsTriggerProps>(\n  (props: ScopedProps<TabsTriggerProps>, forwardedRef) => {\n    const { __scopeTabs, value, disabled = false, ...triggerProps } = props;\n    const context = useTabsContext(TRIGGER_NAME, __scopeTabs);\n    const rovingFocusGroupScope = useRovingFocusGroupScope(__scopeTabs);\n    const triggerId = makeTriggerId(context.baseId, value);\n    const contentId = makeContentId(context.baseId, value);\n    const isSelected = value === context.value;\n    return (\n      <RovingFocusGroup.Item\n        asChild\n        {...rovingFocusGroupScope}\n        focusable={!disabled}\n        active={isSelected}\n      >\n        <Primitive.button\n          type=\"button\"\n          role=\"tab\"\n          aria-selected={isSelected}\n          aria-controls={contentId}\n          data-state={isSelected ? 'active' : 'inactive'}\n          data-disabled={disabled ? '' : undefined}\n          disabled={disabled}\n          id={triggerId}\n          {...triggerProps}\n          ref={forwardedRef}\n          onMouseDown={composeEventHandlers(props.onMouseDown, (event) => {\n            // only call handler if it's the left button (mousedown gets triggered by all mouse buttons)\n            // but not when the control key is pressed (avoiding MacOS right click)\n            if (!disabled && event.button === 0 && event.ctrlKey === false) {\n              context.onValueChange(value);\n            } else {\n              // prevent focus to avoid accidental activation\n              event.preventDefault();\n            }\n          })}\n          onKeyDown={composeEventHandlers(props.onKeyDown, (event) => {\n            if ([' ', 'Enter'].includes(event.key)) context.onValueChange(value);\n          })}\n          onFocus={composeEventHandlers(props.onFocus, () => {\n            // handle \"automatic\" activation if necessary\n            // ie. activate tab following focus\n            const isAutomaticActivation = context.activationMode !== 'manual';\n            if (!isSelected && !disabled && isAutomaticActivation) {\n              context.onValueChange(value);\n            }\n          })}\n        />\n      </RovingFocusGroup.Item>\n    );\n  }\n);\n\nTabsTrigger.displayName = TRIGGER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * TabsContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_NAME = 'TabsContent';\n\ntype TabsContentElement = React.ElementRef<typeof Primitive.div>;\ninterface TabsContentProps extends PrimitiveDivProps {\n  value: string;\n}\n\nconst TabsContent = React.forwardRef<TabsContentElement, TabsContentProps>(\n  (props: ScopedProps<TabsContentProps>, forwardedRef) => {\n    const { __scopeTabs, value, children, ...contentProps } = props;\n    const context = useTabsContext(CONTENT_NAME, __scopeTabs);\n    const triggerId = makeTriggerId(context.baseId, value);\n    const contentId = makeContentId(context.baseId, value);\n    const isSelected = value === context.value;\n    return (\n      <Primitive.div\n        data-state={isSelected ? 'active' : 'inactive'}\n        data-orientation={context.orientation}\n        role=\"tabpanel\"\n        aria-labelledby={triggerId}\n        hidden={!isSelected}\n        id={contentId}\n        tabIndex={0}\n        {...contentProps}\n        ref={forwardedRef}\n      >\n        {isSelected && children}\n      </Primitive.div>\n    );\n  }\n);\n\nTabsContent.displayName = CONTENT_NAME;\n\n/* ---------------------------------------------------------------------------------------------- */\n\nfunction makeTriggerId(baseId: string, value: string) {\n  return `${baseId}-trigger-${value}`;\n}\n\nfunction makeContentId(baseId: string, value: string) {\n  return `${baseId}-content-${value}`;\n}\n\nconst Root = Tabs;\nconst List = TabsList;\nconst Trigger = TabsTrigger;\nconst Content = TabsContent;\n\nexport {\n  createTabsScope,\n  //\n  Tabs,\n  TabsList,\n  TabsTrigger,\n  TabsContent,\n  //\n  Root,\n  List,\n  Trigger,\n  Content,\n};\nexport type { TabsProps, TabsListProps, TabsTriggerProps, TabsContentProps };\n"]},"metadata":{},"sourceType":"module"}