{"ast":null,"code":"import { useCallbackRef as e } from \"@radix-ui/react-use-callback-ref\";\nimport { Primitive as t } from \"@radix-ui/react-primitive\";\nimport { useComposedRefs as n } from \"@radix-ui/react-compose-refs\";\nimport * as o from \"react\";\nimport u from \"@babel/runtime/helpers/esm/extends\";\nconst c = {\n  bubbles: !1,\n  cancelable: !0\n};\nexport const FocusScope = /*#__PURE__*/o.forwardRef((i, f) => {\n  const {\n    loop: l = !1,\n    trapped: m = !1,\n    onMountAutoFocus: p,\n    onUnmountAutoFocus: v,\n    ...E\n  } = i,\n        [F, S] = o.useState(null),\n        b = e(p),\n        T = e(v),\n        y = o.useRef(null),\n        L = n(f, e => S(e)),\n        h = o.useRef({\n    paused: !1,\n\n    pause() {\n      this.paused = !0;\n    },\n\n    resume() {\n      this.paused = !1;\n    }\n\n  }).current;\n  o.useEffect(() => {\n    if (m) {\n      function e(e) {\n        if (h.paused || !F) return;\n        const t = e.target;\n        F.contains(t) ? y.current = t : a(y.current, {\n          select: !0\n        });\n      }\n\n      function t(e) {\n        !h.paused && F && (F.contains(e.relatedTarget) || a(y.current, {\n          select: !0\n        }));\n      }\n\n      return document.addEventListener(\"focusin\", e), document.addEventListener(\"focusout\", t), () => {\n        document.removeEventListener(\"focusin\", e), document.removeEventListener(\"focusout\", t);\n      };\n    }\n  }, [m, F, h.paused]), o.useEffect(() => {\n    if (F) {\n      d.add(h);\n      const t = document.activeElement;\n\n      if (!F.contains(t)) {\n        const n = new Event(\"focusScope.autoFocusOnMount\", c);\n        F.addEventListener(\"focusScope.autoFocusOnMount\", b), F.dispatchEvent(n), n.defaultPrevented || (!function (e) {\n          let {\n            select: t = !1\n          } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n          const n = document.activeElement;\n\n          for (const o of e) if (a(o, {\n            select: t\n          }), document.activeElement !== n) return;\n        }((e = r(F), e.filter(e => \"A\" !== e.tagName)), {\n          select: !0\n        }), document.activeElement === t && a(F));\n      }\n\n      return () => {\n        F.removeEventListener(\"focusScope.autoFocusOnMount\", b), setTimeout(() => {\n          const e = new Event(\"focusScope.autoFocusOnUnmount\", c);\n          F.addEventListener(\"focusScope.autoFocusOnUnmount\", T), F.dispatchEvent(e), e.defaultPrevented || a(null != t ? t : document.body, {\n            select: !0\n          }), F.removeEventListener(\"focusScope.autoFocusOnUnmount\", T), d.remove(h);\n        }, 0);\n      };\n    }\n\n    var e;\n  }, [F, b, T, h]);\n  const N = o.useCallback(e => {\n    if (!l && !m) return;\n    if (h.paused) return;\n    const t = \"Tab\" === e.key && !e.altKey && !e.ctrlKey && !e.metaKey,\n          n = document.activeElement;\n\n    if (t && n) {\n      const t = e.currentTarget,\n            [o, u] = function (e) {\n        const t = r(e),\n              n = s(t, e),\n              o = s(t.reverse(), e);\n        return [n, o];\n      }(t);\n\n      o && u ? e.shiftKey || n !== u ? e.shiftKey && n === o && (e.preventDefault(), l && a(u, {\n        select: !0\n      })) : (e.preventDefault(), l && a(o, {\n        select: !0\n      })) : n === t && e.preventDefault();\n    }\n  }, [l, m, h.paused]);\n  /*#__PURE__*/\n\n  return o.createElement(t.div, u({\n    tabIndex: -1\n  }, E, {\n    ref: L,\n    onKeyDown: N\n  }));\n});\n/*#__PURE__*/\n\nfunction r(e) {\n  const t = [],\n        n = document.createTreeWalker(e, NodeFilter.SHOW_ELEMENT, {\n    acceptNode: e => {\n      const t = \"INPUT\" === e.tagName && \"hidden\" === e.type;\n      return e.disabled || e.hidden || t ? NodeFilter.FILTER_SKIP : e.tabIndex >= 0 ? NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_SKIP;\n    }\n  });\n\n  for (; n.nextNode();) t.push(n.currentNode);\n\n  return t;\n}\n\nfunction s(e, t) {\n  for (const n of e) if (!i(n, {\n    upTo: t\n  })) return n;\n}\n\nfunction i(e, _ref) {\n  let {\n    upTo: t\n  } = _ref;\n  if (\"hidden\" === getComputedStyle(e).visibility) return !0;\n\n  for (; e;) {\n    if (void 0 !== t && e === t) return !1;\n    if (\"none\" === getComputedStyle(e).display) return !0;\n    e = e.parentElement;\n  }\n\n  return !1;\n}\n\nfunction a(e) {\n  let {\n    select: t = !1\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (e && e.focus) {\n    const n = document.activeElement;\n    e.focus({\n      preventScroll: !0\n    }), e !== n && function (e) {\n      return e instanceof HTMLInputElement && \"select\" in e;\n    }(e) && t && e.select();\n  }\n}\n\nconst d = function () {\n  let e = [];\n  return {\n    add(t) {\n      const n = e[0];\n      t !== n && (null == n || n.pause()), e = f(e, t), e.unshift(t);\n    },\n\n    remove(t) {\n      var n;\n      e = f(e, t), null === (n = e[0]) || void 0 === n || n.resume();\n    }\n\n  };\n}();\n\nfunction f(e, t) {\n  const n = [...e],\n        o = n.indexOf(t);\n  return -1 !== o && n.splice(o, 1), n;\n}\n\nexport const Root = FocusScope;","map":{"version":3,"mappings":"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","names":["EVENT_OPTIONS","bubbles","cancelable","FocusScope","React","forwardRef","props","forwardedRef","loop","trapped","onMountAutoFocus","onMountAutoFocusProp","onUnmountAutoFocus","onUnmountAutoFocusProp","scopeProps","container","setContainer","useState","useCallbackRef","lastFocusedElementRef","useRef","composedRefs","useComposedRefs","node","focusScope","paused","pause","this","resume","current","useEffect","handleFocusIn","event","target","contains","focus","select","handleFocusOut","relatedTarget","document","addEventListener","removeEventListener","focusScopesStack","add","previouslyFocusedElement","activeElement","mountEvent","Event","dispatchEvent","defaultPrevented","candidates","candidate","focusFirst","items","getTabbableCandidates","filter","item","tagName","setTimeout","unmountEvent","body","remove","handleKeyDown","useCallback","isTabKey","key","altKey","ctrlKey","metaKey","focusedElement","currentTarget","first","last","findVisible","reverse","getTabbableEdges","shiftKey","preventDefault","_react","Primitive","div","tabIndex","_babelRuntimeHelpersEsmExtends","ref","onKeyDown","nodes","walker","createTreeWalker","NodeFilter","SHOW_ELEMENT","acceptNode","isHiddenInput","type","disabled","hidden","FILTER_SKIP","FILTER_ACCEPT","nextNode","push","currentNode","elements","element","isHidden","upTo","getComputedStyle","visibility","undefined","display","parentElement","preventScroll","HTMLInputElement","isSelectableInput","stack","activeFocusScope","arrayRemove","unshift","_stack$","createFocusScopesStack","array","updatedArray","index","indexOf","splice","Root"],"sources":["C:\\Users\\lmore\\OneDrive\\Documents\\GitHub\\JacksOfAllTrades\\jacksofalltrades\\node_modules\\@aws-amplify\\ui-react\\node_modules\\@radix-ui\\react-dropdown-menu\\node_modules\\@radix-ui\\react-menu\\node_modules\\@radix-ui\\react-focus-scope\\dist\\packages\\react\\focus-scope\\src\\FocusScope.tsx"],"sourcesContent":["import * as React from 'react';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport { useCallbackRef } from '@radix-ui/react-use-callback-ref';\n\nimport type * as Radix from '@radix-ui/react-primitive';\n\nconst AUTOFOCUS_ON_MOUNT = 'focusScope.autoFocusOnMount';\nconst AUTOFOCUS_ON_UNMOUNT = 'focusScope.autoFocusOnUnmount';\nconst EVENT_OPTIONS = { bubbles: false, cancelable: true };\n\ntype FocusableTarget = HTMLElement | { focus(): void };\n\n/* -------------------------------------------------------------------------------------------------\n * FocusScope\n * -----------------------------------------------------------------------------------------------*/\n\nconst FOCUS_SCOPE_NAME = 'FocusScope';\n\ntype FocusScopeElement = React.ElementRef<typeof Primitive.div>;\ntype PrimitiveDivProps = Radix.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface FocusScopeProps extends PrimitiveDivProps {\n  /**\n   * When `true`, tabbing from last item will focus first tabbable\n   * and shift+tab from first item will focus last tababble.\n   * @defaultValue false\n   */\n  loop?: boolean;\n\n  /**\n   * When `true`, focus cannot escape the focus scope via keyboard,\n   * pointer, or a programmatic focus.\n   * @defaultValue false\n   */\n  trapped?: boolean;\n\n  /**\n   * Event handler called when auto-focusing on mount.\n   * Can be prevented.\n   */\n  onMountAutoFocus?: (event: Event) => void;\n\n  /**\n   * Event handler called when auto-focusing on unmount.\n   * Can be prevented.\n   */\n  onUnmountAutoFocus?: (event: Event) => void;\n}\n\nconst FocusScope = React.forwardRef<FocusScopeElement, FocusScopeProps>((props, forwardedRef) => {\n  const {\n    loop = false,\n    trapped = false,\n    onMountAutoFocus: onMountAutoFocusProp,\n    onUnmountAutoFocus: onUnmountAutoFocusProp,\n    ...scopeProps\n  } = props;\n  const [container, setContainer] = React.useState<HTMLElement | null>(null);\n  const onMountAutoFocus = useCallbackRef(onMountAutoFocusProp);\n  const onUnmountAutoFocus = useCallbackRef(onUnmountAutoFocusProp);\n  const lastFocusedElementRef = React.useRef<HTMLElement | null>(null);\n  const composedRefs = useComposedRefs(forwardedRef, (node) => setContainer(node));\n\n  const focusScope = React.useRef({\n    paused: false,\n    pause() {\n      this.paused = true;\n    },\n    resume() {\n      this.paused = false;\n    },\n  }).current;\n\n  // Takes care of trapping focus if focus is moved outside programmatically for example\n  React.useEffect(() => {\n    if (trapped) {\n      function handleFocusIn(event: FocusEvent) {\n        if (focusScope.paused || !container) return;\n        const target = event.target as HTMLElement | null;\n        if (container.contains(target)) {\n          lastFocusedElementRef.current = target;\n        } else {\n          focus(lastFocusedElementRef.current, { select: true });\n        }\n      }\n\n      function handleFocusOut(event: FocusEvent) {\n        if (focusScope.paused || !container) return;\n        if (!container.contains(event.relatedTarget as HTMLElement | null)) {\n          focus(lastFocusedElementRef.current, { select: true });\n        }\n      }\n\n      document.addEventListener('focusin', handleFocusIn);\n      document.addEventListener('focusout', handleFocusOut);\n      return () => {\n        document.removeEventListener('focusin', handleFocusIn);\n        document.removeEventListener('focusout', handleFocusOut);\n      };\n    }\n  }, [trapped, container, focusScope.paused]);\n\n  React.useEffect(() => {\n    if (container) {\n      focusScopesStack.add(focusScope);\n      const previouslyFocusedElement = document.activeElement as HTMLElement | null;\n      const hasFocusedCandidate = container.contains(previouslyFocusedElement);\n\n      if (!hasFocusedCandidate) {\n        const mountEvent = new Event(AUTOFOCUS_ON_MOUNT, EVENT_OPTIONS);\n        container.addEventListener(AUTOFOCUS_ON_MOUNT, onMountAutoFocus);\n        container.dispatchEvent(mountEvent);\n        if (!mountEvent.defaultPrevented) {\n          focusFirst(removeLinks(getTabbableCandidates(container)), { select: true });\n          if (document.activeElement === previouslyFocusedElement) {\n            focus(container);\n          }\n        }\n      }\n\n      return () => {\n        container.removeEventListener(AUTOFOCUS_ON_MOUNT, onMountAutoFocus);\n\n        // We hit a react bug (fixed in v17) with focusing in unmount.\n        // We need to delay the focus a little to get around it for now.\n        // See: https://github.com/facebook/react/issues/17894\n        setTimeout(() => {\n          const unmountEvent = new Event(AUTOFOCUS_ON_UNMOUNT, EVENT_OPTIONS);\n          container.addEventListener(AUTOFOCUS_ON_UNMOUNT, onUnmountAutoFocus);\n          container.dispatchEvent(unmountEvent);\n          if (!unmountEvent.defaultPrevented) {\n            focus(previouslyFocusedElement ?? document.body, { select: true });\n          }\n          // we need to remove the listener after we `dispatchEvent`\n          container.removeEventListener(AUTOFOCUS_ON_UNMOUNT, onUnmountAutoFocus);\n\n          focusScopesStack.remove(focusScope);\n        }, 0);\n      };\n    }\n  }, [container, onMountAutoFocus, onUnmountAutoFocus, focusScope]);\n\n  // Takes care of looping focus (when tabbing whilst at the edges)\n  const handleKeyDown = React.useCallback(\n    (event: React.KeyboardEvent) => {\n      if (!loop && !trapped) return;\n      if (focusScope.paused) return;\n\n      const isTabKey = event.key === 'Tab' && !event.altKey && !event.ctrlKey && !event.metaKey;\n      const focusedElement = document.activeElement as HTMLElement | null;\n\n      if (isTabKey && focusedElement) {\n        const container = event.currentTarget as HTMLElement;\n        const [first, last] = getTabbableEdges(container);\n        const hasTabbableElementsInside = first && last;\n\n        // we can only wrap focus if we have tabbable edges\n        if (!hasTabbableElementsInside) {\n          if (focusedElement === container) event.preventDefault();\n        } else {\n          if (!event.shiftKey && focusedElement === last) {\n            event.preventDefault();\n            if (loop) focus(first, { select: true });\n          } else if (event.shiftKey && focusedElement === first) {\n            event.preventDefault();\n            if (loop) focus(last, { select: true });\n          }\n        }\n      }\n    },\n    [loop, trapped, focusScope.paused]\n  );\n\n  return (\n    <Primitive.div tabIndex={-1} {...scopeProps} ref={composedRefs} onKeyDown={handleKeyDown} />\n  );\n});\n\nFocusScope.displayName = FOCUS_SCOPE_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * Utils\n * -----------------------------------------------------------------------------------------------*/\n\n/**\n * Attempts focusing the first element in a list of candidates.\n * Stops when focus has actually moved.\n */\nfunction focusFirst(candidates: HTMLElement[], { select = false } = {}) {\n  const previouslyFocusedElement = document.activeElement;\n  for (const candidate of candidates) {\n    focus(candidate, { select });\n    if (document.activeElement !== previouslyFocusedElement) return;\n  }\n}\n\n/**\n * Returns the first and last tabbable elements inside a container.\n */\nfunction getTabbableEdges(container: HTMLElement) {\n  const candidates = getTabbableCandidates(container);\n  const first = findVisible(candidates, container);\n  const last = findVisible(candidates.reverse(), container);\n  return [first, last] as const;\n}\n\n/**\n * Returns a list of potential tabbable candidates.\n *\n * NOTE: This is only a close approximation. For example it doesn't take into account cases like when\n * elements are not visible. This cannot be worked out easily by just reading a property, but rather\n * necessitate runtime knowledge (computed styles, etc). We deal with these cases separately.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/TreeWalker\n * Credit: https://github.com/discord/focus-layers/blob/master/src/util/wrapFocus.tsx#L1\n */\nfunction getTabbableCandidates(container: HTMLElement) {\n  const nodes: HTMLElement[] = [];\n  const walker = document.createTreeWalker(container, NodeFilter.SHOW_ELEMENT, {\n    acceptNode: (node: any) => {\n      const isHiddenInput = node.tagName === 'INPUT' && node.type === 'hidden';\n      if (node.disabled || node.hidden || isHiddenInput) return NodeFilter.FILTER_SKIP;\n      // `.tabIndex` is not the same as the `tabindex` attribute. It works on the\n      // runtime's understanding of tabbability, so this automatically accounts\n      // for any kind of element that could be tabbed to.\n      return node.tabIndex >= 0 ? NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_SKIP;\n    },\n  });\n  while (walker.nextNode()) nodes.push(walker.currentNode as HTMLElement);\n  // we do not take into account the order of nodes with positive `tabIndex` as it\n  // hinders accessibility to have tab order different from visual order.\n  return nodes;\n}\n\n/**\n * Returns the first visible element in a list.\n * NOTE: Only checks visibility up to the `container`.\n */\nfunction findVisible(elements: HTMLElement[], container: HTMLElement) {\n  for (const element of elements) {\n    // we stop checking if it's hidden at the `container` level (excluding)\n    if (!isHidden(element, { upTo: container })) return element;\n  }\n}\n\nfunction isHidden(node: HTMLElement, { upTo }: { upTo?: HTMLElement }) {\n  if (getComputedStyle(node).visibility === 'hidden') return true;\n  while (node) {\n    // we stop at `upTo` (excluding it)\n    if (upTo !== undefined && node === upTo) return false;\n    if (getComputedStyle(node).display === 'none') return true;\n    node = node.parentElement as HTMLElement;\n  }\n  return false;\n}\n\nfunction isSelectableInput(element: any): element is FocusableTarget & { select: () => void } {\n  return element instanceof HTMLInputElement && 'select' in element;\n}\n\nfunction focus(element?: FocusableTarget | null, { select = false } = {}) {\n  // only focus if that element is focusable\n  if (element && element.focus) {\n    const previouslyFocusedElement = document.activeElement;\n    // NOTE: we prevent scrolling on focus, to minimize jarring transitions for users\n    element.focus({ preventScroll: true });\n    // only select if its not the same element, it supports selection and we need to select\n    if (element !== previouslyFocusedElement && isSelectableInput(element) && select)\n      element.select();\n  }\n}\n\n/* -------------------------------------------------------------------------------------------------\n * FocusScope stack\n * -----------------------------------------------------------------------------------------------*/\n\ntype FocusScopeAPI = { paused: boolean; pause(): void; resume(): void };\nconst focusScopesStack = createFocusScopesStack();\n\nfunction createFocusScopesStack() {\n  /** A stack of focus scopes, with the active one at the top */\n  let stack: FocusScopeAPI[] = [];\n\n  return {\n    add(focusScope: FocusScopeAPI) {\n      // pause the currently active focus scope (at the top of the stack)\n      const activeFocusScope = stack[0];\n      if (focusScope !== activeFocusScope) {\n        activeFocusScope?.pause();\n      }\n      // remove in case it already exists (because we'll re-add it at the top of the stack)\n      stack = arrayRemove(stack, focusScope);\n      stack.unshift(focusScope);\n    },\n\n    remove(focusScope: FocusScopeAPI) {\n      stack = arrayRemove(stack, focusScope);\n      stack[0]?.resume();\n    },\n  };\n}\n\nfunction arrayRemove<T>(array: T[], item: T) {\n  const updatedArray = [...array];\n  const index = updatedArray.indexOf(item);\n  if (index !== -1) {\n    updatedArray.splice(index, 1);\n  }\n  return updatedArray;\n}\n\nfunction removeLinks(items: HTMLElement[]) {\n  return items.filter((item) => item.tagName !== 'A');\n}\n\nconst Root = FocusScope;\n\nexport {\n  FocusScope,\n  //\n  Root,\n};\nexport type { FocusScopeProps };\n"]},"metadata":{},"sourceType":"module"}