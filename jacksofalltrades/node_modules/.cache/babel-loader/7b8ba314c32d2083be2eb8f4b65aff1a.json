{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar destination_1 = __importDefault(require(\"@turf/destination\"));\n\nvar helpers_1 = require(\"@turf/helpers\");\n/**\n * Takes a {@link Point} and calculates the circle polygon given a radius in degrees, radians, miles, or kilometers; and steps for precision.\n *\n * @name circle\n * @param {Feature<Point>|number[]} center center point\n * @param {number} radius radius of the circle\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.steps=64] number of steps\n * @param {string} [options.units='kilometers'] miles, kilometers, degrees, or radians\n * @param {Object} [options.properties={}] properties\n * @returns {Feature<Polygon>} circle polygon\n * @example\n * var center = [-75.343, 39.984];\n * var radius = 5;\n * var options = {steps: 10, units: 'kilometers', properties: {foo: 'bar'}};\n * var circle = turf.circle(center, radius, options);\n *\n * //addToMap\n * var addToMap = [turf.point(center), circle]\n */\n\n\nfunction circle(center, radius, options) {\n  if (options === void 0) {\n    options = {};\n  } // default params\n\n\n  var steps = options.steps || 64;\n  var properties = options.properties ? options.properties : !Array.isArray(center) && center.type === \"Feature\" && center.properties ? center.properties : {}; // main\n\n  var coordinates = [];\n\n  for (var i = 0; i < steps; i++) {\n    coordinates.push(destination_1.default(center, radius, i * -360 / steps, options).geometry.coordinates);\n  }\n\n  coordinates.push(coordinates[0]);\n  return helpers_1.polygon([coordinates], properties);\n}\n\nexports.default = circle;","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","destination_1","require","helpers_1","circle","center","radius","options","steps","properties","Array","isArray","type","coordinates","i","push","default","geometry","polygon"],"sources":["C:/Users/lmore/OneDrive/Documents/GitHub/JacksOfAllTrades/jacksofalltrades/node_modules/@turf/circle/dist/js/index.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar destination_1 = __importDefault(require(\"@turf/destination\"));\nvar helpers_1 = require(\"@turf/helpers\");\n/**\n * Takes a {@link Point} and calculates the circle polygon given a radius in degrees, radians, miles, or kilometers; and steps for precision.\n *\n * @name circle\n * @param {Feature<Point>|number[]} center center point\n * @param {number} radius radius of the circle\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.steps=64] number of steps\n * @param {string} [options.units='kilometers'] miles, kilometers, degrees, or radians\n * @param {Object} [options.properties={}] properties\n * @returns {Feature<Polygon>} circle polygon\n * @example\n * var center = [-75.343, 39.984];\n * var radius = 5;\n * var options = {steps: 10, units: 'kilometers', properties: {foo: 'bar'}};\n * var circle = turf.circle(center, radius, options);\n *\n * //addToMap\n * var addToMap = [turf.point(center), circle]\n */\nfunction circle(center, radius, options) {\n    if (options === void 0) { options = {}; }\n    // default params\n    var steps = options.steps || 64;\n    var properties = options.properties\n        ? options.properties\n        : !Array.isArray(center) && center.type === \"Feature\" && center.properties\n            ? center.properties\n            : {};\n    // main\n    var coordinates = [];\n    for (var i = 0; i < steps; i++) {\n        coordinates.push(destination_1.default(center, radius, (i * -360) / steps, options).geometry\n            .coordinates);\n    }\n    coordinates.push(coordinates[0]);\n    return helpers_1.polygon([coordinates], properties);\n}\nexports.default = circle;\n"],"mappings":"AAAA;;AACA,IAAIA,eAAe,GAAI,QAAQ,KAAKA,eAAd,IAAkC,UAAUC,GAAV,EAAe;EACnE,OAAQA,GAAG,IAAIA,GAAG,CAACC,UAAZ,GAA0BD,GAA1B,GAAgC;IAAE,WAAWA;EAAb,CAAvC;AACH,CAFD;;AAGAE,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIC,aAAa,GAAGP,eAAe,CAACQ,OAAO,CAAC,mBAAD,CAAR,CAAnC;;AACA,IAAIC,SAAS,GAAGD,OAAO,CAAC,eAAD,CAAvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASE,MAAT,CAAgBC,MAAhB,EAAwBC,MAAxB,EAAgCC,OAAhC,EAAyC;EACrC,IAAIA,OAAO,KAAK,KAAK,CAArB,EAAwB;IAAEA,OAAO,GAAG,EAAV;EAAe,CADJ,CAErC;;;EACA,IAAIC,KAAK,GAAGD,OAAO,CAACC,KAAR,IAAiB,EAA7B;EACA,IAAIC,UAAU,GAAGF,OAAO,CAACE,UAAR,GACXF,OAAO,CAACE,UADG,GAEX,CAACC,KAAK,CAACC,OAAN,CAAcN,MAAd,CAAD,IAA0BA,MAAM,CAACO,IAAP,KAAgB,SAA1C,IAAuDP,MAAM,CAACI,UAA9D,GACIJ,MAAM,CAACI,UADX,GAEI,EAJV,CAJqC,CASrC;;EACA,IAAII,WAAW,GAAG,EAAlB;;EACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,KAApB,EAA2BM,CAAC,EAA5B,EAAgC;IAC5BD,WAAW,CAACE,IAAZ,CAAiBd,aAAa,CAACe,OAAd,CAAsBX,MAAtB,EAA8BC,MAA9B,EAAuCQ,CAAC,GAAG,CAAC,GAAN,GAAaN,KAAnD,EAA0DD,OAA1D,EAAmEU,QAAnE,CACZJ,WADL;EAEH;;EACDA,WAAW,CAACE,IAAZ,CAAiBF,WAAW,CAAC,CAAD,CAA5B;EACA,OAAOV,SAAS,CAACe,OAAV,CAAkB,CAACL,WAAD,CAAlB,EAAiCJ,UAAjC,CAAP;AACH;;AACDV,OAAO,CAACiB,OAAR,GAAkBZ,MAAlB"},"metadata":{},"sourceType":"script"}