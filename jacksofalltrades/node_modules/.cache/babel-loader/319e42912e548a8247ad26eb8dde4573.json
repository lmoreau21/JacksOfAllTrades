{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nimport { exhaustiveCheck, isAWSDate, isAWSTime, isAWSDateTime, isAWSTimestamp, isAWSEmail, isAWSJSON, isAWSURL, isAWSPhone, isAWSIPAddress } from './util';\nexport function isSchemaModel(obj) {\n  return obj && obj.pluralName !== undefined;\n}\nexport function isAssociatedWith(obj) {\n  return obj && obj.associatedWith;\n}\nexport function isTargetNameAssociation(obj) {\n  return obj && obj.targetName;\n}\nexport function isModelAttributeAuth(attr) {\n  return attr.type === 'auth' && attr.properties && attr.properties.rules && attr.properties.rules.length > 0;\n}\nexport function isModelAttributeKey(attr) {\n  return attr.type === 'key' && attr.properties && attr.properties.fields && attr.properties.fields.length > 0;\n}\nexport function isModelAttributePrimaryKey(attr) {\n  return isModelAttributeKey(attr) && attr.properties.name === undefined;\n}\nexport function isModelAttributeCompositeKey(attr) {\n  return isModelAttributeKey(attr) && attr.properties.name !== undefined && attr.properties.fields.length > 2;\n}\nexport var ModelAttributeAuthAllow;\n\n(function (ModelAttributeAuthAllow) {\n  ModelAttributeAuthAllow[\"CUSTOM\"] = \"custom\";\n  ModelAttributeAuthAllow[\"OWNER\"] = \"owner\";\n  ModelAttributeAuthAllow[\"GROUPS\"] = \"groups\";\n  ModelAttributeAuthAllow[\"PRIVATE\"] = \"private\";\n  ModelAttributeAuthAllow[\"PUBLIC\"] = \"public\";\n})(ModelAttributeAuthAllow || (ModelAttributeAuthAllow = {}));\n\nexport var ModelAttributeAuthProvider;\n\n(function (ModelAttributeAuthProvider) {\n  ModelAttributeAuthProvider[\"FUNCTION\"] = \"function\";\n  ModelAttributeAuthProvider[\"USER_POOLS\"] = \"userPools\";\n  ModelAttributeAuthProvider[\"OIDC\"] = \"oidc\";\n  ModelAttributeAuthProvider[\"IAM\"] = \"iam\";\n  ModelAttributeAuthProvider[\"API_KEY\"] = \"apiKey\";\n})(ModelAttributeAuthProvider || (ModelAttributeAuthProvider = {}));\n\nexport var GraphQLScalarType;\n\n(function (GraphQLScalarType) {\n  GraphQLScalarType[GraphQLScalarType[\"ID\"] = 0] = \"ID\";\n  GraphQLScalarType[GraphQLScalarType[\"String\"] = 1] = \"String\";\n  GraphQLScalarType[GraphQLScalarType[\"Int\"] = 2] = \"Int\";\n  GraphQLScalarType[GraphQLScalarType[\"Float\"] = 3] = \"Float\";\n  GraphQLScalarType[GraphQLScalarType[\"Boolean\"] = 4] = \"Boolean\";\n  GraphQLScalarType[GraphQLScalarType[\"AWSDate\"] = 5] = \"AWSDate\";\n  GraphQLScalarType[GraphQLScalarType[\"AWSTime\"] = 6] = \"AWSTime\";\n  GraphQLScalarType[GraphQLScalarType[\"AWSDateTime\"] = 7] = \"AWSDateTime\";\n  GraphQLScalarType[GraphQLScalarType[\"AWSTimestamp\"] = 8] = \"AWSTimestamp\";\n  GraphQLScalarType[GraphQLScalarType[\"AWSEmail\"] = 9] = \"AWSEmail\";\n  GraphQLScalarType[GraphQLScalarType[\"AWSJSON\"] = 10] = \"AWSJSON\";\n  GraphQLScalarType[GraphQLScalarType[\"AWSURL\"] = 11] = \"AWSURL\";\n  GraphQLScalarType[GraphQLScalarType[\"AWSPhone\"] = 12] = \"AWSPhone\";\n  GraphQLScalarType[GraphQLScalarType[\"AWSIPAddress\"] = 13] = \"AWSIPAddress\";\n})(GraphQLScalarType || (GraphQLScalarType = {}));\n\n(function (GraphQLScalarType) {\n  function getJSType(scalar) {\n    switch (scalar) {\n      case 'Boolean':\n        return 'boolean';\n\n      case 'ID':\n      case 'String':\n      case 'AWSDate':\n      case 'AWSTime':\n      case 'AWSDateTime':\n      case 'AWSEmail':\n      case 'AWSURL':\n      case 'AWSPhone':\n      case 'AWSIPAddress':\n        return 'string';\n\n      case 'Int':\n      case 'Float':\n      case 'AWSTimestamp':\n        return 'number';\n\n      case 'AWSJSON':\n        return 'object';\n\n      default:\n        exhaustiveCheck(scalar);\n    }\n  }\n\n  GraphQLScalarType.getJSType = getJSType;\n\n  function getValidationFunction(scalar) {\n    switch (scalar) {\n      case 'AWSDate':\n        return isAWSDate;\n\n      case 'AWSTime':\n        return isAWSTime;\n\n      case 'AWSDateTime':\n        return isAWSDateTime;\n\n      case 'AWSTimestamp':\n        return isAWSTimestamp;\n\n      case 'AWSEmail':\n        return isAWSEmail;\n\n      case 'AWSJSON':\n        return isAWSJSON;\n\n      case 'AWSURL':\n        return isAWSURL;\n\n      case 'AWSPhone':\n        return isAWSPhone;\n\n      case 'AWSIPAddress':\n        return isAWSIPAddress;\n\n      default:\n        return undefined;\n    }\n  }\n\n  GraphQLScalarType.getValidationFunction = getValidationFunction;\n})(GraphQLScalarType || (GraphQLScalarType = {}));\n\nexport function isGraphQLScalarType(obj) {\n  return obj && GraphQLScalarType[obj] !== undefined;\n}\nexport function isModelFieldType(obj) {\n  var modelField = 'model';\n  if (obj && obj[modelField]) return true;\n  return false;\n}\nexport function isNonModelFieldType(obj) {\n  var typeField = 'nonModel';\n  if (obj && obj[typeField]) return true;\n  return false;\n}\nexport function isEnumFieldType(obj) {\n  var modelField = 'enum';\n  if (obj && obj[modelField]) return true;\n  return false;\n} //#endregion\n//#region Subscription messages\n\nexport var OpType;\n\n(function (OpType) {\n  OpType[\"INSERT\"] = \"INSERT\";\n  OpType[\"UPDATE\"] = \"UPDATE\";\n  OpType[\"DELETE\"] = \"DELETE\";\n})(OpType || (OpType = {}));\n\nexport function isPredicateObj(obj) {\n  return obj && obj.field !== undefined;\n}\nexport function isPredicateGroup(obj) {\n  return obj && obj.type !== undefined;\n}\nexport var QueryOne;\n\n(function (QueryOne) {\n  QueryOne[QueryOne[\"FIRST\"] = 0] = \"FIRST\";\n  QueryOne[QueryOne[\"LAST\"] = 1] = \"LAST\";\n})(QueryOne || (QueryOne = {}));\n\nexport var SortDirection;\n\n(function (SortDirection) {\n  SortDirection[\"ASCENDING\"] = \"ASCENDING\";\n  SortDirection[\"DESCENDING\"] = \"DESCENDING\";\n})(SortDirection || (SortDirection = {}));\n\nexport var AuthModeStrategyType;\n\n(function (AuthModeStrategyType) {\n  AuthModeStrategyType[\"DEFAULT\"] = \"DEFAULT\";\n  AuthModeStrategyType[\"MULTI_AUTH\"] = \"MULTI_AUTH\";\n})(AuthModeStrategyType || (AuthModeStrategyType = {}));\n\nexport var ModelOperation;\n\n(function (ModelOperation) {\n  ModelOperation[\"CREATE\"] = \"CREATE\";\n  ModelOperation[\"READ\"] = \"READ\";\n  ModelOperation[\"UPDATE\"] = \"UPDATE\";\n  ModelOperation[\"DELETE\"] = \"DELETE\";\n})(ModelOperation || (ModelOperation = {}));\n\nexport function syncExpression(modelConstructor, conditionProducer) {\n  return __awaiter(this, void 0, void 0, function () {\n    return __generator(this, function (_a) {\n      return [2\n      /*return*/\n      , {\n        modelConstructor: modelConstructor,\n        conditionProducer: conditionProducer\n      }];\n    });\n  });\n}\nexport var ProcessName;\n\n(function (ProcessName) {\n  ProcessName[\"sync\"] = \"sync\";\n  ProcessName[\"mutate\"] = \"mutate\";\n  ProcessName[\"subscribe\"] = \"subscribe\";\n})(ProcessName || (ProcessName = {}));\n\nexport var DISCARD = Symbol('DISCARD');\nexport var LimitTimerRaceResolvedValues;\n\n(function (LimitTimerRaceResolvedValues) {\n  LimitTimerRaceResolvedValues[\"LIMIT\"] = \"LIMIT\";\n  LimitTimerRaceResolvedValues[\"TIMER\"] = \"TIMER\";\n})(LimitTimerRaceResolvedValues || (LimitTimerRaceResolvedValues = {}));","map":{"version":3,"mappings":"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","names":["exhaustiveCheck","isAWSDate","isAWSTime","isAWSDateTime","isAWSTimestamp","isAWSEmail","isAWSJSON","isAWSURL","isAWSPhone","isAWSIPAddress","isSchemaModel","obj","pluralName","undefined","isAssociatedWith","associatedWith","isTargetNameAssociation","targetName","isModelAttributeAuth","attr","type","properties","rules","length","isModelAttributeKey","fields","isModelAttributePrimaryKey","name","isModelAttributeCompositeKey","ModelAttributeAuthAllow","ModelAttributeAuthProvider","GraphQLScalarType","getJSType","scalar","getValidationFunction","isGraphQLScalarType","isModelFieldType","modelField","isNonModelFieldType","typeField","isEnumFieldType","OpType","isPredicateObj","field","isPredicateGroup","QueryOne","SortDirection","AuthModeStrategyType","ModelOperation","syncExpression","modelConstructor","conditionProducer","ProcessName","DISCARD","Symbol","LimitTimerRaceResolvedValues"],"sources":["C:\\Users\\lmore\\OneDrive\\Documents\\GitHub\\JacksOfAllTrades\\jacksofalltrades\\node_modules\\@aws-amplify\\datastore\\src\\types.ts"],"sourcesContent":["import { ModelInstanceCreator } from './datastore/datastore';\nimport {\n\texhaustiveCheck,\n\tisAWSDate,\n\tisAWSTime,\n\tisAWSDateTime,\n\tisAWSTimestamp,\n\tisAWSEmail,\n\tisAWSJSON,\n\tisAWSURL,\n\tisAWSPhone,\n\tisAWSIPAddress,\n} from './util';\nimport { PredicateAll } from './predicates';\nimport { GRAPHQL_AUTH_MODE } from '@aws-amplify/api-graphql';\nimport { Auth } from '@aws-amplify/auth';\nimport { API } from '@aws-amplify/api';\nimport Cache from '@aws-amplify/cache';\nimport { Adapter } from './storage/adapter';\n\n//#region Schema types\nexport type Schema = UserSchema & {\n\tversion: string;\n};\nexport type UserSchema = {\n\tmodels: SchemaModels;\n\tnonModels?: SchemaNonModels;\n\trelationships?: RelationshipType;\n\tkeys?: ModelKeys;\n\tenums: SchemaEnums;\n\tmodelTopologicalOrdering?: Map<string, string[]>;\n};\nexport type InternalSchema = {\n\tnamespaces: SchemaNamespaces;\n\tversion: string;\n};\nexport type SchemaNamespaces = Record<string, SchemaNamespace>;\nexport type SchemaNamespace = UserSchema & {\n\tname: string;\n};\nexport type SchemaModels = Record<string, SchemaModel>;\nexport type SchemaModel = {\n\tname: string;\n\tpluralName: string;\n\tattributes?: ModelAttributes;\n\tfields: ModelFields;\n\tsyncable?: boolean;\n};\nexport function isSchemaModel(obj: any): obj is SchemaModel {\n\treturn obj && (<SchemaModel>obj).pluralName !== undefined;\n}\nexport type SchemaNonModels = Record<string, SchemaNonModel>;\nexport type SchemaNonModel = {\n\tname: string;\n\tfields: ModelFields;\n};\ntype SchemaEnums = Record<string, SchemaEnum>;\ntype SchemaEnum = {\n\tname: string;\n\tvalues: string[];\n};\n\nexport type ModelAssociation = AssociatedWith | TargetNameAssociation;\ntype AssociatedWith = {\n\tconnectionType: 'HAS_MANY' | 'HAS_ONE';\n\tassociatedWith: string;\n\ttargetName?: string;\n};\nexport function isAssociatedWith(obj: any): obj is AssociatedWith {\n\treturn obj && obj.associatedWith;\n}\n\ntype TargetNameAssociation = {\n\tconnectionType: 'BELONGS_TO';\n\ttargetName: string;\n};\nexport function isTargetNameAssociation(\n\tobj: any\n): obj is TargetNameAssociation {\n\treturn obj && obj.targetName;\n}\n\nexport type ModelAttributes = ModelAttribute[];\ntype ModelAttribute = { type: string; properties?: Record<string, any> };\n\nexport type ModelAuthRule = {\n\tallow: string;\n\tprovider?: string;\n\toperations?: string[];\n\townerField?: string;\n\tidentityClaim?: string;\n\tgroups?: string[];\n\tgroupClaim?: string;\n\tgroupsField?: string;\n};\n\nexport type ModelAttributeAuth = {\n\ttype: 'auth';\n\tproperties: {\n\t\trules: ModelAuthRule[];\n\t};\n};\n\nexport function isModelAttributeAuth(\n\tattr: ModelAttribute\n): attr is ModelAttributeAuth {\n\treturn (\n\t\tattr.type === 'auth' &&\n\t\tattr.properties &&\n\t\tattr.properties.rules &&\n\t\tattr.properties.rules.length > 0\n\t);\n}\n\ntype ModelAttributeKey = {\n\ttype: 'key';\n\tproperties: {\n\t\tname?: string;\n\t\tfields: string[];\n\t};\n};\n\ntype ModelAttributePrimaryKey = {\n\ttype: 'key';\n\tproperties: {\n\t\tfields: string[];\n\t};\n};\n\ntype ModelAttributeCompositeKey = {\n\ttype: 'key';\n\tproperties: {\n\t\tname: string;\n\t\tfields: [string, string, string, string?, string?];\n\t};\n};\n\nexport function isModelAttributeKey(\n\tattr: ModelAttribute\n): attr is ModelAttributeKey {\n\treturn (\n\t\tattr.type === 'key' &&\n\t\tattr.properties &&\n\t\tattr.properties.fields &&\n\t\tattr.properties.fields.length > 0\n\t);\n}\n\nexport function isModelAttributePrimaryKey(\n\tattr: ModelAttribute\n): attr is ModelAttributePrimaryKey {\n\treturn isModelAttributeKey(attr) && attr.properties.name === undefined;\n}\n\nexport function isModelAttributeCompositeKey(\n\tattr: ModelAttribute\n): attr is ModelAttributeCompositeKey {\n\treturn (\n\t\tisModelAttributeKey(attr) &&\n\t\tattr.properties.name !== undefined &&\n\t\tattr.properties.fields.length > 2\n\t);\n}\n\nexport type ModelAttributeAuthProperty = {\n\tallow: ModelAttributeAuthAllow;\n\tidentityClaim?: string;\n\tgroupClaim?: string;\n\tgroups?: string[];\n\toperations?: string[];\n\townerField?: string;\n\tprovider?: ModelAttributeAuthProvider;\n};\n\nexport enum ModelAttributeAuthAllow {\n\tCUSTOM = 'custom',\n\tOWNER = 'owner',\n\tGROUPS = 'groups',\n\tPRIVATE = 'private',\n\tPUBLIC = 'public',\n}\n\nexport enum ModelAttributeAuthProvider {\n\tFUNCTION = 'function',\n\tUSER_POOLS = 'userPools',\n\tOIDC = 'oidc',\n\tIAM = 'iam',\n\tAPI_KEY = 'apiKey',\n}\n\nexport type ModelFields = Record<string, ModelField>;\nexport enum GraphQLScalarType {\n\tID,\n\tString,\n\tInt,\n\tFloat,\n\tBoolean,\n\tAWSDate,\n\tAWSTime,\n\tAWSDateTime,\n\tAWSTimestamp,\n\tAWSEmail,\n\tAWSJSON,\n\tAWSURL,\n\tAWSPhone,\n\tAWSIPAddress,\n}\n\nexport namespace GraphQLScalarType {\n\texport function getJSType(\n\t\tscalar: keyof Omit<\n\t\t\ttypeof GraphQLScalarType,\n\t\t\t'getJSType' | 'getValidationFunction'\n\t\t>\n\t): 'string' | 'number' | 'boolean' | 'object' {\n\t\tswitch (scalar) {\n\t\t\tcase 'Boolean':\n\t\t\t\treturn 'boolean';\n\t\t\tcase 'ID':\n\t\t\tcase 'String':\n\t\t\tcase 'AWSDate':\n\t\t\tcase 'AWSTime':\n\t\t\tcase 'AWSDateTime':\n\t\t\tcase 'AWSEmail':\n\t\t\tcase 'AWSURL':\n\t\t\tcase 'AWSPhone':\n\t\t\tcase 'AWSIPAddress':\n\t\t\t\treturn 'string';\n\t\t\tcase 'Int':\n\t\t\tcase 'Float':\n\t\t\tcase 'AWSTimestamp':\n\t\t\t\treturn 'number';\n\t\t\tcase 'AWSJSON':\n\t\t\t\treturn 'object';\n\t\t\tdefault:\n\t\t\t\texhaustiveCheck(scalar as never);\n\t\t}\n\t}\n\n\texport function getValidationFunction(\n\t\tscalar: keyof Omit<\n\t\t\ttypeof GraphQLScalarType,\n\t\t\t'getJSType' | 'getValidationFunction'\n\t\t>\n\t): ((val: string | number) => boolean) | undefined {\n\t\tswitch (scalar) {\n\t\t\tcase 'AWSDate':\n\t\t\t\treturn isAWSDate;\n\t\t\tcase 'AWSTime':\n\t\t\t\treturn isAWSTime;\n\t\t\tcase 'AWSDateTime':\n\t\t\t\treturn isAWSDateTime;\n\t\t\tcase 'AWSTimestamp':\n\t\t\t\treturn isAWSTimestamp;\n\t\t\tcase 'AWSEmail':\n\t\t\t\treturn isAWSEmail;\n\t\t\tcase 'AWSJSON':\n\t\t\t\treturn isAWSJSON;\n\t\t\tcase 'AWSURL':\n\t\t\t\treturn isAWSURL;\n\t\t\tcase 'AWSPhone':\n\t\t\t\treturn isAWSPhone;\n\t\t\tcase 'AWSIPAddress':\n\t\t\t\treturn isAWSIPAddress;\n\t\t\tdefault:\n\t\t\t\treturn undefined;\n\t\t}\n\t}\n}\n\nexport type AuthorizationRule = {\n\tidentityClaim: string;\n\townerField: string;\n\tprovider: 'userPools' | 'oidc' | 'iam' | 'apiKey';\n\tgroupClaim: string;\n\tgroups: [string];\n\tauthStrategy: 'owner' | 'groups' | 'private' | 'public';\n\tareSubscriptionsPublic: boolean;\n};\n\nexport function isGraphQLScalarType(\n\tobj: any\n): obj is keyof Omit<\n\ttypeof GraphQLScalarType,\n\t'getJSType' | 'getValidationFunction'\n> {\n\treturn obj && GraphQLScalarType[obj] !== undefined;\n}\n\nexport type ModelFieldType = { model: string };\nexport function isModelFieldType(obj: any): obj is ModelFieldType {\n\tconst modelField: keyof ModelFieldType = 'model';\n\tif (obj && obj[modelField]) return true;\n\n\treturn false;\n}\n\nexport type NonModelFieldType = { nonModel: string };\nexport function isNonModelFieldType(obj: any): obj is NonModelFieldType {\n\tconst typeField: keyof NonModelFieldType = 'nonModel';\n\tif (obj && obj[typeField]) return true;\n\n\treturn false;\n}\n\ntype EnumFieldType = { enum: string };\nexport function isEnumFieldType(obj: any): obj is EnumFieldType {\n\tconst modelField: keyof EnumFieldType = 'enum';\n\tif (obj && obj[modelField]) return true;\n\n\treturn false;\n}\n\nexport type ModelField = {\n\tname: string;\n\ttype:\n\t\t| keyof Omit<\n\t\t\t\ttypeof GraphQLScalarType,\n\t\t\t\t'getJSType' | 'getValidationFunction'\n\t\t  >\n\t\t| ModelFieldType\n\t\t| NonModelFieldType\n\t\t| EnumFieldType;\n\tisArray: boolean;\n\tisRequired?: boolean;\n\tisReadOnly?: boolean;\n\tisArrayNullable?: boolean;\n\tassociation?: ModelAssociation;\n\tattributes?: ModelAttributes[];\n};\n//#endregion\n\n//#region Model definition\nexport type NonModelTypeConstructor<T> = {\n\tnew (init: T): T;\n};\n\n// Class for model\nexport type PersistentModelConstructor<\n\tT extends PersistentModel,\n\tK extends PersistentModelMetaData = {\n\t\treadOnlyFields: 'createdAt' | 'updatedAt';\n\t}\n> = {\n\tnew (init: ModelInit<T, K>): T;\n\tcopyOf(src: T, mutator: (draft: MutableModel<T, K>) => void): T;\n};\n\nexport type TypeConstructorMap = Record<\n\tstring,\n\tPersistentModelConstructor<any> | NonModelTypeConstructor<any>\n>;\n\n// Instance of model\nexport type PersistentModelMetaData = {\n\treadOnlyFields: string;\n};\n\nexport type PersistentModel = Readonly<{ id: string } & Record<string, any>>;\nexport type ModelInit<\n\tT,\n\tK extends PersistentModelMetaData = {\n\t\treadOnlyFields: 'createdAt' | 'updatedAt';\n\t}\n> = Omit<T, 'id' | K['readOnlyFields']>;\ntype DeepWritable<T> = {\n\t-readonly [P in keyof T]: T[P] extends TypeName<T[P]>\n\t\t? T[P]\n\t\t: DeepWritable<T[P]>;\n};\n\nexport type MutableModel<\n\tT extends Record<string, any>,\n\tK extends PersistentModelMetaData = {\n\t\treadOnlyFields: 'createdAt' | 'updatedAt';\n\t}\n\t// This provides Intellisense with ALL of the properties, regardless of read-only\n\t// but will throw a linting error if trying to overwrite a read-only property\n> = DeepWritable<Omit<T, 'id' | K['readOnlyFields']>> &\n\tReadonly<Pick<T, 'id' | K['readOnlyFields']>>;\n\nexport type ModelInstanceMetadata = {\n\tid: string;\n\t_version: number;\n\t_lastChangedAt: number;\n\t_deleted: boolean;\n};\n\n//#endregion\n\n//#region Subscription messages\nexport enum OpType {\n\tINSERT = 'INSERT',\n\tUPDATE = 'UPDATE',\n\tDELETE = 'DELETE',\n}\n\nexport type SubscriptionMessage<T extends PersistentModel> = Pick<\n\tInternalSubscriptionMessage<T>,\n\t'opType' | 'element' | 'model' | 'condition'\n>;\n\nexport type InternalSubscriptionMessage<T extends PersistentModel> = {\n\topType: OpType;\n\telement: T;\n\tmodel: PersistentModelConstructor<T>;\n\tcondition: PredicatesGroup<T> | null;\n\tsavedElement?: T;\n};\n\nexport type DataStoreSnapshot<T extends PersistentModel> = {\n\titems: T[];\n\tisSynced: boolean;\n};\n//#endregion\n\n//#region Predicates\n\nexport type PredicateExpression<\n\tM extends PersistentModel,\n\tFT\n> = TypeName<FT> extends keyof MapTypeToOperands<FT>\n\t? (\n\t\t\toperator: keyof MapTypeToOperands<FT>[TypeName<FT>],\n\t\t\t// make the operand type match the type they're trying to filter on\n\t\t\toperand: MapTypeToOperands<FT>[TypeName<FT>][keyof MapTypeToOperands<FT>[TypeName<FT>]]\n\t  ) => ModelPredicate<M>\n\t: never;\n\ntype EqualityOperators<T> = {\n\tne: T;\n\teq: T;\n};\ntype ScalarNumberOperators<T> = EqualityOperators<T> & {\n\tle: T;\n\tlt: T;\n\tge: T;\n\tgt: T;\n};\ntype NumberOperators<T> = ScalarNumberOperators<T> & {\n\tbetween: [T, T];\n};\ntype StringOperators<T> = ScalarNumberOperators<T> & {\n\tbeginsWith: T;\n\tcontains: T;\n\tnotContains: T;\n};\ntype BooleanOperators<T> = EqualityOperators<T>;\ntype ArrayOperators<T> = {\n\tcontains: T;\n\tnotContains: T;\n};\nexport type AllOperators = NumberOperators<any> &\n\tStringOperators<any> &\n\tArrayOperators<any>;\n\ntype MapTypeToOperands<T> = {\n\tnumber: NumberOperators<NonNullable<T>>;\n\tstring: StringOperators<NonNullable<T>>;\n\tboolean: BooleanOperators<NonNullable<T>>;\n\t'number[]': ArrayOperators<number>;\n\t'string[]': ArrayOperators<string>;\n\t'boolean[]': ArrayOperators<boolean>;\n};\n\ntype TypeName<T> = T extends string\n\t? 'string'\n\t: T extends number\n\t? 'number'\n\t: T extends boolean\n\t? 'boolean'\n\t: T extends string[]\n\t? 'string[]'\n\t: T extends number[]\n\t? 'number[]'\n\t: T extends boolean[]\n\t? 'boolean[]'\n\t: never;\n\nexport type PredicateGroups<T extends PersistentModel> = {\n\tand: (\n\t\tpredicate: (predicate: ModelPredicate<T>) => ModelPredicate<T>\n\t) => ModelPredicate<T>;\n\tor: (\n\t\tpredicate: (predicate: ModelPredicate<T>) => ModelPredicate<T>\n\t) => ModelPredicate<T>;\n\tnot: (\n\t\tpredicate: (predicate: ModelPredicate<T>) => ModelPredicate<T>\n\t) => ModelPredicate<T>;\n};\n\nexport type ModelPredicate<M extends PersistentModel> = {\n\t[K in keyof M]-?: PredicateExpression<M, NonNullable<M[K]>>;\n} & PredicateGroups<M>;\n\nexport type ProducerModelPredicate<M extends PersistentModel> = (\n\tcondition: ModelPredicate<M>\n) => ModelPredicate<M>;\n\nexport type PredicatesGroup<T extends PersistentModel> = {\n\ttype: keyof PredicateGroups<T>;\n\tpredicates: (PredicateObject<T> | PredicatesGroup<T>)[];\n};\n\nexport function isPredicateObj<T extends PersistentModel>(\n\tobj: any\n): obj is PredicateObject<T> {\n\treturn obj && (<PredicateObject<T>>obj).field !== undefined;\n}\n\nexport function isPredicateGroup<T extends PersistentModel>(\n\tobj: any\n): obj is PredicatesGroup<T> {\n\treturn obj && (<PredicatesGroup<T>>obj).type !== undefined;\n}\n\nexport type PredicateObject<T extends PersistentModel> = {\n\tfield: keyof T;\n\toperator: keyof AllOperators;\n\toperand: any;\n};\n\nexport enum QueryOne {\n\tFIRST,\n\tLAST,\n}\nexport type GraphQLField = {\n\t[field: string]: {\n\t\t[operator: string]: string | number | [number, number];\n\t};\n};\n\nexport type GraphQLCondition = Partial<\n\t| GraphQLField\n\t| {\n\t\t\tand: [GraphQLCondition];\n\t\t\tor: [GraphQLCondition];\n\t\t\tnot: GraphQLCondition;\n\t  }\n>;\n\nexport type GraphQLFilter = Partial<\n\t| GraphQLField\n\t| {\n\t\t\tand: GraphQLFilter[];\n\t  }\n\t| {\n\t\t\tor: GraphQLFilter[];\n\t  }\n\t| {\n\t\t\tnot: GraphQLFilter;\n\t  }\n>;\n\n//#endregion\n\n//#region Pagination\n\nexport type ProducerPaginationInput<T extends PersistentModel> = {\n\tsort?: ProducerSortPredicate<T>;\n\tlimit?: number;\n\tpage?: number;\n};\n\nexport type ObserveQueryOptions<T extends PersistentModel> = Pick<\n\tProducerPaginationInput<T>,\n\t'sort'\n>;\n\nexport type PaginationInput<T extends PersistentModel> = {\n\tsort?: SortPredicate<T>;\n\tlimit?: number;\n\tpage?: number;\n};\n\nexport type ProducerSortPredicate<M extends PersistentModel> = (\n\tcondition: SortPredicate<M>\n) => SortPredicate<M>;\n\nexport type SortPredicate<T extends PersistentModel> = {\n\t[K in keyof T]-?: SortPredicateExpression<T, NonNullable<T[K]>>;\n};\n\nexport type SortPredicateExpression<\n\tM extends PersistentModel,\n\tFT\n> = TypeName<FT> extends keyof MapTypeToOperands<FT>\n\t? (sortDirection: keyof typeof SortDirection) => SortPredicate<M>\n\t: never;\n\nexport enum SortDirection {\n\tASCENDING = 'ASCENDING',\n\tDESCENDING = 'DESCENDING',\n}\n\nexport type SortPredicatesGroup<T extends PersistentModel> =\n\tSortPredicateObject<T>[];\n\nexport type SortPredicateObject<T extends PersistentModel> = {\n\tfield: keyof T;\n\tsortDirection: keyof typeof SortDirection;\n};\n\n//#endregion\n\n//#region System Components\n\nexport type SystemComponent = {\n\tsetUp(\n\t\tschema: InternalSchema,\n\t\tnamespaceResolver: NamespaceResolver,\n\t\tmodelInstanceCreator: ModelInstanceCreator,\n\t\tgetModelConstructorByModelName: (\n\t\t\tnamsespaceName: string,\n\t\t\tmodelName: string\n\t\t) => PersistentModelConstructor<any>,\n\t\tappId: string\n\t): Promise<void>;\n};\n\nexport type NamespaceResolver = (\n\tmodelConstructor: PersistentModelConstructor<any>\n) => string;\n\nexport type ControlMessageType<T> = {\n\ttype: T;\n\tdata?: any;\n};\n\n//#endregion\n\n//#region Relationship types\nexport type RelationType = {\n\tfieldName: string;\n\tmodelName: string;\n\trelationType: 'HAS_ONE' | 'HAS_MANY' | 'BELONGS_TO';\n\ttargetName?: string;\n\tassociatedWith?: string;\n};\n\nexport type RelationshipType = {\n\t[modelName: string]: { indexes: string[]; relationTypes: RelationType[] };\n};\n\n//#endregion\n\n//#region Key type\nexport type KeyType = {\n\tprimaryKey?: string[];\n\tcompositeKeys?: Set<string>[];\n};\n\nexport type ModelKeys = {\n\t[modelName: string]: KeyType;\n};\n\n//#endregion\n\n//#region DataStore config types\nexport type DataStoreConfig = {\n\tDataStore?: {\n\t\tauthModeStrategyType?: AuthModeStrategyType;\n\t\tconflictHandler?: ConflictHandler; // default : retry until client wins up to x times\n\t\terrorHandler?: (error: SyncError<PersistentModel>) => void; // default : logger.warn\n\t\tmaxRecordsToSync?: number; // merge\n\t\tsyncPageSize?: number;\n\t\tfullSyncInterval?: number;\n\t\tsyncExpressions?: SyncExpression[];\n\t\tauthProviders?: AuthProviders;\n\t\tstorageAdapter?: Adapter;\n\t};\n\tauthModeStrategyType?: AuthModeStrategyType;\n\tconflictHandler?: ConflictHandler; // default : retry until client wins up to x times\n\terrorHandler?: (error: SyncError<PersistentModel>) => void; // default : logger.warn\n\tmaxRecordsToSync?: number; // merge\n\tsyncPageSize?: number;\n\tfullSyncInterval?: number;\n\tsyncExpressions?: SyncExpression[];\n\tauthProviders?: AuthProviders;\n\tstorageAdapter?: Adapter;\n};\n\nexport type AuthProviders = {\n\tfunctionAuthProvider: () => { token: string } | Promise<{ token: string }>;\n};\n\nexport enum AuthModeStrategyType {\n\tDEFAULT = 'DEFAULT',\n\tMULTI_AUTH = 'MULTI_AUTH',\n}\n\nexport type AuthModeStrategyReturn =\n\t| GRAPHQL_AUTH_MODE\n\t| GRAPHQL_AUTH_MODE[]\n\t| undefined\n\t| null;\n\nexport type AuthModeStrategyParams = {\n\tschema: InternalSchema;\n\tmodelName: string;\n\toperation: ModelOperation;\n};\n\nexport type AuthModeStrategy = (\n\tauthModeStrategyParams: AuthModeStrategyParams\n) => AuthModeStrategyReturn | Promise<AuthModeStrategyReturn>;\n\nexport enum ModelOperation {\n\tCREATE = 'CREATE',\n\tREAD = 'READ',\n\tUPDATE = 'UPDATE',\n\tDELETE = 'DELETE',\n}\n\nexport type ModelAuthModes = Record<\n\tstring,\n\t{\n\t\t[Property in ModelOperation]: GRAPHQL_AUTH_MODE[];\n\t}\n>;\n\nexport type SyncExpression = Promise<{\n\tmodelConstructor: any;\n\tconditionProducer: (c?: any) => any;\n}>;\n\n/*\nAdds Intellisense when passing a function | promise that returns a predicate\nOr just a predicate. E.g.,\n\nsyncExpressions: [\n\tsyncExpression(Post, c => c.rating('gt', 5)),\n\n\tOR\n\n\tsyncExpression(Post, async () => {\n\t\treturn c => c.rating('gt', 5)\n\t}),\n]\n*/\ntype Option0 = [];\ntype Option1<T extends PersistentModel> = [ModelPredicate<T> | undefined];\ntype Option<T extends PersistentModel> = Option0 | Option1<T>;\n\ntype Lookup<T extends PersistentModel> = {\n\t0:\n\t\t| ProducerModelPredicate<T>\n\t\t| Promise<ProducerModelPredicate<T>>\n\t\t| typeof PredicateAll;\n\t1: ModelPredicate<T> | undefined;\n};\n\ntype ConditionProducer<T extends PersistentModel, A extends Option<T>> = (\n\t...args: A\n) => A['length'] extends keyof Lookup<T> ? Lookup<T>[A['length']] : never;\n\nexport async function syncExpression<\n\tT extends PersistentModel,\n\tA extends Option<T>\n>(\n\tmodelConstructor: PersistentModelConstructor<T>,\n\tconditionProducer: ConditionProducer<T, A>\n): Promise<{\n\tmodelConstructor: PersistentModelConstructor<T>;\n\tconditionProducer: ConditionProducer<T, A>;\n}> {\n\treturn {\n\t\tmodelConstructor,\n\t\tconditionProducer,\n\t};\n}\n\nexport type SyncConflict = {\n\tmodelConstructor: PersistentModelConstructor<any>;\n\tlocalModel: PersistentModel;\n\tremoteModel: PersistentModel;\n\toperation: OpType;\n\tattempts: number;\n};\n\nexport type SyncError<T extends PersistentModel> = {\n\tmessage: string;\n\terrorType: ErrorType;\n\terrorInfo?: string;\n\trecoverySuggestion?: string;\n\tmodel?: string;\n\tlocalModel: T;\n\tremoteModel: T;\n\tprocess: ProcessName;\n\toperation: string;\n\tcause?: Error;\n};\n\nexport type ErrorType =\n\t| 'ConfigError'\n\t| 'BadModel'\n\t| 'BadRecord'\n\t| 'Unauthorized'\n\t| 'Transient'\n\t| 'Unknown';\n\nexport enum ProcessName {\n\t'sync' = 'sync',\n\t'mutate' = 'mutate',\n\t'subscribe' = 'subscribe',\n}\n\nexport const DISCARD = Symbol('DISCARD');\n\nexport type ConflictHandler = (\n\tconflict: SyncConflict\n) =>\n\t| Promise<PersistentModel | typeof DISCARD>\n\t| PersistentModel\n\t| typeof DISCARD;\nexport type ErrorHandler = (error: SyncError<PersistentModel>) => void;\n\nexport type DeferredCallbackResolverOptions = {\n\tcallback: () => void;\n\tmaxInterval?: number;\n\terrorHandler?: (error: string) => void;\n};\n\nexport enum LimitTimerRaceResolvedValues {\n\tLIMIT = 'LIMIT',\n\tTIMER = 'TIMER',\n}\n//#endregion\n\nexport type AmplifyContext = {\n\tAuth: typeof Auth;\n\tAPI: typeof API;\n\tCache: typeof Cache;\n};\n"]},"metadata":{},"sourceType":"module"}