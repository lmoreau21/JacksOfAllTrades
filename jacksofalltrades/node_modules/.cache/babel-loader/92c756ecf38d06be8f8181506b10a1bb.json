{"ast":null,"code":"export default function e(t) {\n  switch (t && t.type || null) {\n    case \"FeatureCollection\":\n      return t.features = t.features.reduce(function (t, r) {\n        return t.concat(e(r));\n      }, []), t;\n\n    case \"Feature\":\n      return t.geometry ? e(t.geometry).map(function (e) {\n        var r = {\n          type: \"Feature\",\n          properties: JSON.parse(JSON.stringify(t.properties)),\n          geometry: e\n        };\n        return void 0 !== t.id && (r.id = t.id), r;\n      }) : [t];\n\n    case \"MultiPoint\":\n      return t.coordinates.map(function (e) {\n        return {\n          type: \"Point\",\n          coordinates: e\n        };\n      });\n\n    case \"MultiPolygon\":\n      return t.coordinates.map(function (e) {\n        return {\n          type: \"Polygon\",\n          coordinates: e\n        };\n      });\n\n    case \"MultiLineString\":\n      return t.coordinates.map(function (e) {\n        return {\n          type: \"LineString\",\n          coordinates: e\n        };\n      });\n\n    case \"GeometryCollection\":\n      return t.geometries.map(e).reduce(function (e, t) {\n        return e.concat(t);\n      }, []);\n\n    case \"Point\":\n    case \"Polygon\":\n    case \"LineString\":\n      return [t];\n  }\n}","map":{"version":3,"mappings":"eAAe,SAASA,CAAT,CAAiBC,CAAjB,EAAiBA;EAAAA,QACrBA,KAAMA,EAAGC,IAATD,IAAkB,IADGA;IACH,KACpB,mBADoB;MACpB,OACHA,EAAGE,QAAHF,GAAcA,EAAGE,QAAHF,CAAYG,MAAZH,CAAmB,UAASI,CAAT,EAAcC,CAAd,EAAcA;QAAAA,OACtCD,EAAIE,MAAJF,CAAWL,EAAQM,CAARN,CAAXK,CADsCC;MACnBA,CADdL,EAEX,EAFWA,CAAdA,EAGOA,CAJJ;;IAIIA,KACJ,SADIA;MACJ,OACEA,EAAGO,QAAHP,GACED,EAAQC,EAAGO,QAAXR,EAAqBS,GAArBT,CAAyB,UAASU,CAAT,EAASA;QAAAA,IACnCC,IAAO;UACTT,MAAM,SADG;UAETU,YAAYC,KAAKC,KAALD,CAAWA,KAAKE,SAALF,CAAeZ,EAAGW,UAAlBC,CAAXA,CAFH;UAGTL,UAAUE;QAHD,CAD4BA;QAI3BA,YAEEM,CAFFN,KAERT,EAAGgB,EAFKP,KAGVC,EAAKM,EAALN,GAAUV,EAAGgB,EAHHP,GAKLC,CALKD;MAKLC,CATFX,CADFC,GAAoB,CAACA,CAAD,CADtB;;IACuBA,KAYvB,YAZuBA;MAYvB,OACIA,EAAGiB,WAAHjB,CAAeQ,GAAfR,CAAmB,UAASkB,CAAT,EAASA;QAAAA,OAC1B;UAAEjB,MAAM,OAAR;UAAiBgB,aAAaC;QAA9B,CAD0BA;MACIA,CADhClB,CADJ;;IAEoCkB,KAEpC,cAFoCA;MAEpC,OACIlB,EAAGiB,WAAHjB,CAAeQ,GAAfR,CAAmB,UAASkB,CAAT,EAASA;QAAAA,OAC1B;UAAEjB,MAAM,SAAR;UAAmBgB,aAAaC;QAAhC,CAD0BA;MACMA,CADlClB,CADJ;;IAEsCkB,KAEtC,iBAFsCA;MAEtC,OACIlB,EAAGiB,WAAHjB,CAAeQ,GAAfR,CAAmB,UAASkB,CAAT,EAASA;QAAAA,OAC1B;UAAEjB,MAAM,YAAR;UAAsBgB,aAAaC;QAAnC,CAD0BA;MACSA,CADrClB,CADJ;;IAEyCkB,KAEzC,oBAFyCA;MAEzC,OACIlB,EAAGmB,UAAHnB,CAAcQ,GAAdR,CAAkBD,CAAlBC,EAA2BG,MAA3BH,CAAkC,UAASoB,CAAT,EAAeC,CAAf,EAAeA;QAAAA,OAC/CD,EAAKd,MAALc,CAAYC,CAAZD,CAD+CC;MACnCA,CADdrB,EAEJ,EAFIA,CADJ;;IAGA,KACA,OADA;IACA,KACA,SADA;IACA,KACA,YADA;MACA,OACI,CAACA,CAAD,CADJ;EAtCuBA;AAuClBA","names":["flatten","gj","type","features","reduce","mem","feature","concat","geometry","map","geom","data","properties","JSON","parse","stringify","undefined","id","coordinates","_","geometries","memo","geoms"],"sources":["C:\\Users\\lmore\\OneDrive\\Documents\\GitHub\\JacksOfAllTrades\\jacksofalltrades\\node_modules\\geojson-flatten\\index.js"],"sourcesContent":["export default function flatten(gj) {\n  switch ((gj && gj.type) || null) {\n    case \"FeatureCollection\":\n      gj.features = gj.features.reduce(function(mem, feature) {\n        return mem.concat(flatten(feature));\n      }, []);\n      return gj;\n    case \"Feature\":\n      if (!gj.geometry) return [gj];\n      return flatten(gj.geometry).map(function(geom) {\n        var data = {\n          type: \"Feature\",\n          properties: JSON.parse(JSON.stringify(gj.properties)),\n          geometry: geom\n        };\n        if (gj.id !== undefined) {\n          data.id = gj.id;\n        }\n        return data;\n      });\n    case \"MultiPoint\":\n      return gj.coordinates.map(function(_) {\n        return { type: \"Point\", coordinates: _ };\n      });\n    case \"MultiPolygon\":\n      return gj.coordinates.map(function(_) {\n        return { type: \"Polygon\", coordinates: _ };\n      });\n    case \"MultiLineString\":\n      return gj.coordinates.map(function(_) {\n        return { type: \"LineString\", coordinates: _ };\n      });\n    case \"GeometryCollection\":\n      return gj.geometries.map(flatten).reduce(function(memo, geoms) {\n        return memo.concat(geoms);\n      }, []);\n    case \"Point\":\n    case \"Polygon\":\n    case \"LineString\":\n      return [gj];\n  }\n}\n"]},"metadata":{},"sourceType":"module"}