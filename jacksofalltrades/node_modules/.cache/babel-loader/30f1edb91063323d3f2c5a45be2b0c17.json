{"ast":null,"code":"import _objectSpread from \"C:/Users/lmore/OneDrive/Documents/GitHub/JacksOfAllTrades/jacksofalltrades/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"C:/Users/lmore/OneDrive/Documents/GitHub/JacksOfAllTrades/jacksofalltrades/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _slicedToArray from \"C:/Users/lmore/OneDrive/Documents/GitHub/JacksOfAllTrades/jacksofalltrades/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _excluded = [\"__scopeCollapsible\", \"open\", \"defaultOpen\", \"disabled\", \"onOpenChange\"],\n    _excluded2 = [\"__scopeCollapsible\"],\n    _excluded3 = [\"forceMount\"],\n    _excluded4 = [\"__scopeCollapsible\", \"present\", \"children\"];\nimport { useId as e } from \"@radix-ui/react-id\";\nimport { Presence as t } from \"@radix-ui/react-presence\";\nimport { Primitive as o } from \"@radix-ui/react-primitive\";\nimport { useComposedRefs as n } from \"@radix-ui/react-compose-refs\";\nimport { useLayoutEffect as r } from \"@radix-ui/react-use-layout-effect\";\nimport { useControllableState as i } from \"@radix-ui/react-use-controllable-state\";\nimport { createContextScope as a } from \"@radix-ui/react-context\";\nimport { composeEventHandlers as l } from \"@radix-ui/primitive\";\nimport * as s from \"react\";\nimport c from \"@babel/runtime/helpers/esm/extends\";\n\nvar _a = a(\"Collapsible\"),\n    _a2 = _slicedToArray(_a, 2),\n    p = _a2[0],\n    d = _a2[1];\n\nexport { d as createCollapsibleScope };\n\nvar _p = p(\"Collapsible\"),\n    _p2 = _slicedToArray(_p, 2),\n    u = _p2[0],\n    m = _p2[1];\n\nexport var Collapsible = /*#__PURE__*/s.forwardRef(function (t, n) {\n  var r = t.__scopeCollapsible,\n      a = t.open,\n      l = t.defaultOpen,\n      p = t.disabled,\n      d = t.onOpenChange,\n      m = _objectWithoutProperties(t, _excluded),\n      _i = i({\n    prop: a,\n    defaultProp: l,\n    onChange: d\n  }),\n      _i2 = _slicedToArray(_i, 2),\n      _i2$ = _i2[0],\n      f = _i2$ === void 0 ? !1 : _i2$,\n      C = _i2[1];\n  /*#__PURE__*/\n\n\n  return s.createElement(u, {\n    scope: r,\n    disabled: p,\n    contentId: e(),\n    open: f,\n    onOpenToggle: s.useCallback(function () {\n      return C(function (e) {\n        return !e;\n      });\n    }, [C])\n  }, /*#__PURE__*/s.createElement(o.div, c({\n    \"data-state\": b(f),\n    \"data-disabled\": p ? \"\" : void 0\n  }, m, {\n    ref: n\n  })));\n});\n/*#__PURE__*/\n\nexport var CollapsibleTrigger = /*#__PURE__*/s.forwardRef(function (e, t) {\n  var n = e.__scopeCollapsible,\n      r = _objectWithoutProperties(e, _excluded2),\n      i = m(\"CollapsibleTrigger\", n);\n  /*#__PURE__*/\n\n\n  return s.createElement(o.button, c({\n    type: \"button\",\n    \"aria-controls\": i.contentId,\n    \"aria-expanded\": i.open || !1,\n    \"data-state\": b(i.open),\n    \"data-disabled\": i.disabled ? \"\" : void 0,\n    disabled: i.disabled\n  }, r, {\n    ref: t,\n    onClick: l(e.onClick, i.onOpenToggle)\n  }));\n});\n/*#__PURE__*/\n\nexport var CollapsibleContent = /*#__PURE__*/s.forwardRef(function (e, o) {\n  var n = e.forceMount,\n      r = _objectWithoutProperties(e, _excluded3),\n      i = m(\"CollapsibleContent\", e.__scopeCollapsible);\n  /*#__PURE__*/\n\n\n  return s.createElement(t, {\n    present: n || i.open\n  }, function (_ref) {\n    var e = _ref.present;\n    return /*#__PURE__*/s.createElement(f, c({}, r, {\n      ref: o,\n      present: e\n    }));\n  });\n});\n/*#__PURE__*/\n\nvar f = /*#__PURE__*/s.forwardRef(function (e, t) {\n  var i = e.__scopeCollapsible,\n      a = e.present,\n      l = e.children,\n      p = _objectWithoutProperties(e, _excluded4),\n      d = m(\"CollapsibleContent\", i),\n      _s$useState = s.useState(a),\n      _s$useState2 = _slicedToArray(_s$useState, 2),\n      u = _s$useState2[0],\n      f = _s$useState2[1],\n      C = s.useRef(null),\n      x = n(t, C),\n      g = s.useRef(0),\n      y = g.current,\n      h = s.useRef(0),\n      R = h.current,\n      D = d.open || u,\n      v = s.useRef(D),\n      _ = s.useRef();\n\n  return s.useEffect(function () {\n    var e = requestAnimationFrame(function () {\n      return v.current = !1;\n    });\n    return function () {\n      return cancelAnimationFrame(e);\n    };\n  }, []), r(function () {\n    var e = C.current;\n\n    if (e) {\n      _.current = _.current || {\n        transitionDuration: e.style.transitionDuration,\n        animationDuration: e.style.animationDuration,\n        animationFillMode: e.style.animationFillMode\n      }, e.style.transitionDuration = \"0s\", e.style.animationDuration = \"0s\", e.style.animationFillMode = \"none\";\n\n      var _t = e.getBoundingClientRect();\n\n      g.current = _t.height, h.current = _t.width, v.current || (e.style.transitionDuration = _.current.transitionDuration, e.style.animationDuration = _.current.animationDuration, e.style.animationFillMode = _.current.animationFillMode), f(a);\n    }\n  }, [d.open, a]), /*#__PURE__*/s.createElement(o.div, c({\n    \"data-state\": b(d.open),\n    \"data-disabled\": d.disabled ? \"\" : void 0,\n    id: d.contentId,\n    hidden: !D\n  }, p, {\n    ref: x,\n    style: _objectSpread({\n      \"--radix-collapsible-content-height\": y ? \"\".concat(y, \"px\") : void 0,\n      \"--radix-collapsible-content-width\": R ? \"\".concat(R, \"px\") : void 0\n    }, e.style)\n  }), D && l);\n});\n\nfunction b(e) {\n  return e ? \"open\" : \"closed\";\n}\n\nexport var Root = Collapsible;\nexport var Trigger = CollapsibleTrigger;\nexport var Content = CollapsibleContent;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;AAiBA,SAG2DA,EAHlC,aAGkCA,CAH3D;AAAA;AAAA,IAGOC,CAHP;AAAA,IAGiCC,CAHjC;;AAAyB;;AAYzB,SACED,EAbuB,aAavBA,CADF;AAAA;AAAA,IAAOE,CAAP;AAAA,IAA4BC,CAA5B;;AAZyB,OAwBzB,IAAMC,2BAAcC,EAAMC,UAAND,CAClB,UAACE,CAAD,EAAuCC,CAAvC,EAAuCA;EACrC,IACEC,CADF,GAOIF,CAPJ,CAAME,kBAAN;EAAA,IAEQC,CAFR,GAOIH,CAPJ,CAEEI,IAFF;EAAA,IAGEC,CAHF,GAOIL,CAPJ,CAAMK,WAAN;EAAA,IAIEC,CAJF,GAOIN,CAPJ,CAAMM,QAAN;EAAA,IAKEC,CALF,GAOIP,CAPJ,CAAMO,YAAN;EAAA,IAMKC,CANL,4BAOIR,CAPJ;EAAA,SASgCS,EAAqB;IACnDC,MAAMP,CAD6C;IAEnDQ,aAAaN,CAFsC;IAGnDO,UAAUL;EAHyC,CAArBE,CAThC;EAAA;EAAA;EAAA,IASOL,CATP,qBASOA,CAAO,CATd;EAAA,IASqBS,CATrB;EAYYN;;;EAGZ,OACEO,gBAACC,CAADD;IACEE,OAAOd,CADT;IAEEI,UAAUA,CAFZ;IAGEW,WAAWC,GAHb;IAIEd,MAAMA,CAJR;IAKEe,cAAcrB,EAAMsB,WAANtB,CAAkB;MAAA,OAAMe,EAASQ;QAAAA,QAAcA,CAAdA;MAAAA,CAATR,CAAN;IAAA,CAAlBf,EAA0D,CAACe,CAAD,CAA1Df;EALhB,GAK2Ee,aAEzEC,gBAACQ,EAAUC,GAAXT;IACE,cAAYU,EAASpB,CAAToB,CADd;IAEE,iBAAelB,IAAW,EAAXA,GAAW,KAAKmB;EAFjC,GAGMjB,CAHNkB;IAIEC,KAAK1B;EAJP,GAPFa,CADF;AAYWb,CA7BKH,CAApB;AA6BeG;;AAAAA,OAmBf,IAAM2B,kCAAqB9B,EAAMC,UAAND,CACzB,UAACE,CAAD,EAA8CC,CAA9C,EAA8CA;EAC5C,IAAQC,CAAR,GAAgDF,CAAhD,CAAME,kBAAN;EAAA,IAA+B2B,CAA/B,4BAAgD7B,CAAhD;EAAA,IACM8B,CADN,GACgBlC,EATC,oBASDA,EAAoCM,CAApCN,CADhB;EACoDM;;;EACpD,OACEY,gBAACQ,EAAUS,MAAXjB;IACEkB,MAAK,QADP;IAEE,iBAAeF,EAAQb,SAFzB;IAGE,iBAAea,EAAQ1B,IAAR0B,IAAQ1B,CAAQ,CAHjC;IAIE,cAAYoB,EAASM,EAAQ1B,IAAjBoB,CAJd;IAKE,iBAAeM,EAAQxB,QAARwB,GAAmB,EAAnBA,GAAmB,KAAKL,CALzC;IAMEnB,UAAUwB,EAAQxB;EANpB,GAOMuB,CAPNH;IAQEC,KAAK1B,CARP;IASEgC,SAASC,EAAqBlC,EAAMiC,OAA3BC,EAAoCJ,EAAQX,YAA5Ce;EATX,GADF;AAUyDf,CAdlCrB,CAA3B;AAc6DqB;;AAAAA,OAuB7D,IAAMgB,kCAAqBrC,EAAMC,UAAND,CACzB,UAACE,CAAD,EAA8CC,CAA9C,EAA8CA;EAC5C,IAAQmC,CAAR,GAAwCpC,CAAxC,CAAMoC,UAAN;EAAA,IAAuBC,CAAvB,4BAAwCrC,CAAxC;EAAA,IACM8B,CADN,GACgBlC,EAdC,oBAcDA,EAAoCI,EAAME,kBAA1CN,CADhB;EAC0DM;;;EAC1D,OACEY,gBAACwB,CAADxB;IAAUyB,SAASH,KAAcN,EAAQ1B;EAAzC,GACG;IAAA,IAAGmC,CAAH,QAAGA,OAAH;IAAA,OAAGA,aACFzB,gBAAC0B,CAAD1B,QAA4BuB,CAA5BX;MAA0CC,KAAK1B,CAA/C;MAA6DsC,SAASA;IAAtE,GADD;EAAA,CADHzB,CADF;AAG4EyB,CAPrDzC,CAA3B;AAOgFyC;;AAgBhF,IAAME,iBAAyB3C,EAAMC,UAAND,CAG7B,UAACE,CAAD,EAAkDC,CAAlD,EAAkDA;EAClD,IAAQC,CAAR,GAAmEF,CAAnE,CAAME,kBAAN;EAAA,IAA4BqC,CAA5B,GAAmEvC,CAAnE,CAAMuC,OAAN;EAAA,IAAqCG,CAArC,GAAmE1C,CAAnE,CAAM0C,QAAN;EAAA,IAAkDL,CAAlD,4BAAmErC,CAAnE;EAAA,IACM8B,CADN,GACgBlC,EAvCG,oBAuCHA,EAAoCM,CAApCN,CADhB;EAAA,kBAEkCE,EAAM6C,QAAN7C,CAAeyC,CAAfzC,CAFlC;EAAA;EAAA,IAEO8C,CAFP;EAAA,IAEkBC,CAFlB;EAAA,IAGMlB,CAHN,GAGY7B,EAAMgD,MAANhD,CAA4C,IAA5CA,CAHZ;EAAA,IAIMiD,CAJN,GAIqBC,EAAgB/C,CAAhB+C,EAA8BrB,CAA9BqB,CAJrB;EAAA,IAKMC,CALN,GAKkBnD,EAAMgD,MAANhD,CAAiC,CAAjCA,CALlB;EAAA,IAMMoD,CANN,GAMeD,EAAUE,OANzB;EAAA,IAOMC,CAPN,GAOiBtD,EAAMgD,MAANhD,CAAiC,CAAjCA,CAPjB;EAAA,IAQMuD,CARN,GAQcD,EAASD,OARvB;EAAA,IAWMG,CAXN,GAWexB,EAAQ1B,IAAR0B,IAAgBc,CAX/B;EAAA,IAYMW,CAZN,GAYqCzD,EAAMgD,MAANhD,CAAawD,CAAbxD,CAZrC;EAAA,IAaM0D,CAbN,GAa0B1D,EAAMgD,MAANhD,EAb1B;;EAuDA,OAxCAA,EAAM2D,SAAN3D,CAAgB;IACd,IAAM4D,IAAMC,sBAAsB;MAAA,OAAOJ,EAA6BJ,OAA7BI,GAA6BJ,CAAU,CAA9C;IAAA,CAAtBQ,CAAZ;IACA,OAAO;MAAA,OAAMC,qBAAqBF,CAArBE,CAAN;IAAA,CAAP;EAAkCF,CAFpC5D,EAGG,EAHHA,GAKA+D,EAAgB;IACd,IAAMC,IAAOnC,EAAIwB,OAAjB;;IACA,IAAIW,CAAJ,EAAU;MACRN,EAAkBL,OAAlBK,GAA4BA,EAAkBL,OAAlBK,IAA6B;QACvDO,oBAAoBD,EAAKE,KAALF,CAAWC,kBADwB;QAEvDE,mBAAmBH,EAAKE,KAALF,CAAWG,iBAFyB;QAGvDC,mBAAmBJ,EAAKE,KAALF,CAAWI;MAHyB,CAAzDV,EAMAM,EAAKE,KAALF,CAAWC,kBAAXD,GAAgC,IANhCN,EAOAM,EAAKE,KAALF,CAAWG,iBAAXH,GAA+B,IAP/BN,EAQAM,EAAKE,KAALF,CAAWI,iBAAXJ,GAA+B,MAR/BN;;MAWA,IAAMW,KAAOL,EAAKM,qBAALN,EAAb;;MACAb,EAAUE,OAAVF,GAAoBkB,GAAKjB,MAAzBD,EACAG,EAASD,OAATC,GAAmBe,GAAKd,KADxBJ,EAIKM,EAA6BJ,OAA7BI,KACHO,EAAKE,KAALF,CAAWC,kBAAXD,GAAgCN,EAAkBL,OAAlBK,CAA0BO,kBAA1DD,EACAA,EAAKE,KAALF,CAAWG,iBAAXH,GAA+BN,EAAkBL,OAAlBK,CAA0BS,iBADzDH,EAEAA,EAAKE,KAALF,CAAWI,iBAAXJ,GAA+BN,EAAkBL,OAAlBK,CAA0BU,iBAHtDX,CAJLN,EAUAJ,EAAaN,CAAbM,CAVAI;IAUaV;EAAAA,CAzBjBsB,EAiCG,CAAC/B,EAAQ1B,IAAT,EAAemC,CAAf,CAjCHsB,CALA/D,EAsCkByC,aAGhBzB,gBAACQ,EAAUC,GAAXT;IACE,cAAYU,EAASM,EAAQ1B,IAAjBoB,CADd;IAEE,iBAAeM,EAAQxB,QAARwB,GAAmB,EAAnBA,GAAmB,KAAKL,CAFzC;IAGE4C,IAAIvC,EAAQb,SAHd;IAIEqD,SAAShB;EAJX,GAKMjB,CALNX;IAMEC,KAAKoB,CANP;IAOEiB;MACE,sCAA+Cd,cAAYA,CAAZA,UAAYA,KAAazB,CAD1EuC;MAEE,qCAA8CX,cAAWA,CAAXA,UAAWA,KAAY5B;IAFvEuC,GAGKhE,EAAMgE,KAHXA;EAPF,IAaGV,KAAUZ,CAbb5B,CADF;AAce4B,CAzEc5C,CAA/B;;AAgFA,SAAS0B,CAAT,CAAkBpB,CAAlB,EAAkBA;EAChB,OAAOA,IAAO,MAAPA,GAAgB,QAAvB;AAAuB;;AAAA,OAGzB,IAAMmE,OAAO1E,WAAb;AAAaA,OACb,IAAM2E,UAAU5C,kBAAhB;AAAgBA,OAChB,IAAM6C,UAAUtC,kBAAhB","names":["createContextScope","createCollapsibleContext","createCollapsibleScope","CollapsibleProvider","useCollapsibleContext","Collapsible","React","forwardRef","props","forwardedRef","__scopeCollapsible","openProp","open","defaultOpen","disabled","onOpenChange","collapsibleProps","useControllableState","prop","defaultProp","onChange","setOpen","_react","$a5c9ff236b90360c7963e374990ad39$var$CollapsibleProvider","scope","contentId","useId","onOpenToggle","useCallback","prevOpen","Primitive","div","getState","undefined","_babelRuntimeHelpersEsmExtends","ref","CollapsibleTrigger","triggerProps","context","button","type","onClick","composeEventHandlers","CollapsibleContent","forceMount","contentProps","Presence","present","$a5c9ff236b90360c7963e374990ad39$var$CollapsibleContentImpl","CollapsibleContentImpl","children","useState","isPresent","setIsPresent","useRef","composedRefs","useComposedRefs","heightRef","height","current","widthRef","width","isOpen","isMountAnimationPreventedRef","originalStylesRef","useEffect","rAF","requestAnimationFrame","cancelAnimationFrame","useLayoutEffect","node","transitionDuration","style","animationDuration","animationFillMode","rect","getBoundingClientRect","id","hidden","Root","Trigger","Content"],"sources":["C:\\Users\\lmore\\OneDrive\\Documents\\GitHub\\JacksOfAllTrades\\jacksofalltrades\\node_modules\\@aws-amplify\\ui-react\\node_modules\\@radix-ui\\react-accordion\\node_modules\\@radix-ui\\react-collapsible\\dist\\packages\\react\\collapsible\\src\\Collapsible.tsx"],"sourcesContent":["import * as React from 'react';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { useControllableState } from '@radix-ui/react-use-controllable-state';\nimport { useLayoutEffect } from '@radix-ui/react-use-layout-effect';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport { Presence } from '@radix-ui/react-presence';\nimport { useId } from '@radix-ui/react-id';\n\nimport type * as Radix from '@radix-ui/react-primitive';\nimport type { Scope } from '@radix-ui/react-context';\n\n/* -------------------------------------------------------------------------------------------------\n * Collapsible\n * -----------------------------------------------------------------------------------------------*/\n\nconst COLLAPSIBLE_NAME = 'Collapsible';\n\ntype ScopedProps<P> = P & { __scopeCollapsible?: Scope };\nconst [createCollapsibleContext, createCollapsibleScope] = createContextScope(COLLAPSIBLE_NAME);\n\ntype CollapsibleContextValue = {\n  contentId: string;\n  disabled?: boolean;\n  open: boolean;\n  onOpenToggle(): void;\n};\n\nconst [CollapsibleProvider, useCollapsibleContext] =\n  createCollapsibleContext<CollapsibleContextValue>(COLLAPSIBLE_NAME);\n\ntype CollapsibleElement = React.ElementRef<typeof Primitive.div>;\ntype PrimitiveDivProps = Radix.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface CollapsibleProps extends PrimitiveDivProps {\n  defaultOpen?: boolean;\n  open?: boolean;\n  disabled?: boolean;\n  onOpenChange?(open: boolean): void;\n}\n\nconst Collapsible = React.forwardRef<CollapsibleElement, CollapsibleProps>(\n  (props: ScopedProps<CollapsibleProps>, forwardedRef) => {\n    const {\n      __scopeCollapsible,\n      open: openProp,\n      defaultOpen,\n      disabled,\n      onOpenChange,\n      ...collapsibleProps\n    } = props;\n\n    const [open = false, setOpen] = useControllableState({\n      prop: openProp,\n      defaultProp: defaultOpen,\n      onChange: onOpenChange,\n    });\n\n    return (\n      <CollapsibleProvider\n        scope={__scopeCollapsible}\n        disabled={disabled}\n        contentId={useId()}\n        open={open}\n        onOpenToggle={React.useCallback(() => setOpen((prevOpen) => !prevOpen), [setOpen])}\n      >\n        <Primitive.div\n          data-state={getState(open)}\n          data-disabled={disabled ? '' : undefined}\n          {...collapsibleProps}\n          ref={forwardedRef}\n        />\n      </CollapsibleProvider>\n    );\n  }\n);\n\nCollapsible.displayName = COLLAPSIBLE_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * CollapsibleTrigger\n * -----------------------------------------------------------------------------------------------*/\n\nconst TRIGGER_NAME = 'CollapsibleTrigger';\n\ntype CollapsibleTriggerElement = React.ElementRef<typeof Primitive.button>;\ntype PrimitiveButtonProps = Radix.ComponentPropsWithoutRef<typeof Primitive.button>;\ninterface CollapsibleTriggerProps extends PrimitiveButtonProps {}\n\nconst CollapsibleTrigger = React.forwardRef<CollapsibleTriggerElement, CollapsibleTriggerProps>(\n  (props: ScopedProps<CollapsibleTriggerProps>, forwardedRef) => {\n    const { __scopeCollapsible, ...triggerProps } = props;\n    const context = useCollapsibleContext(TRIGGER_NAME, __scopeCollapsible);\n    return (\n      <Primitive.button\n        type=\"button\"\n        aria-controls={context.contentId}\n        aria-expanded={context.open || false}\n        data-state={getState(context.open)}\n        data-disabled={context.disabled ? '' : undefined}\n        disabled={context.disabled}\n        {...triggerProps}\n        ref={forwardedRef}\n        onClick={composeEventHandlers(props.onClick, context.onOpenToggle)}\n      />\n    );\n  }\n);\n\nCollapsibleTrigger.displayName = TRIGGER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * CollapsibleContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_NAME = 'CollapsibleContent';\n\ntype CollapsibleContentElement = CollapsibleContentImplElement;\ninterface CollapsibleContentProps extends Omit<CollapsibleContentImplProps, 'present'> {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst CollapsibleContent = React.forwardRef<CollapsibleContentElement, CollapsibleContentProps>(\n  (props: ScopedProps<CollapsibleContentProps>, forwardedRef) => {\n    const { forceMount, ...contentProps } = props;\n    const context = useCollapsibleContext(CONTENT_NAME, props.__scopeCollapsible);\n    return (\n      <Presence present={forceMount || context.open}>\n        {({ present }) => (\n          <CollapsibleContentImpl {...contentProps} ref={forwardedRef} present={present} />\n        )}\n      </Presence>\n    );\n  }\n);\n\nCollapsibleContent.displayName = CONTENT_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype CollapsibleContentImplElement = React.ElementRef<typeof Primitive.div>;\ninterface CollapsibleContentImplProps extends PrimitiveDivProps {\n  present: boolean;\n}\n\nconst CollapsibleContentImpl = React.forwardRef<\n  CollapsibleContentImplElement,\n  CollapsibleContentImplProps\n>((props: ScopedProps<CollapsibleContentImplProps>, forwardedRef) => {\n  const { __scopeCollapsible, present, children, ...contentProps } = props;\n  const context = useCollapsibleContext(CONTENT_NAME, __scopeCollapsible);\n  const [isPresent, setIsPresent] = React.useState(present);\n  const ref = React.useRef<CollapsibleContentImplElement>(null);\n  const composedRefs = useComposedRefs(forwardedRef, ref);\n  const heightRef = React.useRef<number | undefined>(0);\n  const height = heightRef.current;\n  const widthRef = React.useRef<number | undefined>(0);\n  const width = widthRef.current;\n  // when opening we want it to immediately open to retrieve dimensions\n  // when closing we delay `present` to retrieve dimensions before closing\n  const isOpen = context.open || isPresent;\n  const isMountAnimationPreventedRef = React.useRef(isOpen);\n  const originalStylesRef = React.useRef<Record<string, string>>();\n\n  React.useEffect(() => {\n    const rAF = requestAnimationFrame(() => (isMountAnimationPreventedRef.current = false));\n    return () => cancelAnimationFrame(rAF);\n  }, []);\n\n  useLayoutEffect(() => {\n    const node = ref.current;\n    if (node) {\n      originalStylesRef.current = originalStylesRef.current || {\n        transitionDuration: node.style.transitionDuration,\n        animationDuration: node.style.animationDuration,\n        animationFillMode: node.style.animationFillMode,\n      };\n      // block any animations/transitions so the element renders at its full dimensions\n      node.style.transitionDuration = '0s';\n      node.style.animationDuration = '0s';\n      node.style.animationFillMode = 'none';\n\n      // get width and height from full dimensions\n      const rect = node.getBoundingClientRect();\n      heightRef.current = rect.height;\n      widthRef.current = rect.width;\n\n      // kick off any animations/transitions that were originally set up if it isn't the initial mount\n      if (!isMountAnimationPreventedRef.current) {\n        node.style.transitionDuration = originalStylesRef.current.transitionDuration;\n        node.style.animationDuration = originalStylesRef.current.animationDuration;\n        node.style.animationFillMode = originalStylesRef.current.animationFillMode;\n      }\n\n      setIsPresent(present);\n    }\n    /**\n     * depends on `context.open` because it will change to `false`\n     * when a close is triggered but `present` will be `false` on\n     * animation end (so when close finishes). This allows us to\n     * retrieve the dimensions *before* closing.\n     */\n  }, [context.open, present]);\n\n  return (\n    <Primitive.div\n      data-state={getState(context.open)}\n      data-disabled={context.disabled ? '' : undefined}\n      id={context.contentId}\n      hidden={!isOpen}\n      {...contentProps}\n      ref={composedRefs}\n      style={{\n        [`--radix-collapsible-content-height` as any]: height ? `${height}px` : undefined,\n        [`--radix-collapsible-content-width` as any]: width ? `${width}px` : undefined,\n        ...props.style,\n      }}\n    >\n      {isOpen && children}\n    </Primitive.div>\n  );\n});\n\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction getState(open?: boolean) {\n  return open ? 'open' : 'closed';\n}\n\nconst Root = Collapsible;\nconst Trigger = CollapsibleTrigger;\nconst Content = CollapsibleContent;\n\nexport {\n  createCollapsibleScope,\n  //\n  Collapsible,\n  CollapsibleTrigger,\n  CollapsibleContent,\n  //\n  Root,\n  Trigger,\n  Content,\n};\nexport type { CollapsibleProps, CollapsibleTriggerProps, CollapsibleContentProps };\n"]},"metadata":{},"sourceType":"module"}