{"ast":null,"code":"var __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {\n      ar.push(r.value);\n    }\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nimport { useCallback, useEffect } from 'react';\nimport { useSyncExternalStoreWithSelector } from 'use-sync-external-store/shim/with-selector';\nimport { InterpreterStatus, State } from 'xstate';\nimport { useIdleInterpreter } from './useInterpret';\n\nfunction identity(a) {\n  return a;\n}\n\nexport function useMachine(getMachine) {\n  var _a = [];\n\n  for (var _i = 1; _i < arguments.length; _i++) {\n    _a[_i - 1] = arguments[_i];\n  }\n\n  var _b = __read(_a, 1),\n      _c = _b[0],\n      options = _c === void 0 ? {} : _c; // using `useIdleInterpreter` allows us to subscribe to the service *before* we start it\n  // so we don't miss any notifications\n\n\n  var service = useIdleInterpreter(getMachine, options);\n  var getSnapshot = useCallback(function () {\n    if (service.status === InterpreterStatus.NotStarted) {\n      return options.state ? State.create(options.state) : service.machine.initialState;\n    }\n\n    return service.state;\n  }, [service]);\n  var isEqual = useCallback(function (prevState, nextState) {\n    if (service.status === InterpreterStatus.NotStarted) {\n      return true;\n    } // Only change the current state if:\n    // - the incoming state is the \"live\" initial state (since it might have new actors)\n    // - OR the incoming state actually changed.\n    //\n    // The \"live\" initial state will have .changed === undefined.\n\n\n    var initialStateChanged = nextState.changed === undefined && (Object.keys(nextState.children).length > 0 || typeof prevState.changed === 'boolean');\n    return !(nextState.changed || initialStateChanged);\n  }, [service]);\n  var subscribe = useCallback(function (handleStoreChange) {\n    var unsubscribe = service.subscribe(handleStoreChange).unsubscribe;\n    return unsubscribe;\n  }, [service]);\n  var storeSnapshot = useSyncExternalStoreWithSelector(subscribe, getSnapshot, getSnapshot, identity, isEqual);\n  useEffect(function () {\n    var rehydratedState = options.state;\n    service.start(rehydratedState ? State.create(rehydratedState) : undefined);\n    return function () {\n      service.stop();\n      service.status = InterpreterStatus.NotStarted;\n    };\n  }, []);\n  return [storeSnapshot, service.send, service];\n}","map":{"version":3,"names":["__read","o","n","m","Symbol","iterator","i","call","r","ar","e","next","done","push","value","error","useCallback","useEffect","useSyncExternalStoreWithSelector","InterpreterStatus","State","useIdleInterpreter","identity","a","useMachine","getMachine","_a","_i","arguments","length","_b","_c","options","service","getSnapshot","status","NotStarted","state","create","machine","initialState","isEqual","prevState","nextState","initialStateChanged","changed","undefined","Object","keys","children","subscribe","handleStoreChange","unsubscribe","storeSnapshot","rehydratedState","start","stop","send"],"sources":["C:/Users/lmore/OneDrive/Documents/GitHub/JacksOfAllTrades/jacksofalltrades/node_modules/@xstate/react/es/useMachine.js"],"sourcesContent":["var __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nimport { useCallback, useEffect } from 'react';\nimport { useSyncExternalStoreWithSelector } from 'use-sync-external-store/shim/with-selector';\nimport { InterpreterStatus, State } from 'xstate';\nimport { useIdleInterpreter } from './useInterpret';\nfunction identity(a) {\n    return a;\n}\nexport function useMachine(getMachine) {\n    var _a = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        _a[_i - 1] = arguments[_i];\n    }\n    var _b = __read(_a, 1), _c = _b[0], options = _c === void 0 ? {} : _c;\n    // using `useIdleInterpreter` allows us to subscribe to the service *before* we start it\n    // so we don't miss any notifications\n    var service = useIdleInterpreter(getMachine, options);\n    var getSnapshot = useCallback(function () {\n        if (service.status === InterpreterStatus.NotStarted) {\n            return (options.state\n                ? State.create(options.state)\n                : service.machine.initialState);\n        }\n        return service.state;\n    }, [service]);\n    var isEqual = useCallback(function (prevState, nextState) {\n        if (service.status === InterpreterStatus.NotStarted) {\n            return true;\n        }\n        // Only change the current state if:\n        // - the incoming state is the \"live\" initial state (since it might have new actors)\n        // - OR the incoming state actually changed.\n        //\n        // The \"live\" initial state will have .changed === undefined.\n        var initialStateChanged = nextState.changed === undefined &&\n            (Object.keys(nextState.children).length > 0 ||\n                typeof prevState.changed === 'boolean');\n        return !(nextState.changed || initialStateChanged);\n    }, [service]);\n    var subscribe = useCallback(function (handleStoreChange) {\n        var unsubscribe = service.subscribe(handleStoreChange).unsubscribe;\n        return unsubscribe;\n    }, [service]);\n    var storeSnapshot = useSyncExternalStoreWithSelector(subscribe, getSnapshot, getSnapshot, identity, isEqual);\n    useEffect(function () {\n        var rehydratedState = options.state;\n        service.start(rehydratedState ? State.create(rehydratedState) : undefined);\n        return function () {\n            service.stop();\n            service.status = InterpreterStatus.NotStarted;\n        };\n    }, []);\n    return [storeSnapshot, service.send, service];\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}