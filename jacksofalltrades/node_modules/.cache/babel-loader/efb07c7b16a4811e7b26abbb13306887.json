{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { DeleteBucketEncryptionRequest } from \"../models/models_0\";\nimport { deserializeAws_restXmlDeleteBucketEncryptionCommand, serializeAws_restXmlDeleteBucketEncryptionCommand } from \"../protocols/Aws_restXml\";\nimport { getBucketEndpointPlugin } from \"@aws-sdk/middleware-bucket-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\n/**\n * <p>This implementation of the DELETE operation removes default encryption from the bucket.\n *          For information about the Amazon S3 default encryption feature, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-encryption.html\">Amazon S3 Default Bucket Encryption</a> in the\n *             <i>Amazon Simple Storage Service Developer Guide</i>.</p>\n *          <p>To use this operation, you must have permissions to perform the\n *             <code>s3:PutEncryptionConfiguration</code> action. The bucket owner has this permission\n *          by default. The bucket owner can grant this permission to others. For more information\n *          about permissions, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/using-with-s3-actions.html#using-with-s3-actions-related-to-bucket-subresources\">Permissions Related to Bucket Subresource Operations</a> and <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-access-control.html\">Managing Access Permissions to your Amazon S3\n *             Resources</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.</p>\n *\n *          <p class=\"title\">\n *             <b>Related Resources</b>\n *          </p>\n *          <ul>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketEncryption.html\">PutBucketEncryption</a>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketEncryption.html\">GetBucketEncryption</a>\n *                </p>\n *             </li>\n *          </ul>\n */\n\nvar DeleteBucketEncryptionCommand =\n/** @class */\nfunction (_super) {\n  __extends(DeleteBucketEncryptionCommand, _super); // Start section: command_properties\n  // End section: command_properties\n\n\n  function DeleteBucketEncryptionCommand(input) {\n    var _this = // Start section: command_constructor\n    _super.call(this) || this;\n\n    _this.input = input;\n    return _this; // End section: command_constructor\n  }\n  /**\n   * @internal\n   */\n\n\n  DeleteBucketEncryptionCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n    this.middlewareStack.use(getBucketEndpointPlugin(configuration));\n    var stack = clientStack.concat(this.middlewareStack);\n    var logger = configuration.logger;\n    var clientName = \"S3Client\";\n    var commandName = \"DeleteBucketEncryptionCommand\";\n    var handlerExecutionContext = {\n      logger: logger,\n      clientName: clientName,\n      commandName: commandName,\n      inputFilterSensitiveLog: DeleteBucketEncryptionRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: function (output) {\n        return output;\n      }\n    };\n    var requestHandler = configuration.requestHandler;\n    return stack.resolve(function (request) {\n      return requestHandler.handle(request.request, options || {});\n    }, handlerExecutionContext);\n  };\n\n  DeleteBucketEncryptionCommand.prototype.serialize = function (input, context) {\n    return serializeAws_restXmlDeleteBucketEncryptionCommand(input, context);\n  };\n\n  DeleteBucketEncryptionCommand.prototype.deserialize = function (output, context) {\n    return deserializeAws_restXmlDeleteBucketEncryptionCommand(output, context);\n  };\n\n  return DeleteBucketEncryptionCommand;\n}($Command);\n\nexport { DeleteBucketEncryptionCommand };","map":{"version":3,"mappings":";AACA,SAASA,6BAAT,QAA8C,oBAA9C;AACA,SACEC,mDADF,EAEEC,iDAFF,QAGO,0BAHP;AAIA,SAASC,uBAAT,QAAwC,qCAAxC;AACA,SAASC,cAAT,QAA+B,2BAA/B;AAEA,SAASC,OAAO,IAAIC,QAApB,QAAoC,wBAApC;AAcA;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA;AAAA;AAAA;EAAmDC,iDAAnD,CAKE;EACA;;;EAEA,uCAAqBC,KAArB,EAA8D;IAA9D,YACE;IACAC,qBAAO,IAFT;;IAAqBC;iBAAyC,CAG5D;EACD;EAED;;;;;EAGAC,sEACEC,WADF,EAEEC,aAFF,EAGEC,OAHF,EAGgC;IAE9B,KAAKC,eAAL,CAAqBC,GAArB,CAAyBZ,cAAc,CAACS,aAAD,EAAgB,KAAKI,SAArB,EAAgC,KAAKC,WAArC,CAAvC;IACA,KAAKH,eAAL,CAAqBC,GAArB,CAAyBb,uBAAuB,CAACU,aAAD,CAAhD;IAEA,IAAMM,KAAK,GAAGP,WAAW,CAACQ,MAAZ,CAAmB,KAAKL,eAAxB,CAAd;IAEQ,UAAM,GAAKF,aAAa,OAAxB;IACR,IAAMQ,UAAU,GAAG,UAAnB;IACA,IAAMC,WAAW,GAAG,+BAApB;IACA,IAAMC,uBAAuB,GAA4B;MACvDC,MAAM,QADiD;MAEvDH,UAAU,YAF6C;MAGvDC,WAAW,aAH4C;MAIvDG,uBAAuB,EAAEzB,6BAA6B,CAAC0B,kBAJA;MAKvDC,wBAAwB,EAAE,UAACC,MAAD,EAAY;QAAK;MAAM;IALM,CAAzD;IAOQ,kBAAc,GAAKf,aAAa,eAAhC;IACR,OAAOM,KAAK,CAACU,OAAN,CACL,UAACC,OAAD,EAAuC;MACrC,qBAAc,CAACC,MAAf,CAAsBD,OAAO,CAACA,OAA9B,EAAwDhB,OAAO,IAAI,EAAnE;IAAsE,CAFnE,EAGLS,uBAHK,CAAP;EAKD,CA1BD;;EA4BQZ,oDAAR,UAAkBH,KAAlB,EAA6DwB,OAA7D,EAAoF;IAClF,OAAO9B,iDAAiD,CAACM,KAAD,EAAQwB,OAAR,CAAxD;EACD,CAFO;;EAIArB,sDAAR,UAAoBiB,MAApB,EAA4CI,OAA5C,EAAmE;IACjE,OAAO/B,mDAAmD,CAAC2B,MAAD,EAASI,OAAT,CAA1D;EACD,CAFO;;EAMV;AAAC,CAvDD,CAAmD1B,QAAnD","names":["DeleteBucketEncryptionRequest","deserializeAws_restXmlDeleteBucketEncryptionCommand","serializeAws_restXmlDeleteBucketEncryptionCommand","getBucketEndpointPlugin","getSerdePlugin","Command","$Command","__extends","input","_super","_this","DeleteBucketEncryptionCommand","clientStack","configuration","options","middlewareStack","use","serialize","deserialize","stack","concat","clientName","commandName","handlerExecutionContext","logger","inputFilterSensitiveLog","filterSensitiveLog","outputFilterSensitiveLog","output","resolve","request","handle","context"],"sources":["C:\\Users\\lmore\\OneDrive\\Documents\\GitHub\\JacksOfAllTrades\\jacksofalltrades\\node_modules\\@aws-sdk\\client-s3\\commands\\DeleteBucketEncryptionCommand.ts"],"sourcesContent":["import { S3ClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from \"../S3Client\";\nimport { DeleteBucketEncryptionRequest } from \"../models/models_0\";\nimport {\n  deserializeAws_restXmlDeleteBucketEncryptionCommand,\n  serializeAws_restXmlDeleteBucketEncryptionCommand,\n} from \"../protocols/Aws_restXml\";\nimport { getBucketEndpointPlugin } from \"@aws-sdk/middleware-bucket-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { HttpRequest as __HttpRequest, HttpResponse as __HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport {\n  FinalizeHandlerArguments,\n  Handler,\n  HandlerExecutionContext,\n  MiddlewareStack,\n  HttpHandlerOptions as __HttpHandlerOptions,\n  MetadataBearer as __MetadataBearer,\n  SerdeContext as __SerdeContext,\n} from \"@aws-sdk/types\";\n\nexport type DeleteBucketEncryptionCommandInput = DeleteBucketEncryptionRequest;\nexport type DeleteBucketEncryptionCommandOutput = __MetadataBearer;\n\n/**\n * <p>This implementation of the DELETE operation removes default encryption from the bucket.\n *          For information about the Amazon S3 default encryption feature, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-encryption.html\">Amazon S3 Default Bucket Encryption</a> in the\n *             <i>Amazon Simple Storage Service Developer Guide</i>.</p>\n *          <p>To use this operation, you must have permissions to perform the\n *             <code>s3:PutEncryptionConfiguration</code> action. The bucket owner has this permission\n *          by default. The bucket owner can grant this permission to others. For more information\n *          about permissions, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/using-with-s3-actions.html#using-with-s3-actions-related-to-bucket-subresources\">Permissions Related to Bucket Subresource Operations</a> and <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-access-control.html\">Managing Access Permissions to your Amazon S3\n *             Resources</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.</p>\n *\n *          <p class=\"title\">\n *             <b>Related Resources</b>\n *          </p>\n *          <ul>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketEncryption.html\">PutBucketEncryption</a>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketEncryption.html\">GetBucketEncryption</a>\n *                </p>\n *             </li>\n *          </ul>\n */\nexport class DeleteBucketEncryptionCommand extends $Command<\n  DeleteBucketEncryptionCommandInput,\n  DeleteBucketEncryptionCommandOutput,\n  S3ClientResolvedConfig\n> {\n  // Start section: command_properties\n  // End section: command_properties\n\n  constructor(readonly input: DeleteBucketEncryptionCommandInput) {\n    // Start section: command_constructor\n    super();\n    // End section: command_constructor\n  }\n\n  /**\n   * @internal\n   */\n  resolveMiddleware(\n    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,\n    configuration: S3ClientResolvedConfig,\n    options?: __HttpHandlerOptions\n  ): Handler<DeleteBucketEncryptionCommandInput, DeleteBucketEncryptionCommandOutput> {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n    this.middlewareStack.use(getBucketEndpointPlugin(configuration));\n\n    const stack = clientStack.concat(this.middlewareStack);\n\n    const { logger } = configuration;\n    const clientName = \"S3Client\";\n    const commandName = \"DeleteBucketEncryptionCommand\";\n    const handlerExecutionContext: HandlerExecutionContext = {\n      logger,\n      clientName,\n      commandName,\n      inputFilterSensitiveLog: DeleteBucketEncryptionRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: (output: any) => output,\n    };\n    const { requestHandler } = configuration;\n    return stack.resolve(\n      (request: FinalizeHandlerArguments<any>) =>\n        requestHandler.handle(request.request as __HttpRequest, options || {}),\n      handlerExecutionContext\n    );\n  }\n\n  private serialize(input: DeleteBucketEncryptionCommandInput, context: __SerdeContext): Promise<__HttpRequest> {\n    return serializeAws_restXmlDeleteBucketEncryptionCommand(input, context);\n  }\n\n  private deserialize(output: __HttpResponse, context: __SerdeContext): Promise<DeleteBucketEncryptionCommandOutput> {\n    return deserializeAws_restXmlDeleteBucketEncryptionCommand(output, context);\n  }\n\n  // Start section: command_body_extra\n  // End section: command_body_extra\n}\n"]},"metadata":{},"sourceType":"module"}