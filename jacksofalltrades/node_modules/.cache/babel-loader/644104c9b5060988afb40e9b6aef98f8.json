{"ast":null,"code":"import { useId as e } from \"@radix-ui/react-id\";\nimport * as o from \"@radix-ui/react-menu\";\nimport { createMenuScope as n } from \"@radix-ui/react-menu\";\nimport { Primitive as r } from \"@radix-ui/react-primitive\";\nimport { useControllableState as t } from \"@radix-ui/react-use-controllable-state\";\nimport { createContextScope as p } from \"@radix-ui/react-context\";\nimport { composeRefs as d } from \"@radix-ui/react-compose-refs\";\nimport { composeEventHandlers as a } from \"@radix-ui/primitive\";\nimport * as c from \"react\";\nimport u from \"@babel/runtime/helpers/esm/extends\";\nconst [s, i] = p(\"DropdownMenu\", [n]);\nexport { i as createDropdownMenuScope };\nconst l = n(),\n      [m, w] = s(\"DropdownMenu\");\nexport const DropdownMenu = e => {\n  const {\n    __scopeDropdownMenu: n,\n    children: r,\n    open: p,\n    defaultOpen: d,\n    onOpenChange: a\n  } = e,\n        s = M(\"DropdownMenu\", n),\n        i = l(n),\n        [w = !1, D] = t({\n    prop: p,\n    defaultProp: d,\n    onChange: a\n  }),\n        g = c.useCallback(() => D(e => !e), [D]);\n  return s.isInsideContent ? /*#__PURE__*/c.createElement(m, {\n    scope: n,\n    isRootMenu: !1,\n    open: w,\n    onOpenChange: D,\n    onOpenToggle: g\n  }, /*#__PURE__*/c.createElement(o.Sub, u({}, i, {\n    open: w,\n    onOpenChange: D\n  }), r)) : /*#__PURE__*/c.createElement(f, u({}, e, {\n    open: w,\n    onOpenChange: D,\n    onOpenToggle: g\n  }), r);\n};\n/*#__PURE__*/\n\nconst f = n => {\n  const {\n    __scopeDropdownMenu: r,\n    children: t,\n    dir: p,\n    open: d,\n    onOpenChange: a,\n    onOpenToggle: s,\n    modal: i = !0\n  } = n,\n        w = l(r),\n        f = c.useRef(null);\n  /*#__PURE__*/\n\n  return c.createElement(m, {\n    scope: r,\n    isRootMenu: !0,\n    triggerId: e(),\n    triggerRef: f,\n    contentId: e(),\n    open: d,\n    onOpenChange: a,\n    onOpenToggle: s,\n    modal: i\n  }, /*#__PURE__*/c.createElement(o.Root, u({}, w, {\n    open: d,\n    onOpenChange: a,\n    dir: p,\n    modal: i\n  }), t));\n};\n\nexport const DropdownMenuTrigger = /*#__PURE__*/c.forwardRef((e, n) => {\n  const {\n    __scopeDropdownMenu: t,\n    disabled: p = !1,\n    ...s\n  } = e,\n        i = w(\"DropdownMenuTrigger\", t),\n        m = l(t);\n  return i.isRootMenu ? /*#__PURE__*/c.createElement(o.Anchor, u({\n    asChild: !0\n  }, m), /*#__PURE__*/c.createElement(r.button, u({\n    type: \"button\",\n    id: i.triggerId,\n    \"aria-haspopup\": \"menu\",\n    \"aria-expanded\": !!i.open || void 0,\n    \"aria-controls\": i.open ? i.contentId : void 0,\n    \"data-state\": i.open ? \"open\" : \"closed\",\n    \"data-disabled\": p ? \"\" : void 0,\n    disabled: p\n  }, s, {\n    ref: d(n, i.triggerRef),\n    onPointerDown: a(e.onPointerDown, e => {\n      p || 0 !== e.button || !1 !== e.ctrlKey || (i.open || e.preventDefault(), i.onOpenToggle());\n    }),\n    onKeyDown: a(e.onKeyDown, e => {\n      p || ([\"Enter\", \" \"].includes(e.key) && i.onOpenToggle(), \"ArrowDown\" === e.key && i.onOpenChange(!0), [\" \", \"ArrowDown\"].includes(e.key) && e.preventDefault());\n    })\n  }))) : null;\n});\n/*#__PURE__*/\n\nconst [D, M] = s(\"DropdownMenuContent\", {\n  isInsideContent: !1\n});\nexport const DropdownMenuContent = /*#__PURE__*/c.forwardRef((e, n) => {\n  const {\n    __scopeDropdownMenu: r,\n    ...t\n  } = e,\n        p = w(\"DropdownMenuContent\", r),\n        d = l(r),\n        a = { ...t,\n    style: { ...e.style,\n      \"--radix-dropdown-menu-content-transform-origin\": \"var(--radix-popper-transform-origin)\"\n    }\n  };\n  /*#__PURE__*/\n\n  return c.createElement(D, {\n    scope: r,\n    isInsideContent: !0\n  }, p.isRootMenu ? /*#__PURE__*/c.createElement(g, u({\n    __scopeDropdownMenu: r\n  }, a, {\n    ref: n\n  })) : /*#__PURE__*/c.createElement(o.Content, u({}, d, a, {\n    ref: n\n  })));\n});\n/*#__PURE__*/\n\nconst g = /*#__PURE__*/c.forwardRef((e, n) => {\n  const {\n    __scopeDropdownMenu: r,\n    portalled: t = !0,\n    ...p\n  } = e,\n        d = w(\"DropdownMenuContent\", r),\n        s = l(r),\n        i = c.useRef(!1);\n  return d.isRootMenu ? /*#__PURE__*/c.createElement(o.Content, u({\n    id: d.contentId,\n    \"aria-labelledby\": d.triggerId\n  }, s, p, {\n    ref: n,\n    portalled: t,\n    onCloseAutoFocus: a(e.onCloseAutoFocus, e => {\n      var o;\n      i.current || null === (o = d.triggerRef.current) || void 0 === o || o.focus(), i.current = !1, e.preventDefault();\n    }),\n    onInteractOutside: a(e.onInteractOutside, e => {\n      const o = e.detail.originalEvent,\n            n = 0 === o.button && !0 === o.ctrlKey,\n            r = 2 === o.button || n;\n      d.modal && !r || (i.current = !0);\n    })\n  })) : null;\n});\nexport const DropdownMenuGroup = /*#__PURE__*/c.forwardRef((e, n) => {\n  const {\n    __scopeDropdownMenu: r,\n    ...t\n  } = e,\n        p = l(r);\n  /*#__PURE__*/\n\n  return c.createElement(o.Group, u({}, p, t, {\n    ref: n\n  }));\n});\n/*#__PURE__*/\n\nexport const DropdownMenuLabel = /*#__PURE__*/c.forwardRef((e, n) => {\n  const {\n    __scopeDropdownMenu: r,\n    ...t\n  } = e,\n        p = l(r);\n  /*#__PURE__*/\n\n  return c.createElement(o.Label, u({}, p, t, {\n    ref: n\n  }));\n});\n/*#__PURE__*/\n\nexport const DropdownMenuItem = /*#__PURE__*/c.forwardRef((e, n) => {\n  const {\n    __scopeDropdownMenu: r,\n    ...t\n  } = e,\n        p = l(r);\n  /*#__PURE__*/\n\n  return c.createElement(o.Item, u({}, p, t, {\n    ref: n\n  }));\n});\n/*#__PURE__*/\n\nexport const DropdownMenuTriggerItem = /*#__PURE__*/c.forwardRef((e, n) => {\n  const {\n    __scopeDropdownMenu: r,\n    ...t\n  } = e,\n        p = l(r);\n  /*#__PURE__*/\n\n  return c.createElement(o.SubTrigger, u({}, p, t, {\n    ref: n\n  }));\n});\n/*#__PURE__*/\n\nexport const DropdownMenuCheckboxItem = /*#__PURE__*/c.forwardRef((e, n) => {\n  const {\n    __scopeDropdownMenu: r,\n    ...t\n  } = e,\n        p = l(r);\n  /*#__PURE__*/\n\n  return c.createElement(o.CheckboxItem, u({}, p, t, {\n    ref: n\n  }));\n});\n/*#__PURE__*/\n\nexport const DropdownMenuRadioGroup = /*#__PURE__*/c.forwardRef((e, n) => {\n  const {\n    __scopeDropdownMenu: r,\n    ...t\n  } = e,\n        p = l(r);\n  /*#__PURE__*/\n\n  return c.createElement(o.RadioGroup, u({}, p, t, {\n    ref: n\n  }));\n});\n/*#__PURE__*/\n\nexport const DropdownMenuRadioItem = /*#__PURE__*/c.forwardRef((e, n) => {\n  const {\n    __scopeDropdownMenu: r,\n    ...t\n  } = e,\n        p = l(r);\n  /*#__PURE__*/\n\n  return c.createElement(o.RadioItem, u({}, p, t, {\n    ref: n\n  }));\n});\n/*#__PURE__*/\n\nexport const DropdownMenuItemIndicator = /*#__PURE__*/c.forwardRef((e, n) => {\n  const {\n    __scopeDropdownMenu: r,\n    ...t\n  } = e,\n        p = l(r);\n  /*#__PURE__*/\n\n  return c.createElement(o.ItemIndicator, u({}, p, t, {\n    ref: n\n  }));\n});\n/*#__PURE__*/\n\nexport const DropdownMenuSeparator = /*#__PURE__*/c.forwardRef((e, n) => {\n  const {\n    __scopeDropdownMenu: r,\n    ...t\n  } = e,\n        p = l(r);\n  /*#__PURE__*/\n\n  return c.createElement(o.Separator, u({}, p, t, {\n    ref: n\n  }));\n});\n/*#__PURE__*/\n\nexport const DropdownMenuArrow = /*#__PURE__*/c.forwardRef((e, n) => {\n  const {\n    __scopeDropdownMenu: r,\n    ...t\n  } = e,\n        p = l(r);\n  /*#__PURE__*/\n\n  return c.createElement(o.Arrow, u({}, p, t, {\n    ref: n\n  }));\n});\n/*#__PURE__*/\n\nexport const Root = DropdownMenu;\nexport const Trigger = DropdownMenuTrigger;\nexport const Content = DropdownMenuContent;\nexport const Group = DropdownMenuGroup;\nexport const Label = DropdownMenuLabel;\nexport const Item = DropdownMenuItem;\nexport const TriggerItem = DropdownMenuTriggerItem;\nexport const CheckboxItem = DropdownMenuCheckboxItem;\nexport const RadioGroup = DropdownMenuRadioGroup;\nexport const RadioItem = DropdownMenuRadioItem;\nexport const ItemIndicator = DropdownMenuItemIndicator;\nexport const Separator = DropdownMenuSeparator;\nexport const Arrow = DropdownMenuArrow;","map":{"version":3,"mappings":"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","names":["createDropdownMenuContext","createDropdownMenuScope","createContextScope","createMenuScope","useMenuScope","DropdownMenuProvider","useDropdownMenuContext","DropdownMenu","props","__scopeDropdownMenu","children","open","openProp","defaultOpen","onOpenChange","contentContext","useContentContext","menuScope","setOpen","useControllableState","prop","defaultProp","onChange","handleOpenToggle","React","useCallback","prevOpen","isInsideContent","_react","$c7ff2201b6eec7866a95d2679b05981$var$DropdownMenuProvider","scope","isRootMenu","onOpenToggle","_radixUiReactMenu","Sub","_babelRuntimeHelpersEsmExtends","$c7ff2201b6eec7866a95d2679b05981$var$DropdownMenuRoot","DropdownMenuRoot","dir","modal","triggerRef","useRef","triggerId","useId","contentId","Root","DropdownMenuTrigger","forwardRef","forwardedRef","disabled","triggerProps","context","Anchor","asChild","Primitive","button","type","id","undefined","ref","composeRefs","onPointerDown","composeEventHandlers","event","ctrlKey","preventDefault","onKeyDown","includes","key","ContentProvider","DropdownMenuContent","contentProps","commonProps","style","$c7ff2201b6eec7866a95d2679b05981$var$ContentProvider","$c7ff2201b6eec7866a95d2679b05981$var$DropdownMenuRootContent","Content","DropdownMenuRootContent","portalled","hasInteractedOutsideRef","onCloseAutoFocus","current","_context$triggerRef$c","focus","onInteractOutside","originalEvent","detail","ctrlLeftClick","isRightClick","DropdownMenuGroup","groupProps","Group","DropdownMenuLabel","labelProps","Label","DropdownMenuItem","itemProps","Item","DropdownMenuTriggerItem","triggerItemProps","SubTrigger","DropdownMenuCheckboxItem","checkboxItemProps","CheckboxItem","DropdownMenuRadioGroup","radioGroupProps","RadioGroup","DropdownMenuRadioItem","radioItemProps","RadioItem","DropdownMenuItemIndicator","itemIndicatorProps","ItemIndicator","DropdownMenuSeparator","separatorProps","Separator","DropdownMenuArrow","arrowProps","Arrow","Trigger","TriggerItem"],"sources":["C:\\Users\\lmore\\OneDrive\\Documents\\GitHub\\JacksOfAllTrades\\jacksofalltrades\\node_modules\\@aws-amplify\\ui-react\\node_modules\\@radix-ui\\react-dropdown-menu\\dist\\packages\\react\\dropdown-menu\\src\\DropdownMenu.tsx"],"sourcesContent":["import * as React from 'react';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { composeRefs } from '@radix-ui/react-compose-refs';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { useControllableState } from '@radix-ui/react-use-controllable-state';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport * as MenuPrimitive from '@radix-ui/react-menu';\nimport { createMenuScope } from '@radix-ui/react-menu';\nimport { useId } from '@radix-ui/react-id';\n\nimport type * as Radix from '@radix-ui/react-primitive';\nimport type { Scope } from '@radix-ui/react-context';\n\ntype Direction = 'ltr' | 'rtl';\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenu\n * -----------------------------------------------------------------------------------------------*/\n\nconst DROPDOWN_MENU_NAME = 'DropdownMenu';\n\ntype ScopedProps<P> = P & { __scopeDropdownMenu?: Scope };\nconst [createDropdownMenuContext, createDropdownMenuScope] = createContextScope(\n  DROPDOWN_MENU_NAME,\n  [createMenuScope]\n);\nconst useMenuScope = createMenuScope();\n\ntype DropdownMenuRootContextValue = {\n  isRootMenu: true;\n  triggerId: string;\n  triggerRef: React.RefObject<HTMLButtonElement>;\n  contentId: string;\n  open: boolean;\n  onOpenChange(open: boolean): void;\n  onOpenToggle(): void;\n  modal: boolean;\n};\n\ntype DropdownMenuSubContextValue = {\n  isRootMenu: false;\n  open: boolean;\n  onOpenChange(open: boolean): void;\n  onOpenToggle(): void;\n};\n\nconst [DropdownMenuProvider, useDropdownMenuContext] = createDropdownMenuContext<\n  DropdownMenuRootContextValue | DropdownMenuSubContextValue\n>(DROPDOWN_MENU_NAME);\n\ninterface DropdownMenuProps {\n  dir?: Direction;\n  open?: boolean;\n  defaultOpen?: boolean;\n  onOpenChange?(open: boolean): void;\n  modal?: boolean;\n  children?: React.ReactNode;\n}\n\nconst DropdownMenu: React.FC<DropdownMenuProps> = (props: ScopedProps<DropdownMenuProps>) => {\n  const { __scopeDropdownMenu, children, open: openProp, defaultOpen, onOpenChange } = props;\n  const contentContext = useContentContext(DROPDOWN_MENU_NAME, __scopeDropdownMenu);\n  const menuScope = useMenuScope(__scopeDropdownMenu);\n  const [open = false, setOpen] = useControllableState({\n    prop: openProp,\n    defaultProp: defaultOpen,\n    onChange: onOpenChange,\n  });\n\n  const handleOpenToggle = React.useCallback(() => setOpen((prevOpen) => !prevOpen), [setOpen]);\n\n  return contentContext.isInsideContent ? (\n    <DropdownMenuProvider\n      scope={__scopeDropdownMenu}\n      isRootMenu={false}\n      open={open}\n      onOpenChange={setOpen}\n      onOpenToggle={handleOpenToggle}\n    >\n      <MenuPrimitive.Sub {...menuScope} open={open} onOpenChange={setOpen}>\n        {children}\n      </MenuPrimitive.Sub>\n    </DropdownMenuProvider>\n  ) : (\n    <DropdownMenuRoot {...props} open={open} onOpenChange={setOpen} onOpenToggle={handleOpenToggle}>\n      {children}\n    </DropdownMenuRoot>\n  );\n};\n\nDropdownMenu.displayName = DROPDOWN_MENU_NAME;\n\n/* ---------------------------------------------------------------------------------------------- */\n\ninterface DropdownMenuRootProps {\n  dir?: Direction;\n  open: boolean;\n  onOpenChange(open: boolean): void;\n  onOpenToggle(): void;\n  modal?: boolean;\n  children?: React.ReactNode;\n}\n\nconst DropdownMenuRoot: React.FC<DropdownMenuRootProps> = (\n  props: ScopedProps<DropdownMenuRootProps>\n) => {\n  const {\n    __scopeDropdownMenu,\n    children,\n    dir,\n    open,\n    onOpenChange,\n    onOpenToggle,\n    modal = true,\n  } = props;\n  const menuScope = useMenuScope(__scopeDropdownMenu);\n  const triggerRef = React.useRef<HTMLButtonElement>(null);\n  return (\n    <DropdownMenuProvider\n      scope={__scopeDropdownMenu}\n      isRootMenu={true}\n      triggerId={useId()}\n      triggerRef={triggerRef}\n      contentId={useId()}\n      open={open}\n      onOpenChange={onOpenChange}\n      onOpenToggle={onOpenToggle}\n      modal={modal}\n    >\n      <MenuPrimitive.Root\n        {...menuScope}\n        open={open}\n        onOpenChange={onOpenChange}\n        dir={dir}\n        modal={modal}\n      >\n        {children}\n      </MenuPrimitive.Root>\n    </DropdownMenuProvider>\n  );\n};\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuTrigger\n * -----------------------------------------------------------------------------------------------*/\n\nconst TRIGGER_NAME = 'DropdownMenuTrigger';\n\ntype DropdownMenuTriggerElement = React.ElementRef<typeof Primitive.button>;\ntype PrimitiveButtonProps = Radix.ComponentPropsWithoutRef<typeof Primitive.button>;\ninterface DropdownMenuTriggerProps extends PrimitiveButtonProps {}\n\nconst DropdownMenuTrigger = React.forwardRef<DropdownMenuTriggerElement, DropdownMenuTriggerProps>(\n  (props: ScopedProps<DropdownMenuTriggerProps>, forwardedRef) => {\n    const { __scopeDropdownMenu, disabled = false, ...triggerProps } = props;\n    const context = useDropdownMenuContext(TRIGGER_NAME, __scopeDropdownMenu);\n    const menuScope = useMenuScope(__scopeDropdownMenu);\n    return context.isRootMenu ? (\n      <MenuPrimitive.Anchor asChild {...menuScope}>\n        <Primitive.button\n          type=\"button\"\n          id={context.triggerId}\n          aria-haspopup=\"menu\"\n          aria-expanded={context.open ? true : undefined}\n          aria-controls={context.open ? context.contentId : undefined}\n          data-state={context.open ? 'open' : 'closed'}\n          data-disabled={disabled ? '' : undefined}\n          disabled={disabled}\n          {...triggerProps}\n          ref={composeRefs(forwardedRef, context.triggerRef)}\n          onPointerDown={composeEventHandlers(props.onPointerDown, (event) => {\n            // only call handler if it's the left button (mousedown gets triggered by all mouse buttons)\n            // but not when the control key is pressed (avoiding MacOS right click)\n            if (!disabled && event.button === 0 && event.ctrlKey === false) {\n              // prevent trigger focusing when opening\n              // this allows the content to be given focus without competition\n              if (!context.open) event.preventDefault();\n              context.onOpenToggle();\n            }\n          })}\n          onKeyDown={composeEventHandlers(props.onKeyDown, (event) => {\n            if (disabled) return;\n            if (['Enter', ' '].includes(event.key)) context.onOpenToggle();\n            if (event.key === 'ArrowDown') context.onOpenChange(true);\n            // prevent keypresses from scrolling window\n            if ([' ', 'ArrowDown'].includes(event.key)) event.preventDefault();\n          })}\n        />\n      </MenuPrimitive.Anchor>\n    ) : null;\n  }\n);\n\nDropdownMenuTrigger.displayName = TRIGGER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_NAME = 'DropdownMenuContent';\n\nconst [ContentProvider, useContentContext] = createDropdownMenuContext(CONTENT_NAME, {\n  isInsideContent: false,\n});\n\ntype DropdownMenuContentElement =\n  | DropdownMenuRootContentElement\n  | React.ElementRef<typeof MenuPrimitive.Content>;\ntype MenuContentProps = Radix.ComponentPropsWithoutRef<typeof MenuPrimitive.Content>;\ninterface DropdownMenuContentProps extends DropdownMenuRootContentProps, MenuContentProps {}\n\nconst DropdownMenuContent = React.forwardRef<DropdownMenuContentElement, DropdownMenuContentProps>(\n  (props: ScopedProps<DropdownMenuContentProps>, forwardedRef) => {\n    const { __scopeDropdownMenu, ...contentProps } = props;\n    const context = useDropdownMenuContext(CONTENT_NAME, __scopeDropdownMenu);\n    const menuScope = useMenuScope(__scopeDropdownMenu);\n    const commonProps = {\n      ...contentProps,\n      style: {\n        ...props.style,\n        // re-namespace exposed content custom property\n        ['--radix-dropdown-menu-content-transform-origin' as any]:\n          'var(--radix-popper-transform-origin)',\n      },\n    };\n\n    return (\n      <ContentProvider scope={__scopeDropdownMenu} isInsideContent={true}>\n        {context.isRootMenu ? (\n          <DropdownMenuRootContent\n            __scopeDropdownMenu={__scopeDropdownMenu}\n            {...commonProps}\n            ref={forwardedRef}\n          />\n        ) : (\n          <MenuPrimitive.Content {...menuScope} {...commonProps} ref={forwardedRef} />\n        )}\n      </ContentProvider>\n    );\n  }\n);\n\nDropdownMenuContent.displayName = CONTENT_NAME;\n\n/* ---------------------------------------------------------------------------------------------- */\n\ntype DropdownMenuRootContentElement = React.ElementRef<typeof MenuPrimitive.Content>;\ninterface DropdownMenuRootContentProps extends ScopedProps<MenuContentProps> {}\n\nconst DropdownMenuRootContent = React.forwardRef<\n  DropdownMenuRootContentElement,\n  DropdownMenuRootContentProps\n>((props, forwardedRef) => {\n  const { __scopeDropdownMenu, portalled = true, ...contentProps } = props;\n  const context = useDropdownMenuContext(CONTENT_NAME, __scopeDropdownMenu);\n  const menuScope = useMenuScope(__scopeDropdownMenu);\n  const hasInteractedOutsideRef = React.useRef(false);\n  return context.isRootMenu ? (\n    <MenuPrimitive.Content\n      id={context.contentId}\n      aria-labelledby={context.triggerId}\n      {...menuScope}\n      {...contentProps}\n      ref={forwardedRef}\n      portalled={portalled}\n      onCloseAutoFocus={composeEventHandlers(props.onCloseAutoFocus, (event) => {\n        if (!hasInteractedOutsideRef.current) context.triggerRef.current?.focus();\n        hasInteractedOutsideRef.current = false;\n        // Always prevent auto focus because we either focus manually or want user agent focus\n        event.preventDefault();\n      })}\n      onInteractOutside={composeEventHandlers(props.onInteractOutside, (event) => {\n        const originalEvent = event.detail.originalEvent as PointerEvent;\n        const ctrlLeftClick = originalEvent.button === 0 && originalEvent.ctrlKey === true;\n        const isRightClick = originalEvent.button === 2 || ctrlLeftClick;\n        if (!context.modal || isRightClick) hasInteractedOutsideRef.current = true;\n      })}\n    />\n  ) : null;\n});\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuGroup\n * -----------------------------------------------------------------------------------------------*/\n\nconst GROUP_NAME = 'DropdownMenuGroup';\n\ntype DropdownMenuGroupElement = React.ElementRef<typeof MenuPrimitive.Group>;\ntype MenuGroupProps = Radix.ComponentPropsWithoutRef<typeof MenuPrimitive.Group>;\ninterface DropdownMenuGroupProps extends MenuGroupProps {}\n\nconst DropdownMenuGroup = React.forwardRef<DropdownMenuGroupElement, DropdownMenuGroupProps>(\n  (props: ScopedProps<DropdownMenuGroupProps>, forwardedRef) => {\n    const { __scopeDropdownMenu, ...groupProps } = props;\n    const menuScope = useMenuScope(__scopeDropdownMenu);\n    return <MenuPrimitive.Group {...menuScope} {...groupProps} ref={forwardedRef} />;\n  }\n);\n\nDropdownMenuGroup.displayName = GROUP_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuLabel\n * -----------------------------------------------------------------------------------------------*/\n\nconst LABEL_NAME = 'DropdownMenuLabel';\n\ntype DropdownMenuLabelElement = React.ElementRef<typeof MenuPrimitive.Label>;\ntype MenuLabelProps = Radix.ComponentPropsWithoutRef<typeof MenuPrimitive.Label>;\ninterface DropdownMenuLabelProps extends MenuLabelProps {}\n\nconst DropdownMenuLabel = React.forwardRef<DropdownMenuLabelElement, DropdownMenuLabelProps>(\n  (props: ScopedProps<DropdownMenuLabelProps>, forwardedRef) => {\n    const { __scopeDropdownMenu, ...labelProps } = props;\n    const menuScope = useMenuScope(__scopeDropdownMenu);\n    return <MenuPrimitive.Label {...menuScope} {...labelProps} ref={forwardedRef} />;\n  }\n);\n\nDropdownMenuLabel.displayName = LABEL_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuItem\n * -----------------------------------------------------------------------------------------------*/\n\nconst ITEM_NAME = 'DropdownMenuItem';\n\ntype DropdownMenuItemElement = React.ElementRef<typeof MenuPrimitive.Item>;\ntype MenuItemProps = Radix.ComponentPropsWithoutRef<typeof MenuPrimitive.Item>;\ninterface DropdownMenuItemProps extends MenuItemProps {}\n\nconst DropdownMenuItem = React.forwardRef<DropdownMenuItemElement, DropdownMenuItemProps>(\n  (props: ScopedProps<DropdownMenuItemProps>, forwardedRef) => {\n    const { __scopeDropdownMenu, ...itemProps } = props;\n    const menuScope = useMenuScope(__scopeDropdownMenu);\n    return <MenuPrimitive.Item {...menuScope} {...itemProps} ref={forwardedRef} />;\n  }\n);\n\nDropdownMenuItem.displayName = ITEM_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuTriggerItem\n * -----------------------------------------------------------------------------------------------*/\n\nconst TRIGGER_ITEM_NAME = 'DropdownMenuTriggerItem';\n\ntype DropdownMenuTriggerItemElement = React.ElementRef<typeof MenuPrimitive.SubTrigger>;\ntype MenuSubTriggerProps = Radix.ComponentPropsWithoutRef<typeof MenuPrimitive.SubTrigger>;\ninterface DropdownMenuTriggerItemProps extends MenuSubTriggerProps {}\n\nconst DropdownMenuTriggerItem = React.forwardRef<\n  DropdownMenuTriggerItemElement,\n  DropdownMenuTriggerItemProps\n>((props: ScopedProps<DropdownMenuTriggerItemProps>, forwardedRef) => {\n  const { __scopeDropdownMenu, ...triggerItemProps } = props;\n  const menuScope = useMenuScope(__scopeDropdownMenu);\n  return <MenuPrimitive.SubTrigger {...menuScope} {...triggerItemProps} ref={forwardedRef} />;\n});\n\nDropdownMenuTriggerItem.displayName = TRIGGER_ITEM_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuCheckboxItem\n * -----------------------------------------------------------------------------------------------*/\n\nconst CHECKBOX_ITEM_NAME = 'DropdownMenuCheckboxItem';\n\ntype DropdownMenuCheckboxItemElement = React.ElementRef<typeof MenuPrimitive.CheckboxItem>;\ntype MenuCheckboxItemProps = Radix.ComponentPropsWithoutRef<typeof MenuPrimitive.CheckboxItem>;\ninterface DropdownMenuCheckboxItemProps extends MenuCheckboxItemProps {}\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  DropdownMenuCheckboxItemElement,\n  DropdownMenuCheckboxItemProps\n>((props: ScopedProps<DropdownMenuCheckboxItemProps>, forwardedRef) => {\n  const { __scopeDropdownMenu, ...checkboxItemProps } = props;\n  const menuScope = useMenuScope(__scopeDropdownMenu);\n  return <MenuPrimitive.CheckboxItem {...menuScope} {...checkboxItemProps} ref={forwardedRef} />;\n});\n\nDropdownMenuCheckboxItem.displayName = CHECKBOX_ITEM_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuRadioGroup\n * -----------------------------------------------------------------------------------------------*/\n\nconst RADIO_GROUP_NAME = 'DropdownMenuRadioGroup';\n\ntype DropdownMenuRadioGroupElement = React.ElementRef<typeof MenuPrimitive.RadioGroup>;\ntype MenuRadioGroupProps = Radix.ComponentPropsWithoutRef<typeof MenuPrimitive.RadioGroup>;\ninterface DropdownMenuRadioGroupProps extends MenuRadioGroupProps {}\n\nconst DropdownMenuRadioGroup = React.forwardRef<\n  DropdownMenuRadioGroupElement,\n  DropdownMenuRadioGroupProps\n>((props: ScopedProps<DropdownMenuRadioGroupProps>, forwardedRef) => {\n  const { __scopeDropdownMenu, ...radioGroupProps } = props;\n  const menuScope = useMenuScope(__scopeDropdownMenu);\n  return <MenuPrimitive.RadioGroup {...menuScope} {...radioGroupProps} ref={forwardedRef} />;\n});\n\nDropdownMenuRadioGroup.displayName = RADIO_GROUP_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuRadioItem\n * -----------------------------------------------------------------------------------------------*/\n\nconst RADIO_ITEM_NAME = 'DropdownMenuRadioItem';\n\ntype DropdownMenuRadioItemElement = React.ElementRef<typeof MenuPrimitive.RadioItem>;\ntype MenuRadioItemProps = Radix.ComponentPropsWithoutRef<typeof MenuPrimitive.RadioItem>;\ninterface DropdownMenuRadioItemProps extends MenuRadioItemProps {}\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  DropdownMenuRadioItemElement,\n  DropdownMenuRadioItemProps\n>((props: ScopedProps<DropdownMenuRadioItemProps>, forwardedRef) => {\n  const { __scopeDropdownMenu, ...radioItemProps } = props;\n  const menuScope = useMenuScope(__scopeDropdownMenu);\n  return <MenuPrimitive.RadioItem {...menuScope} {...radioItemProps} ref={forwardedRef} />;\n});\n\nDropdownMenuRadioItem.displayName = RADIO_ITEM_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuItemIndicator\n * -----------------------------------------------------------------------------------------------*/\n\nconst INDICATOR_NAME = 'DropdownMenuItemIndicator';\n\ntype DropdownMenuItemIndicatorElement = React.ElementRef<typeof MenuPrimitive.ItemIndicator>;\ntype MenuItemIndicatorProps = Radix.ComponentPropsWithoutRef<typeof MenuPrimitive.ItemIndicator>;\ninterface DropdownMenuItemIndicatorProps extends MenuItemIndicatorProps {}\n\nconst DropdownMenuItemIndicator = React.forwardRef<\n  DropdownMenuItemIndicatorElement,\n  DropdownMenuItemIndicatorProps\n>((props: ScopedProps<DropdownMenuItemIndicatorProps>, forwardedRef) => {\n  const { __scopeDropdownMenu, ...itemIndicatorProps } = props;\n  const menuScope = useMenuScope(__scopeDropdownMenu);\n  return <MenuPrimitive.ItemIndicator {...menuScope} {...itemIndicatorProps} ref={forwardedRef} />;\n});\n\nDropdownMenuItemIndicator.displayName = INDICATOR_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuSeparator\n * -----------------------------------------------------------------------------------------------*/\n\nconst SEPARATOR_NAME = 'DropdownMenuSeparator';\n\ntype DropdownMenuSeparatorElement = React.ElementRef<typeof MenuPrimitive.Separator>;\ntype MenuSeparatorProps = Radix.ComponentPropsWithoutRef<typeof MenuPrimitive.Separator>;\ninterface DropdownMenuSeparatorProps extends MenuSeparatorProps {}\n\nconst DropdownMenuSeparator = React.forwardRef<\n  DropdownMenuSeparatorElement,\n  DropdownMenuSeparatorProps\n>((props: ScopedProps<DropdownMenuSeparatorProps>, forwardedRef) => {\n  const { __scopeDropdownMenu, ...separatorProps } = props;\n  const menuScope = useMenuScope(__scopeDropdownMenu);\n  return <MenuPrimitive.Separator {...menuScope} {...separatorProps} ref={forwardedRef} />;\n});\n\nDropdownMenuSeparator.displayName = SEPARATOR_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuArrow\n * -----------------------------------------------------------------------------------------------*/\n\nconst ARROW_NAME = 'DropdownMenuArrow';\n\ntype DropdownMenuArrowElement = React.ElementRef<typeof MenuPrimitive.Arrow>;\ntype MenuArrowProps = Radix.ComponentPropsWithoutRef<typeof MenuPrimitive.Arrow>;\ninterface DropdownMenuArrowProps extends MenuArrowProps {}\n\nconst DropdownMenuArrow = React.forwardRef<DropdownMenuArrowElement, DropdownMenuArrowProps>(\n  (props: ScopedProps<DropdownMenuArrowProps>, forwardedRef) => {\n    const { __scopeDropdownMenu, ...arrowProps } = props;\n    const menuScope = useMenuScope(__scopeDropdownMenu);\n    return <MenuPrimitive.Arrow {...menuScope} {...arrowProps} ref={forwardedRef} />;\n  }\n);\n\nDropdownMenuArrow.displayName = ARROW_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst Root = DropdownMenu;\nconst Trigger = DropdownMenuTrigger;\nconst Content = DropdownMenuContent;\nconst Group = DropdownMenuGroup;\nconst Label = DropdownMenuLabel;\nconst Item = DropdownMenuItem;\nconst TriggerItem = DropdownMenuTriggerItem;\nconst CheckboxItem = DropdownMenuCheckboxItem;\nconst RadioGroup = DropdownMenuRadioGroup;\nconst RadioItem = DropdownMenuRadioItem;\nconst ItemIndicator = DropdownMenuItemIndicator;\nconst Separator = DropdownMenuSeparator;\nconst Arrow = DropdownMenuArrow;\n\nexport {\n  createDropdownMenuScope,\n  //\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuGroup,\n  DropdownMenuLabel,\n  DropdownMenuItem,\n  DropdownMenuTriggerItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioGroup,\n  DropdownMenuRadioItem,\n  DropdownMenuItemIndicator,\n  DropdownMenuSeparator,\n  DropdownMenuArrow,\n  //\n  Root,\n  Trigger,\n  Content,\n  Group,\n  Label,\n  Item,\n  TriggerItem,\n  CheckboxItem,\n  RadioGroup,\n  RadioItem,\n  ItemIndicator,\n  Separator,\n  Arrow,\n};\nexport type {\n  DropdownMenuProps,\n  DropdownMenuTriggerProps,\n  DropdownMenuContentProps,\n  DropdownMenuGroupProps,\n  DropdownMenuLabelProps,\n  DropdownMenuItemProps,\n  DropdownMenuTriggerItemProps,\n  DropdownMenuCheckboxItemProps,\n  DropdownMenuRadioGroupProps,\n  DropdownMenuRadioItemProps,\n  DropdownMenuItemIndicatorProps,\n  DropdownMenuSeparatorProps,\n  DropdownMenuArrowProps,\n};\n"]},"metadata":{},"sourceType":"module"}