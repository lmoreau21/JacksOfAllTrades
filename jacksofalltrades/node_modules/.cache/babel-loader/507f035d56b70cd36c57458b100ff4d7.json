{"ast":null,"code":"import { __assign } from './_virtual/_tslib.js';\nvar defaultOptions = {\n  deferEvents: false\n};\n\nvar Scheduler =\n/*#__PURE__*/\n\n/** @class */\nfunction () {\n  function Scheduler(options) {\n    this.processingEvent = false;\n    this.queue = [];\n    this.initialized = false;\n    this.options = __assign(__assign({}, defaultOptions), options);\n  }\n\n  Scheduler.prototype.initialize = function (callback) {\n    this.initialized = true;\n\n    if (callback) {\n      if (!this.options.deferEvents) {\n        this.schedule(callback);\n        return;\n      }\n\n      this.process(callback);\n    }\n\n    this.flushEvents();\n  };\n\n  Scheduler.prototype.schedule = function (task) {\n    if (!this.initialized || this.processingEvent) {\n      this.queue.push(task);\n      return;\n    }\n\n    if (this.queue.length !== 0) {\n      throw new Error('Event queue should be empty when it is not processing events');\n    }\n\n    this.process(task);\n    this.flushEvents();\n  };\n\n  Scheduler.prototype.clear = function () {\n    this.queue = [];\n  };\n\n  Scheduler.prototype.flushEvents = function () {\n    var nextCallback = this.queue.shift();\n\n    while (nextCallback) {\n      this.process(nextCallback);\n      nextCallback = this.queue.shift();\n    }\n  };\n\n  Scheduler.prototype.process = function (callback) {\n    this.processingEvent = true;\n\n    try {\n      callback();\n    } catch (e) {\n      // there is no use to keep the future events\n      // as the situation is not anymore the same\n      this.clear();\n      throw e;\n    } finally {\n      this.processingEvent = false;\n    }\n  };\n\n  return Scheduler;\n}();\n\nexport { Scheduler };","map":{"version":3,"names":["__assign","defaultOptions","deferEvents","Scheduler","options","processingEvent","queue","initialized","prototype","initialize","callback","schedule","process","flushEvents","task","push","length","Error","clear","nextCallback","shift","e"],"sources":["C:/Users/lmore/OneDrive/Documents/GitHub/JacksOfAllTrades/jacksofalltrades/node_modules/xstate/es/scheduler.js"],"sourcesContent":["import { __assign } from './_virtual/_tslib.js';\n\nvar defaultOptions = {\n  deferEvents: false\n};\n\nvar Scheduler =\n/*#__PURE__*/\n\n/** @class */\nfunction () {\n  function Scheduler(options) {\n    this.processingEvent = false;\n    this.queue = [];\n    this.initialized = false;\n    this.options = __assign(__assign({}, defaultOptions), options);\n  }\n\n  Scheduler.prototype.initialize = function (callback) {\n    this.initialized = true;\n\n    if (callback) {\n      if (!this.options.deferEvents) {\n        this.schedule(callback);\n        return;\n      }\n\n      this.process(callback);\n    }\n\n    this.flushEvents();\n  };\n\n  Scheduler.prototype.schedule = function (task) {\n    if (!this.initialized || this.processingEvent) {\n      this.queue.push(task);\n      return;\n    }\n\n    if (this.queue.length !== 0) {\n      throw new Error('Event queue should be empty when it is not processing events');\n    }\n\n    this.process(task);\n    this.flushEvents();\n  };\n\n  Scheduler.prototype.clear = function () {\n    this.queue = [];\n  };\n\n  Scheduler.prototype.flushEvents = function () {\n    var nextCallback = this.queue.shift();\n\n    while (nextCallback) {\n      this.process(nextCallback);\n      nextCallback = this.queue.shift();\n    }\n  };\n\n  Scheduler.prototype.process = function (callback) {\n    this.processingEvent = true;\n\n    try {\n      callback();\n    } catch (e) {\n      // there is no use to keep the future events\n      // as the situation is not anymore the same\n      this.clear();\n      throw e;\n    } finally {\n      this.processingEvent = false;\n    }\n  };\n\n  return Scheduler;\n}();\n\nexport { Scheduler };\n"],"mappings":"AAAA,SAASA,QAAT,QAAyB,sBAAzB;AAEA,IAAIC,cAAc,GAAG;EACnBC,WAAW,EAAE;AADM,CAArB;;AAIA,IAAIC,SAAS;AACb;;AAEA;AACA,YAAY;EACV,SAASA,SAAT,CAAmBC,OAAnB,EAA4B;IAC1B,KAAKC,eAAL,GAAuB,KAAvB;IACA,KAAKC,KAAL,GAAa,EAAb;IACA,KAAKC,WAAL,GAAmB,KAAnB;IACA,KAAKH,OAAL,GAAeJ,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKC,cAAL,CAAT,EAA+BG,OAA/B,CAAvB;EACD;;EAEDD,SAAS,CAACK,SAAV,CAAoBC,UAApB,GAAiC,UAAUC,QAAV,EAAoB;IACnD,KAAKH,WAAL,GAAmB,IAAnB;;IAEA,IAAIG,QAAJ,EAAc;MACZ,IAAI,CAAC,KAAKN,OAAL,CAAaF,WAAlB,EAA+B;QAC7B,KAAKS,QAAL,CAAcD,QAAd;QACA;MACD;;MAED,KAAKE,OAAL,CAAaF,QAAb;IACD;;IAED,KAAKG,WAAL;EACD,CAbD;;EAeAV,SAAS,CAACK,SAAV,CAAoBG,QAApB,GAA+B,UAAUG,IAAV,EAAgB;IAC7C,IAAI,CAAC,KAAKP,WAAN,IAAqB,KAAKF,eAA9B,EAA+C;MAC7C,KAAKC,KAAL,CAAWS,IAAX,CAAgBD,IAAhB;MACA;IACD;;IAED,IAAI,KAAKR,KAAL,CAAWU,MAAX,KAAsB,CAA1B,EAA6B;MAC3B,MAAM,IAAIC,KAAJ,CAAU,8DAAV,CAAN;IACD;;IAED,KAAKL,OAAL,CAAaE,IAAb;IACA,KAAKD,WAAL;EACD,CAZD;;EAcAV,SAAS,CAACK,SAAV,CAAoBU,KAApB,GAA4B,YAAY;IACtC,KAAKZ,KAAL,GAAa,EAAb;EACD,CAFD;;EAIAH,SAAS,CAACK,SAAV,CAAoBK,WAApB,GAAkC,YAAY;IAC5C,IAAIM,YAAY,GAAG,KAAKb,KAAL,CAAWc,KAAX,EAAnB;;IAEA,OAAOD,YAAP,EAAqB;MACnB,KAAKP,OAAL,CAAaO,YAAb;MACAA,YAAY,GAAG,KAAKb,KAAL,CAAWc,KAAX,EAAf;IACD;EACF,CAPD;;EASAjB,SAAS,CAACK,SAAV,CAAoBI,OAApB,GAA8B,UAAUF,QAAV,EAAoB;IAChD,KAAKL,eAAL,GAAuB,IAAvB;;IAEA,IAAI;MACFK,QAAQ;IACT,CAFD,CAEE,OAAOW,CAAP,EAAU;MACV;MACA;MACA,KAAKH,KAAL;MACA,MAAMG,CAAN;IACD,CAPD,SAOU;MACR,KAAKhB,eAAL,GAAuB,KAAvB;IACD;EACF,CAbD;;EAeA,OAAOF,SAAP;AACD,CAlED,EAJA;;AAwEA,SAASA,SAAT"},"metadata":{},"sourceType":"module"}