import{__rest as e}from"tslib";import*as a from"react";import s from"classnames";import{classNameModifierByFlag as t,classNameModifier as i}from"../shared/utils.js";import{ComponentClassNames as l}from"../shared/constants.js";import{Flex as c}from"../Flex/Flex.js";import{Input as o}from"../Input/Input.js";import{Label as r}from"../Label/Label.js";import{useStableId as d}from"../utils/useStableId.js";import{useSwitch as m}from"./useSwitch.js";import{View as n}from"../View/View.js";import{VisuallyHidden as h}from"../VisuallyHidden/VisuallyHidden.js";const b=a.forwardRef(((b,u)=>{var{className:p,defaultChecked:k,id:f,isChecked:C,isDisabled:w,isLabelHidden:S,label:j,labelPosition:F,name:g,onChange:N,size:E,thumbColor:T,trackCheckedColor:H,trackColor:L,value:v}=b,x=e(b,["className","defaultChecked","id","isChecked","isDisabled","isLabelHidden","label","labelPosition","name","onChange","size","thumbColor","trackCheckedColor","trackColor","value"]);const{isOn:y,changeHandler:I,isFocused:V,setIsFocused:z}=m({onChange:N,isChecked:C,defaultChecked:k,isDisabled:w}),D=d(f),O=S?h:n,P=s(l.SwitchTrack,t(l.SwitchTrack,"checked",y),t(l.SwitchTrack,"disabled",w),t(l.SwitchTrack,"focused",V)),W=s(l.SwitchThumb,t(l.SwitchThumb,"checked",y),t(l.SwitchThumb,"disabled",w));return a.createElement(c,Object.assign({className:s(l.SwitchField,i(l.SwitchField,E),p),"data-size":E,"data-label-position":F,ref:u},x),a.createElement(h,null,a.createElement(o,{role:"switch",type:"checkbox",id:D,onChange:I,disabled:w,name:g,checked:y,value:v,onFocus:()=>{z(!0)},onBlur:()=>{z(!1)}})),a.createElement(r,{htmlFor:D,className:s(l.SwitchWrapper,i(l.SwitchWrapper,F)),"data-label-position":F},a.createElement(O,{as:"span",className:l.SwitchLabel},j),a.createElement(n,{as:"span",className:P,"data-checked":y,"data-disabled":w,"data-focused":V,backgroundColor:y?H:L},a.createElement(n,{as:"span",className:W,"data-checked":y,"data-disabled":w,backgroundColor:T}))))}));b.displayName="SwitchField";export{b as SwitchField};
