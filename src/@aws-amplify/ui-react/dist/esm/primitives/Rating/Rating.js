import{__rest as e}from"tslib";import*as o from"react";import t from"classnames";import{classNameModifier as i}from"../shared/utils.js";import{ComponentClassNames as l}from"../shared/constants.js";import{Flex as r}from"../Flex/Flex.js";import"../View/View.js";import{IconStar as a}from"../Icon/icons/IconStar.js";import{isIconFilled as m,isIconEmpty as n,isIconMixed as s}from"./utils.js";import{RatingIcon as c}from"./RatingIcon.js";import{RatingMixedIcon as f}from"./RatingMixedIcon.js";import{VisuallyHidden as p}from"../VisuallyHidden/VisuallyHidden.js";const y=5,u=0,d=o.forwardRef(((d,g)=>{var{className:j,emptyColor:I,emptyIcon:x,fillColor:C,icon:E=o.createElement(a,null),maxValue:N=y,size:R,value:V=u}=d,v=e(d,["className","emptyColor","emptyIcon","fillColor","icon","maxValue","size","value"]);const w=new Array(Math.ceil(N)).fill(1).map(((e,t)=>{const i=t+1;return m(i,V)?o.createElement(c,{key:t.toString(),icon:E,fill:C,className:"amplify-rating-icon-filled"}):n(i,V)?o.createElement(c,{key:t.toString(),icon:x||E,fill:I,className:"amplify-rating-icon-empty"}):s(i,V)?o.createElement(f,{key:t.toString(),fillIcon:E,emptyIcon:x||E,value:V,fillColor:C,emptyColor:I}):void 0}));return o.createElement(r,Object.assign({className:t(l.Rating,i(l.Rating,R),j),"data-size":R,ref:g},v),w,o.createElement(p,null,V," out of ",N," rating"))}));d.displayName="Rating";export{d as Rating};
