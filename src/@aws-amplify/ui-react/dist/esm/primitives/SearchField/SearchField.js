import{__rest as e}from"tslib";import o from"classnames";import*as i from"react";import{ComponentClassNames as a}from"../shared/constants.js";import{FieldClearButton as r}from"../Field/FieldClearButton.js";import"../Field/FieldDescription.js";import"../Field/FieldErrorMessage.js";import{strHasLength as t}from"../shared/utils.js";import{SearchFieldButton as l}from"./SearchFieldButton.js";import{TextField as n}from"../TextField/TextField.js";import{useSearchField as s}from"./useSearchField.js";const m=i.forwardRef(((m,d)=>{var{autoComplete:c="off",className:p,isDisabled:u,clearButtonLabel:f,labelHidden:b=!0,name:C="q",onSubmit:F,onClear:j,searchButtonRef:h,size:D}=m,S=e(m,["autoComplete","className","isDisabled","clearButtonLabel","labelHidden","name","onSubmit","onClear","searchButtonRef","size"]);const{value:B,onClearHandler:E,onInput:x,onKeyDown:z,onClick:R,composedRefs:k}=s({onSubmit:F,onClear:j,externalRef:d});return i.createElement(n,Object.assign({autoComplete:c,className:o(a.SearchField,p),labelHidden:b,innerEndComponent:i.createElement(r,{ariaLabel:f,excludeFromTabOrder:!0,isVisible:t(B),onClick:E,size:D,variation:"link"}),isDisabled:u,isMultiline:!1,name:C,onInput:x,onKeyDown:z,outerEndComponent:i.createElement(l,{isDisabled:u,onClick:R,ref:h,size:D}),ref:k,size:D,value:B},S))}));m.displayName="SearchField";export{m as SearchField};
