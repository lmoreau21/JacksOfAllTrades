import{__rest as e}from"tslib";import*as r from"react";import t from"classnames";import{ComponentClassNames as s}from"../shared/constants.js";import"../Field/FieldClearButton.js";import{FieldDescription as i}from"../Field/FieldDescription.js";import{FieldErrorMessage as l}from"../Field/FieldErrorMessage.js";import{Flex as o}from"../Flex/Flex.js";import{Label as a}from"../Label/Label.js";import{Select as d}from"../Select/Select.js";import{splitPrimitiveProps as n}from"../shared/styleUtils.js";import{useStableId as m}from"../utils/useStableId.js";const c=r.forwardRef(((c,p)=>{const{children:f,className:h,descriptiveText:b,errorMessage:F,hasError:j=!1,id:E,label:u,labelHidden:g=!1,options:v,size:y,testId:S}=c,x=e(c,["children","className","descriptiveText","errorMessage","hasError","id","label","labelHidden","options","size","testId"]),I=m(E),z=m(),H=b?z:void 0,{flexContainerStyleProps:M,baseStyleProps:N,rest:T}=n(x);return r.createElement(o,Object.assign({className:t(s.Field,s.SelectField,h),"data-size":y,testId:S},N,M),r.createElement(a,{htmlFor:I,visuallyHidden:g},u),r.createElement(i,{id:z,labelHidden:g,descriptiveText:b}),r.createElement(d,Object.assign({"aria-describedby":H,hasError:j,id:I,ref:p,size:y},T),(({children:e,options:t})=>e?((null==t?void 0:t.length)&&console.warn("Amplify UI: <SelectField> component  defaults to rendering children over `options`. When using the `options` prop, omit children."),e):null==t?void 0:t.map(((e,t)=>r.createElement("option",{label:e,value:e,key:`${e}-${t}`},e))))({children:f,options:v})),r.createElement(l,{hasError:j,errorMessage:F}))}));c.displayName="SelectField";export{c as SelectField};
