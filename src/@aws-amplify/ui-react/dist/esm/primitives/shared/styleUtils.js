import{__rest as o}from"tslib";import*as n from"react";import{ComponentPropsToStylePropsMap as t}from"../types/style.js";import{getValueAtCurrentBreakpoint as r}from"./responsive/utils.js";import{useBreakpoint as e}from"./responsive/useBreakpoint.js";import"../../components/ThemeProvider/AmplifyContext.js";import{useTheme as i}from"../../hooks/useTheme.js";import{isNullOrEmptyString as a,isEmptyString as p}from"./utils.js";const s=o=>"auto"===o||"number"==typeof o&&!isNaN(o)||"string"==typeof o&&!isNaN(parseFloat(o)),l=o=>"auto"===o?"auto":`span ${o}`,m=o=>{if(s(o))return l(o);if(Array.isArray(o))return o.map((o=>l(o)));if("object"==typeof o&&null!=o){const n={};return Object.entries(o).forEach((([o,t])=>{n[o]=l(t)})),n}return null},c=t=>{const{rowSpan:r,columnSpan:e,row:i,column:p}=t,s=o(t,["rowSpan","columnSpan","row","column"]),{rowFromSpanValue:l,columnFromSpanValue:c}=n.useMemo((()=>({rowFromSpanValue:m(r),columnFromSpanValue:m(e)})),[r,e]);return Object.assign({row:a(i)?l:i,column:a(p)?c:p},s)},g=({props:o={},style:n={},breakpoint:e,breakpoints:i})=>{const a={};return Object.keys(o).filter((n=>null!=o[n])).forEach((s=>{if(s in t){if(!p(o[s])){const a=o[s],p=t[s];n=Object.assign(Object.assign({},n),{[p]:r({values:a,breakpoint:e,breakpoints:i,propKey:s})})}}else a[s]=o[s]})),{propStyles:n,nonStyleProps:a}},u=(o,t)=>{const{breakpoints:{values:r,defaultBreakpoint:a}}=i(),p=e({breakpoints:r,defaultBreakpoint:a}),s=c(o);return n.useMemo((()=>g({props:s,style:t,breakpoint:p,breakpoints:r})),[s,t,r,p])},d={alignContent:!0,alignItems:!0,direction:!0,gap:!0,justifyContent:!0,wrap:!0,columnGap:!0,rowGap:!0},f={alignSelf:!0,area:!0,backgroundColor:!0,backgroundImage:!0,basis:!0,border:!0,borderRadius:!0,bottom:!0,boxShadow:!0,color:!0,column:!0,columnEnd:!0,columnSpan:!0,columnStart:!0,display:!0,flex:!0,fontFamily:!0,fontSize:!0,fontStyle:!0,fontWeight:!0,grow:!0,height:!0,left:!0,letterSpacing:!0,lineHeight:!0,margin:!0,marginBlock:!0,marginBlockEnd:!0,marginBlockStart:!0,marginBottom:!0,marginInline:!0,marginInlineEnd:!0,marginInlineStart:!0,marginLeft:!0,marginRight:!0,marginTop:!0,maxHeight:!0,maxWidth:!0,minHeight:!0,minWidth:!0,opacity:!0,order:!0,overflow:!0,padding:!0,paddingBlock:!0,paddingBlockEnd:!0,paddingBlockStart:!0,paddingBottom:!0,paddingInline:!0,paddingInlineEnd:!0,paddingInlineStart:!0,paddingLeft:!0,paddingRight:!0,paddingTop:!0,position:!0,right:!0,row:!0,rowEnd:!0,rowSpan:!0,rowStart:!0,shrink:!0,textAlign:!0,textDecoration:!0,textTransform:!0,top:!0,transform:!0,transformOrigin:!0,width:!0,whiteSpace:!0},S=o=>{const n={flexContainerStyleProps:{},baseStyleProps:{},rest:{}};return Object.keys(o).forEach((t=>{t in d?n.flexContainerStyleProps[t]=o[t]:t in f?n.baseStyleProps[t]=o[t]:n.rest[t]=o[t]})),n};export{m as convertGridSpan,g as convertStylePropsToStyleObj,l as getGridSpan,s as isSpanPrimitiveValue,S as splitPrimitiveProps,u as useStyles,c as useTransformStyleProps};
